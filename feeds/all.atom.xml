<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>nafoto'z_blog</title><link href="https://naoto-yamaguchi.github.io/site/" rel="alternate"></link><link href="https://naoto-yamaguchi.github.io/site/feeds/all.atom.xml" rel="self"></link><id>https://naoto-yamaguchi.github.io/site/</id><updated>2019-10-03T00:00:00+09:00</updated><subtitle>nafoto'z_blog</subtitle><entry><title>細胞農業とは</title><link href="https://naoto-yamaguchi.github.io/site/xi-bao-nong-ye/what_is_cellular_agriculture.html" rel="alternate"></link><published>2019-10-03T00:00:00+09:00</published><updated>2019-10-03T00:00:00+09:00</updated><author><name>Naoto Yamaguchi</name></author><id>tag:naoto-yamaguchi.github.io,2019-10-03:/site/xi-bao-nong-ye/what_is_cellular_agriculture.html</id><summary type="html">&lt;p&gt;細胞農業とは&lt;/p&gt;</summary><content type="html">&lt;h1&gt;目次&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#motivation"&gt;動機、目的&lt;/a&gt;です。
そして、これに加わる第6の食糧生産方法が、今回紹介した「培養」なのです。&lt;/li&gt;
&lt;li&gt;&lt;a href="#what_is_cellular_agriculture"&gt;細胞農業とは？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#references"&gt;参考&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div id="motivation"&gt;

# 概要、動機

&lt;/div&gt;

&lt;div id="what_is_cellular_agriculture"&gt;

# 培養肉って？〜細胞農業による食糧生産〜

&lt;/div&gt;

&lt;p&gt;皆さん、「細胞農業」という言葉はご存知ですか？恐らくほとんどの人が聞いたことがないでしょう。では、「培養肉」もしくは「人工肉」はどうでしょうか？これなら聞いたことがあるという人もいると思います。
一方、聞いたことはあってもどういうものか詳しくは知らないという方が大半なのではないかと思います。
そんな皆さんにあまり馴染みのない「培養肉」そして「細胞農業」についてお話したいと思います。&lt;/p&gt;
&lt;h2&gt;培養肉事例の紹介&lt;/h2&gt;
&lt;p&gt;いきなり培養肉と言われてもピンとこない方もいるかもしれないので、具体的な例から見ていきましょう。&lt;/p&gt;
&lt;p&gt;&lt;img src="images/aleph_farms_steak.png"&gt;
&lt;img src="images/integriculture_foie_gras.png"&gt;&lt;/p&gt;
&lt;p&gt;これは、左がステーキ肉、右がフォアグラです。&lt;/p&gt;
&lt;p&gt;どちらも本物の肉です。本物の肉、なのですが、動物を屠殺場で殺して調理した肉ではありません。これは「細胞培養」という技術を用いて実験室で作られた肉なのです。
ざっくり言うと、細胞=体を構成する基本単位、培養=細胞に栄養を与えを育てること、です。
牛や豚から採取した筋肉細胞を培養して上手に増やすと我々が普段食べているミンチ肉やステーキ肉のようになりますし、鶏の肝臓細胞をとってきて上手く培養するとフォアグラになります。
今まで動物を育てて出来上がった肉をとって食べていましたが、培養肉では、発想が異なり、動物からとってきた細胞を動物の体外で育ててそれを肉として食べるということです。
このようにして作られたのが上の写真に写っている肉なのです。
1枚目の写真はイスラエル発のスタートアップ、Aleph Farmsが2019年8月に発表した培養ステーキ肉、2枚目の写真は日本発のスタートアップ、Integriculture, Inc.が同じ8月に発表した培養フォアグラです。&lt;/p&gt;
&lt;p&gt;とても美味しそうです。実際、これらの肉は一流のシェフによって調理され試食会が行われたそうですが、とても美味しかったらしいです。（食べてみたい...）&lt;/p&gt;
&lt;p&gt;やはり何か不気味に思う人もいるかもしれませんが、この技術は特段驚くほどのものではありません。
培養（=細胞を育てる）操作は、生物学や医学などの研究において日常的に使われているものであります。
何か魔法をかけている訳でもありません。これは、生物の力を利用したものなのです。
家庭菜園に馴染みのある人ならわかるかもしれませんが、豆苗やネギの根っこを水につけるとまた育ってきて、再度収穫できることがありますよね。再生野菜（リボーンベジタブル、略してリボベジ）と呼ぶらしいのですが、培養肉でやっていることのイメージはこれに大変近いです。
これらの野菜は水につけておくだけですが、肉の場合は、細胞が育つために必要な栄養が揃った環境で培養することで、同じように育て増やすことができます。&lt;/p&gt;
&lt;p&gt;生物の力を利用したもう1つの例は、「発酵」です。
発酵とは、目に見えない微生物が食べ物など有機物を分解し、人間にとって有益なものになることです。人間にとってマイナスなものになる場合は腐敗と呼ばれることが多いです。（実は発酵と腐敗の分類は人間の主観によるものなのです）
人間は長い歴史の中で、「人間に有益な微生物」を見つけ、そいつらが気持ちよく働ける環境をつくる技術を開発してきました。
ご存知の通り日本は発酵大国であり、醤油、納豆、お酒、パン、チーズ、ヨーグルトなど発酵によって作られた美味しい食べ物を日常的に食べています。
こう見てみると、生物の力を利用し食料を生産することははるか昔からやられてきたことであり、我々日本人も比較的馴染みの深いものであるはずです。&lt;/p&gt;
&lt;p&gt;ここまでの話を含めて整理してみます。
人類がこれまでの歴史でも用いてきた食料供給方法は大きく分けて5つあります。狩猟、栽培、飼育、合成、発酵(醸造)です。
&lt;img src="images/food_production_method.png"&gt;&lt;/p&gt;
&lt;p&gt;そして、これに加わる第6の食糧生産方法が、今回紹介した「培養」なのです。
この培養を利用して、食品（肉、牛乳、卵、魚など）や革製品、それに関わる風味、芳香などを、作り出すことを目指す分野が細胞農業なのです。
そのため、細胞農業の対象は牛や鶏の肉だけにとどまりません、エビなどの魚介類だったり、酵母を培養してタンパク質を作らせることで、普通の牛乳や卵と分子レベルで同じタンパク質を作ることができます。また皮革製品や香料なども作ることができます。
このように、新しい食糧生産方法が細胞農業であり、その中の培養肉が最近注目を集めているのです。&lt;/p&gt;
&lt;p&gt;次回は、なぜ現在そのようなトレンドが盛んになっているのか、世界の代替タンパク質市場の現状と共に、細胞農業が注目される理由について考えたいと思います。&lt;/p&gt;
&lt;div id="references"&gt;

# 参考

&lt;/div&gt;</content><category term="細胞農業"></category><category term="細胞農業"></category><category term="Cellular Agriculture"></category></entry><entry><title>サッカー観戦あれこれ@プレミア,リーガ,エールディビジ</title><link href="https://naoto-yamaguchi.github.io/site/travel-journal/tj_2019_football.html" rel="alternate"></link><published>2019-09-13T00:00:00+09:00</published><updated>2019-09-13T00:00:00+09:00</updated><author><name>Naoto Yamaguchi</name></author><id>tag:naoto-yamaguchi.github.io,2019-09-13:/site/travel-journal/tj_2019_football.html</id><summary type="html">&lt;p&gt;欧州サッカー半端ないって！！！！プレミアはまじでよかった&lt;/p&gt;</summary><content type="html">&lt;h1&gt;動機&lt;/h1&gt;
&lt;h1&gt;目次&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;観戦した試合&lt;ul&gt;
&lt;li&gt;(1) 2019.08.10 WestHam vs ManchesterCity @London Stadium (0-5)&lt;/li&gt;
&lt;li&gt;(2) 2019.08.10 TottenhamHotSpurs vs AstonVilla @TottenhamHotSpur Stadium (3-1)&lt;/li&gt;
&lt;li&gt;(3) 2019.08.17 Arsenal vs Burnley @Emirates Stadium (2-1)&lt;/li&gt;
&lt;li&gt;(4) 2019.08.25 FC Utrecht vs VVV Venlo (1-2)&lt;/li&gt;
&lt;li&gt;(5) 2019.09.01 17:00 Valencia vs Mallorca @Mestalla Stadium (0-2)&lt;/li&gt;
&lt;li&gt;(6) 2019.09.01 21:00 Vilarreal vs Real Madrid @ (2-2)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;チケットの取り方&lt;ul&gt;
&lt;li&gt;そんなに難しくない。全てOfficial Siteから購入可能。&lt;/li&gt;
&lt;li&gt;よほど人気の試合以外公式サイトで買える。アウェーの席を取るのは難しい。Viagoなど代理店もあるが自分は利用しなかった。Viagoを利用して、(6)の試合のチケットを購入した人には会ったので、正しくやればきちんと手に入る模様。ただて手数料がかかる。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;感想&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;各国のフットボール、ファンの違い&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;持ち込みできないもの
なぜかペットボトルの蓋はダメ
荷物検査の効率の悪さ&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="Travel Journal"></category><category term="Travel Journal"></category><category term="Football"></category></entry><entry><title>6,7月の振り返り</title><link href="https://naoto-yamaguchi.github.io/site/diary/diary_1907.html" rel="alternate"></link><published>2019-09-11T00:00:00+09:00</published><updated>2019-09-11T00:00:00+09:00</updated><author><name>Naoto Yamaguchi</name></author><id>tag:naoto-yamaguchi.github.io,2019-09-11:/site/diary/diary_1907.html</id><summary type="html">&lt;p&gt;7月の振り返り&lt;/p&gt;</summary><content type="html">&lt;h1&gt;6月やったこと&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;CL決勝テレビで観戦 (Liverpool vs Tottenham: 2-1)&lt;ul&gt;
&lt;li&gt;バーでの中継を見ていたが、リアルタイムより少し遅れて放送されていた。隣のおじさんがTwitterで速報を見て、「あ、点入ったらしいよ」とか言って台無しに。さすがにそれはひどいと思った。(思い出すと怒りが湧いてくるので忘れることにします)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;家族で国立劇場で歌舞伎を見た&lt;ul&gt;
&lt;li&gt;歌舞伎教室みたいなものだったからか、歌舞伎の前に舞台や話の解説やSNSタイムがあったりと、初心者にも配慮されていた。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;とにかく課題に追われていた。実験レポートが特に大変でした。&lt;/li&gt;
&lt;li&gt;06/29に横浜Fマリノス vs FC東京 @味の素スタジアム 観戦。久保建英の引退セレモニーを見られた。&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;7月やったこと&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;試験勉強頑張った&lt;ul&gt;
&lt;li&gt;徹夜の日々でした&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;試験真っ只中に、New Harvest 2019に参加&lt;ul&gt;
&lt;li&gt;New Harvest 2019用ポスターも作った&lt;/li&gt;
&lt;li&gt;詳しい記事はこちら。最高でした。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;隅田川花火大会をみんなで鑑賞&lt;/li&gt;
&lt;/ul&gt;</content><category term="Diary"></category><category term="Diary"></category></entry><entry><title>8月の振り返り</title><link href="https://naoto-yamaguchi.github.io/site/diary/diary_1908.html" rel="alternate"></link><published>2019-09-11T00:00:00+09:00</published><updated>2019-09-11T00:00:00+09:00</updated><author><name>Naoto Yamaguchi</name></author><id>tag:naoto-yamaguchi.github.io,2019-09-11:/site/diary/diary_1908.html</id><summary type="html">&lt;p&gt;8月の振り返り&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;/p&gt;
&lt;h1&gt;やったこと&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;富士山ご来光&lt;/li&gt;
&lt;li&gt;友達と食事&lt;/li&gt;
&lt;li&gt;1ヶ月間の旅行（詳しくは旅行記)&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;新しく知ったこと(どうでも良い編)&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;玉ねぎを炒めると甘くなるのは、辛味の元となる硫黄化合物が分解されると同時に細胞壁が破壊されて細胞内から糖分が出てくるから&lt;/li&gt;
&lt;li&gt;ローマ建築の中の吹き抜けをアトリウムと言う&lt;/li&gt;
&lt;li&gt;サッカーチームのFCバルセロナの創設者は、スイス人。チームカラーのblaugrana (blue and garnet)は、そのスイス人の地元チームのバーゼルの色を使ったという説が有力。（カンプノウでの展示）&lt;/li&gt;
&lt;li&gt;スペインは1920-1970年くらいまで独裁国家で、カタルーニャ語は禁止されていた。そのため、その時代のFC Barcelona(カタルーニャ語でFootball Club)は、C de F Barcelona (スペイン語でClub de Football)と呼ばれ、優勝カップでもその名前が刻まれている。&lt;/li&gt;
&lt;/ul&gt;</content><category term="Diary"></category><category term="Diary"></category></entry><entry><title>バレンシア,メスタージャスタジアム,久保選手,ビジャレアル,エスタディオデラセラミカ,スペイン人の優しさ</title><link href="https://naoto-yamaguchi.github.io/site/travel-journal/tj_2019_valencia_villareal.html" rel="alternate"></link><published>2019-09-02T00:00:00+09:00</published><updated>2019-09-02T00:00:00+09:00</updated><author><name>Naoto Yamaguchi</name></author><id>tag:naoto-yamaguchi.github.io,2019-09-02:/site/travel-journal/tj_2019_valencia_villareal.html</id><summary type="html">&lt;p&gt;バレンシア,ビジャレアルでのリーガ観戦記。久保建英選手のリーガデビュー！&lt;/p&gt;</summary><content type="html">&lt;h1&gt;旅行日程&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;バレンシア,メスタージャスタジアムで、Valencia vs Marollcaの観戦。久保くんのベンチ入りが発表されたため急遽チケット購入。&lt;/li&gt;
&lt;li&gt;ビジャレアル,エスタディオセラミカで、Vilarreal vs Real Madridの観戦。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;全然自覚していなかったが、バレンシアとバルセロナは割と遠く、新幹線的なもので2,3時間かかる。東京と名古屋くらいの感覚(?)。サッカーの試合を見に行くためだけに東京名古屋を往復するなんて日本ではやらないと思う...新幹線的なのでそれなりに本数があると思っていたら、Google Mapによると、自分がバルセロナに着いた時点で乗れる一番早い列車のバレンシア到着時刻が18:30頃!!これではチケットを買ったにも関わらず試合が見られない!!と焦り、バスやタクシー,BlaBlaCarなど他の交通手段を探すも見つからず、とりあえず空港のインフォメーションセンターへ。するとお姉さんが優しく対応してくれて、Google Mapや自分では見つけられなかった、Renfe(新幹線的なもの)のチケットを見つけてくれた!到着は18:00前で着くのは前半が終わる頃になってしまうが仕方ない、久保くんが出場するとしても後半だろうし折角チケットも買いメスタージャスタジアムに行けないのも悲しいと思い、その場で購入させてもらうことに。説明を受けてスマホの画面で買おうとしたら自分のスマホのブラウザではRenfeのサイトでの購入ができず...すると代わりにお姉さんがカウンターのパソコンでできると言ってくれて、無事購入。チケットの印刷までしてくれた!(メールアドレス先にe-ticketが届くのでなくても大丈夫)
しかもターミナル間の無料シャトルバス、Renfeの出発駅のBarcelona Santsまでの行き方まで丁寧に教えてくれた。終始笑顔でにこやかに対応してくれた彼女には感謝しかありません。片言のスペイン語に喜んでくれたのが嬉しかった...&lt;/p&gt;
&lt;p&gt;空港からBarcelona Santsまで電車で移動。チケットを買ったものの、どの電車が正しいかわからなかったが駅員さんは快く教えてくれた。
電車内で荷物を整理しているとおじさんが僕の肩を叩いてきて、僕のポケットを指して「見てるぞ」のジェスチャー。ポケットから財布が出ていて、盗まれそうで危ないぞと忠告してくれた。一時的な荷物整理で注意散漫になっていた上、長い旅行の末で油断気味になっていたので、バルセロナではスリに注意しろと気を引き締めてくれた。&lt;/p&gt;
&lt;p&gt;Barcelona Sants駅では昼飯にマクドナルド。人多すぎやろ。FC Barcelona Official Shopも駅構内にありびっくり(空港にもあった)。
Renfeのプラットフォーム行きの列に並ぼうとしたけど、違ってたら怖いなと思い前の人に確認するとあっているぽかった。その人はバルセロナからバレンシアに行く途中にあるCastelloに行くようだったのでこれはVilarreal vs Real Madridを観るのかなと思い聞いてみると大当たり。カタール在住のお医者さんでレアルマドリードのファンなんだとか。ちょっとした会話を楽しんだ後、新幹線は指定席だったのでお別れすることに。とても人あたりの良い人だった。あー連絡先交換しておけばよかったー
自分はビジャレアルホームに座るので、ビジャレアルを応援するし、&lt;/p&gt;
&lt;p&gt;Renfeは日本の新幹線のようで、普通に快適であった。ちゃんと電源があって安心でした。隣のおじちゃんは、足元の足置きの使い方を教えてくれて優しかった一方、隣に座っている間ずっとTinderやってた(おい笑。メッセージ送ってニヤニヤしてたし。おい)。席に座っていない間は、新幹線の中にあるバーみたいなところでバーのお姉ちゃんをナンパしているっぽかった...(遠巻きに見てただけなのでわからないけど)&lt;/p&gt;
&lt;p&gt;ついにValenciaに到着！乗り換えも急がねばと急いでメスタージャスタジアムへ!とにかく急いでチケットを買おうと思うも、いくら分買えば良いかもよくわからず後ろに並んでいたおじさんに聞いてみた。これまた優しく教えてくれて無事購入。予定の電車にも乗れた。&lt;/p&gt;
&lt;p&gt;最寄駅について地下から地上に上がりメスタージャスタジアムを見たときはもう感動。。。応援歌が聞こえてきてはやる気持ちを抑えながら、急いで自分のゲートへ。しかしハーフタイムだからか自分のゲートが空いてない...誰かが一瞬出てくる際にドアが空いたので、中にいる警備員にチケットを見せて入りたいというジェスチャーを見せるも即却下。なんでや。そこで近くにいるオヤジ2人組に聞くと、なんならそこから入れやみたいな感じで隣を勧められ入ってみた。&lt;/p&gt;
&lt;p&gt;バルセロナに到着→17:00からのバレンシアの試合&lt;/p&gt;</content><category term="Travel Journal"></category><category term="Travel Journal"></category></entry><entry><title>New Harvest 2019 参加レポート</title><link href="https://naoto-yamaguchi.github.io/site/cellular-agriculture/newharvest2019.html" rel="alternate"></link><published>2019-07-21T00:00:00+09:00</published><updated>2019-07-21T00:00:00+09:00</updated><author><name>Naoto Yamaguchi</name></author><id>tag:naoto-yamaguchi.github.io,2019-07-21:/site/cellular-agriculture/newharvest2019.html</id><summary type="html">&lt;p&gt;New Harvest 2019 @ MIT Media Labに参加しポスター発表してきました!!&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;img src="./images/new_harvest_2019.png" width="30%" height="30%"&gt;&lt;/p&gt;</summary><content type="html">&lt;h1&gt;目次&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#motivation"&gt;概要、動機&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#about1"&gt;New Harvestとは？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#about2"&gt;New Harvest 2019&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;展示内容&lt;/li&gt;
&lt;li&gt;Shojinmeat Projectの発表&lt;ul&gt;
&lt;li&gt;内容&lt;/li&gt;
&lt;li&gt;評判&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;参加者の様子&lt;/li&gt;
&lt;li&gt;個人的な感想&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#thoughts"&gt;感想&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;細胞農業の最先端に触れられる&lt;/li&gt;
&lt;li&gt;コミュニティの一員となり、多くの仲間と知り合うことができる&lt;/li&gt;
&lt;li&gt;世界の動向を肌で感じられる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#off_topic"&gt;余談　〜ボストンの植物性フード事情〜&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#to_close"&gt;最後に&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;お誘い&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div id="motivation"&gt;

# 概要、動機

&lt;/div&gt;

&lt;p&gt;細胞農業分野の中心的な組織であるNPO法人 New Harvest という団体が主催する年1回のイベントNew Harvest 2019がアメリカ,ボストンのMIT Media Labで開催されました。私は、そのイベントにShojinmeat Projectの代表として参加し、Shojinmeat Projectの研究や活動内容をまとめたポスター発表をおこないました。New Harvest 2019のイベント内容を中心に、ボストンで過ごした非常に充実した数日間の様子をお伝えできればと思います。&lt;/p&gt;
&lt;p&gt;そもそも細胞農業という分野は比較的新しく、将来重要になる分野であるにも関わらずあまり知られておらず、このNew Harvest 2019というイベントに参加していた日本人は数名であったので、その様子をお伝えし、多くの人に興味を持ってもらえればと思いました。&lt;/p&gt;
&lt;div id="about1"&gt;

# New Harvestとは？

&lt;/div&gt;

&lt;p&gt;&lt;img src="./images/new_harvest.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.new-harvest.org/"&gt;New Harvest&lt;/a&gt;は、アメリカのニューヨークとボストンを拠点とした、細胞農業を推進するNPO団体です。主に、ファンドとしての働きを持っていて、投資家などからお金を集め、細胞農業分野の発展のために産業界や学術界にお金を投資しています。この分野は重要でありながら新しく認知度の低い分野であることから、従来の投資環境では研究費を集めにくく、それを解決しようとして立ち上がったのがNew Harvestです。驚くべきことに2004年に設立され(随分早い！)、細胞農業(cellular agriculture)という言葉を使い始めたのもNew Harvestです。そのため、細胞農業自体はこのNew Harvestと共に発展してきたと言っても過言ではないでしょう。またファンド以外にも、細胞農業業界のコミュニティ形成、正しい情報の提供と教育にも力を注いでいます。
現在、10人弱の主要メンバーで構成されているようで、資金源は完全に投資家などからのDonationで成り立っており、フルタイムメンバーは多くないものの、New Harvestを中心としたコミュニティは非常に大きく、研究費支援をもらっている研究者など何かしらの形で関わっている人の数を入れると相当な数になると思われます。&lt;/p&gt;
&lt;div id="about2"&gt;

# New Harvest 2019

&lt;/div&gt;

&lt;p&gt;そんなNew Harvestが開催するイベントですから、細胞農業業界においては世界最大規模のイベントです。このイベントNew Harvest Conference は毎年開催され、2016年に &lt;a href="https://www.new-harvest.org/nh2016"&gt;第1回&lt;/a&gt; がサンフランシスコで、2017年の &lt;a href="https://www.new-harvest.org/nh2017"&gt;第2回&lt;/a&gt; はニューヨーク2018年の &lt;a href="http://2018.new-harvest.org/"&gt;第3回&lt;/a&gt; と &lt;a href="http://2019.new-harvest.org/"&gt;第4回&lt;/a&gt; となる今年の2019年はボストンのMIT Media Labといった具合にアメリカの主要都市で開催されています。ちなみに、第2回と第3回にはShojinmeat Projectの代表の羽生雄毅さんがスピーカーとして登壇しました。(その様子はこちら#todo)&lt;/p&gt;
&lt;h2&gt;展示内容&lt;/h2&gt;
&lt;p&gt;メインは、2,300人が収容されるホールでのプレゼンテーションやパネルディスカッション。
&lt;img src="./images/new_harvest_2019_panel.jpg" width="50vw" height="50vh"&gt;&lt;/p&gt;
&lt;p&gt;発表のタイトルは&lt;a href="http://2019.new-harvest.org/"&gt;New Harvest 2019のサイト&lt;/a&gt;のAgendaから、実際の様子はYoutubeの&lt;a href="https://www.youtube.com/channel/UCxq2JKQ4FNRbO73iw6FDsbw"&gt;New Harvestチャンネル&lt;/a&gt; から全て見られます(素晴らしい！！)。そのうち消されてしまうとNew Harest側からの連絡がありましたが(2019年9月現在残っている)、まだ見られるようです。自分はダウンロードしたので消されてしまった場合は欲しい方にお渡しすることも可能ですが画質が少し悪いのと音と動画がずれているのが難点です。自分も会場にいる間、聞かなかった講演もありますし(というか後で動画で見られると知ってからは、ほとんど会場の人と話していました...)、理解できなかった部分も多いのでまた見返したいと思います。
メインホールでの発表の合間にコヒーブレイクなるものがあり、展示スペースに皆戻って展示の見学やおしゃべりを楽しんでいました。
| 展示会場の様子 |  |
| --- | --- |
| &lt;img src="./images/new_harvest_2019_exhibition1.jpg"&gt; | &lt;img src="./images/new_harvest_2019_exhibition2.jpg"&gt; |&lt;/p&gt;
&lt;p&gt;講演内容は以下のような種類のものがありました。
* New Harvest から援助を受けて研究しているPhDやMS学生の研究発表
* 細胞農業に関わるスタートアップ企業の取り組みの紹介
* 細胞農業生産物に対する政府等による規制やルール作りの概観
* 細胞農業が盛んな都市とその現状の紹介
* 細胞農業業界でのキャリア&lt;/p&gt;
&lt;p&gt;どれもとても興味深いものばかりでした！規制やルール作りに関しての話は個人的には全くついていけず、後で同世代の友達を話したところ、あれは難しいし、退屈だったと話していましたが...&lt;/p&gt;
&lt;h2&gt;Shojinemeat Projectの発表&lt;/h2&gt;
&lt;p&gt;以下の画像のポスターを、A1サイズで印刷し持っていきました。ちなみにA1サイズだとポスターケースに入れても機内持ち込みはできないことが多いです。預け荷物にしてロストバゲッジするのが怖かったので、不織布という折り畳んでも跡がつきにくい布に印刷してもらい、軽く畳んでバッグに入れて大切に持ち歩きました。&lt;/p&gt;
&lt;p&gt;会場の展示スペースでこのポスターを貼り、見にきてくれた人にポスターの内容を説明したり、そもそもShojinmeat Projectは何をやっている組織なのかを説明したりしました。&lt;/p&gt;
&lt;h3&gt;内容&lt;/h3&gt;
&lt;p&gt;内容は、今までのShojinmeat Projectの取り組みをまとめて紹介したものです。Shojinmeat Projectは研究に使われる高価で手に入らないものではなく、誰でも手の届くものを使って、一般市民でも簡単に安価に自宅でできるバイオ実験の方法の開発を目指しています。
現在は細胞農業の観点から、自宅でもできる安価な細胞培養方法の開発を進めており、今までの成果をまとめたものが以下になります。&lt;/p&gt;
&lt;p&gt;&lt;img src="./images/new_harvest_2019_poster.png"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Basal Medium (基礎培地の代用)&lt;ul&gt;
&lt;li&gt;研究ではDMEMという培地が用いられるのが一般的。しかし一般市民は基本的には購入できないし、比較的高価である&lt;/li&gt;
&lt;li&gt;スポーツドリンクで代用したり、食品添加物で売られているもので1から作る方法の紹介&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Growth Factor (細胞の成長に必要な成長因子)&lt;ul&gt;
&lt;li&gt;成長因子としてウシ血清アルブミン(FBS)が用いられているが、購入が難しい上、供給不安定で高価&lt;/li&gt;
&lt;li&gt;卵黄による代用実験&lt;/li&gt;
&lt;li&gt;肝臓の共培養の可能性&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Antibiotics (細胞の成長を邪魔する菌を殺す抗生物質)&lt;ul&gt;
&lt;li&gt;卵白による代用実験&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Freezing of cells (細胞凍結)&lt;ul&gt;
&lt;li&gt;研究においてはディープフリーザーが用いられるが高価&lt;/li&gt;
&lt;li&gt;イソプロパノールとドライアイスを組み合わせた寒剤を用いた細胞の凍結方法&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Centrifuging cells (遠心分離)&lt;ul&gt;
&lt;li&gt;専用の遠心分離器が用いられるが、頑張れば扇風機でもできる！！&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;The value of citizen science (誰でも参加できる市民科学の価値)&lt;ul&gt;
&lt;li&gt;独創的なアイデアが豊富に生まれる&lt;/li&gt;
&lt;li&gt;バイオテクノロジーを身近に感じ、かつ培養肉の生産方法も完全に公開し高い透明性。一部企業が独占することで不信感を生んだ遺伝子組換え作物とは異なり、高い透明性と一般市民のコミットで、培養肉をはじめとした細胞農業が社会に受け入れられる基盤となる&lt;/li&gt;
&lt;li&gt;Shojinmeat Projectはそれを推進している&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以上がポスターの内容です。&lt;/p&gt;
&lt;h3&gt;評判&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;展示会場の様子&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src="./images/new_harvest_2019_exhibition3.jpg"&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src="./images/new_harvest_2019_exhibition4.jpg"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src="./images/new_harvest_2019_exhibition5.jpg"&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src="./images/new_harvest_2019_exhibition6.jpg"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img src="./images/new_harvest_2019_exhibition7.jpg"&gt;&lt;/td&gt;
&lt;td&gt;&lt;img src="./images/new_harvest_2019_exhibition8.jpg"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;一言で言うと、「一番大好評のポスター」(著者主観)でした。以下の写真からもわかるように、ポスターブースに来ている人たちのほとんどがShojinmeat Projectのポスターを見ています。自分が説明している時にも人が集まっていますし、自分がいない時も、同じタイミングで撮った写真(6,7枚目の青い服のおじさんが写っている2枚を比較)では、圧倒的にShojinmeat Projectのポスターの前に集まっていることがわかります。
メインホールでプレゼンが行われている時の様子は、一番右下の写真。Shojinmeat Projectのポスターの前で止まってじっくり見ている人が多かったです。&lt;/p&gt;
&lt;p&gt;たまたま集まっている時だけを載せているように思うかもしれませんが、自分の観測範囲では、集まり具合は圧倒的でした。&lt;/p&gt;
&lt;p&gt;また、ある参加者には、「あなた達のポスターが一番良いって聞いたわ」と言って、見に来てくれる人もいました。
他にも、ポスターいいねとか、デザイン良いねと褒めてくれる方もいました。
みなさんにポスターを楽しんでもらえて非常に良かったと思います。なぜここまでポスターが人気だったのかというと、それはShojinmeat Projectの取り組みがわかりやすく、親しみやすく、非常にcoolでcrazyで面白いからだと思います。&lt;/p&gt;
&lt;p&gt;実際、ポスターの内容に関しては、スポーツドリンクでのDMEMの代用、遠心分離機の扇風機での代用が特に人気でした。このような面白いアイデアを創出する場とてのコミュニティの重要性、バイオテクノロジーの利用の敷居を下げ、民主化することで、様々な取り組みを可能にする市民科学の可能性についても強く主張し、興味を持ってもらうことができました。
今回のポスター発表によって改めてShojinmeat Projectの活動の価値や意義を参加者の方に知ってもらえただけでなく、自分自身でも強く感じることができました。&lt;/p&gt;
&lt;div id="thoughts"&gt;

# 感想

&lt;/div&gt;

&lt;p&gt;さてこのイベント、細胞農業に興味がある私にとっては本当に貴重で、最高のイベントでした。個人的な視点から、このイベントの魅力を述べていきたいと思います。細胞農業について少しは知っているものの、まだ詳しくなく、またアカデミックな面からのアプローチにも興味がある学生からの観点です。
個人的に良いと思ったのは以下の点です。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;細胞農業の最先端に触れられる&lt;/li&gt;
&lt;li&gt;コミュニティの一員となり、多くの仲間と知り合うことができる&lt;/li&gt;
&lt;li&gt;世界の動向を肌で感じられる&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;細胞農業の最先端に触れられる&lt;/h2&gt;
&lt;p&gt;繰り返しになりますが、New Harvest 2019は細胞農業の分野で最大規模のイベントです。そのため、細胞農業分野に存在する技術的障壁に最先端で取り組む研究者や、産業応用と市場の拡大を目指すスタートアップ企業の代表者達が集まります。そんな彼らの話を、プレゼンやパネルディスカッションはもちろん、本人達に直接話を聞くこともできます。
研究やスタートアップに取り組む人達の考え方を聞くのは非常に興味深かったですし、現在、細胞農業の最先端がどこまで到達しているのかに触れるには十分すぎる機会でした。&lt;/p&gt;
&lt;h2&gt;コミュニティの一員となり、多くの仲間と知り合うことができる&lt;/h2&gt;
&lt;p&gt;このカンファレンスに参加する以前は、細胞農業に取り組む人たちは、Shojinmeat Projectのメンバーしか知りませんでしたが、本イベントを通して、多くの仲間と友達になることができました。&lt;/p&gt;
&lt;p&gt;参加者としては、
* New Harvestのスタッフ
* カンファレンスのボランティア学生　(細胞農業に興味のある学生が多く、学部3,4年生の学生が多かった印象。Shojinmeat EnglishのSlackチャンネルを通してNew Harvestに連絡をとり、ボランティアできることになったヨーロッパの学部生。Shojinmeatに感謝していました)
* 細胞農業分野の研究者
* 細胞農業やそれに関わる分野に取り組むスタートアップ企業のCEO, CTO, 社員など
* Cell-based meatに関する本を執筆中の作家
* 「最近自分の国でも細胞農業のスタートアップを始めたんだ！」という元気の良い30代の男性
* 「自分も自宅で細胞培養したい！めっちゃ興味あるんだ、僕も家でできるかい？やり方押してくれ！」という熱心な男性
* 細胞農業関係なく、「貝の培養の研究してるけど、なんかきちゃったよー。こんな応用できますみたいな感じで細胞農業にも繋がるしねー」という緩めなおじさん
* 「私たち投資家だわ。日本のインテグリカルチャーへの投資に興味あるの。羽生さんに宜しく。名刺渡しとくわ」と的なこと言ってきた投資家
* 畜産業界で屠殺場(?)の経営に関わる会社に携わる方
* 調べ学習で来た韓国の4人組大学生。細胞農業について調べる学校のプロジェクトをおこない、ボストンまでの旅費を出してもらったとか！韓国ではまだ大きなコミュニティがないらしいので、僭越ながら日本のShojinmeatのようなコミュニティを作ってみたら！というアドバイスをしました。&lt;/p&gt;
&lt;p&gt;などなど、本当に多様な人と知り合いになることができました。&lt;/p&gt;
&lt;p&gt;また個人的には、細胞農業分野の研究者に良く話を聞き、どういったラボがあってどういうことに取り組んでいるのか、New HarvestのKate Kurgerさんには、New HarvestのFellowshipプログラムについて詳しく教えてもらいました。アカデミックな面から関わることに興味がある僕としては、研究にまつわる様々な情報を知ることができてとても幸せでした。&lt;/p&gt;
&lt;p&gt;同世代の友人も沢山できて、イギリスのImperial College LondonのチームであるMultus Mediaのメンバーとも仲良くなり、8月のロンドン旅行の際に、彼らのラボも見せてもらえることになりました。&lt;/p&gt;
&lt;p&gt;さらにさらに、シンガポールで唯一の細胞農業スタートアップであるShoki meatのKaiさんからお誘いをもらって、New Harvest 2019の翌々日に、Kaiさん主催で開催された、朝食を食べながらスタートアップアーリーステージの悩み相談会的なものに招待していただき、様々な会社のトップ(と会社関係ない人も数名)が集まって、採用の悩み、PhDを惹きつける方法、ビジョンが大切といった話をしていました。(なんで自分呼ばれたんだ笑）&lt;/p&gt;
&lt;p&gt;これはこれで非常に貴重な体験でした。Kaiさんありがとうございます。ちなみにKaiさんが日本のキャラクターである「ぐでたま」が好きで、その話で盛り上がれてよかったです。ぐでたまありがとうございます。
またKate Kurgerさんもテラスハウスが好きで、その話でも盛り上がれてよかったです。テラスハウスありがとうございます。&lt;/p&gt;
&lt;h2&gt;世界の動向を肌で感じられる&lt;/h2&gt;
&lt;p&gt;上の2つと重なる部分は多いですが、やはり現地に行って、人と会い、話し、カンファレンスの熱気を感じることはとても代え難い経験でした。
日本では感じられない細胞農業の盛り上がりを肌で感じましたし、細胞農業で生産された製品が当たり前の未来に向かって、多くの人が必死で取り組んでいる様子を目の当たりにし、これは自分も、日本も、もっと頑張っていかなくてはととてもモチベートされました。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;br&gt;
イベントの最後には、New Harvest 2019開催の数日前に発売されたPerfect Day Foodのanimal-free ice creamのオークションが行われました。このアイスは細胞培養技術を用いて、卵や牛乳を使わずに作られたアイスで、発売数日ですぐに完売してしまいました。特別にこのイベント用に残していたアイスがオークション形式で販売され、強者が$600で落札していました。
そのあとは、Tufts UniversityのDavid Kaplan研究室のラボツアーに参加しました。それと並行して、近くのバーで開催された食事会が行われました。自分は、あまりにも疲れていた上、バーが激混みで座る場所はなく、大声で話さないと聞こえないくらいであったため、ラボツアーに参加した後、食事会には少しの参加で帰宅しました。&lt;/p&gt;
&lt;div id="off_topic"&gt;

# 余談 ~ボストンでの植物性のフード事情~

&lt;/div&gt;

&lt;p&gt;New Harvset Conference以外にも、ボストン周辺の観光を楽しみました。
Conferenceで知り合ったMITの友達に大学を案内してもらったり、植物性の肉をレストランで楽しみました。
特に、細胞農業に興味ある方は、植物性の肉にも興味ある方が多いのではないかと思います。何かと混同されがちですが、植物性の肉は、plant-based meatと呼ばれ、エンドウ豆や大豆などの植物性のタンパク質に、ヘムなどを加えることで肉独特の風味を出しています。このplant-based meatは既にUSなどの市場で出回っており、Impossible Foods,Beyond Meatが有名なスタートアップ企業です。一方、細胞農業が取り組むのは、実際の牛や豚の細胞を抽出し、それを培養することで本物の肉(本物と呼ぶかは諸説あり)とするのが、cell-based meatです(clean meat, lab-grown meatなどとも呼ばれた)。こちらはまだ市場に出回ってはいません。&lt;/p&gt;
&lt;p&gt;今回ボストンでは、plant-based meatを買うことができたので、トライしてみました。
MIT Media Labの近くのCloverというお店で、Impossible Sandwich
Central駅の近くのLittle Donkeyというレストランで、Impossible burgerを食べてみました。(Impossible Burgerは裏メニューのようで、メニューには書いていませんが、店員さんに言うと注文できます)&lt;/p&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="ja" dir="ltr"&gt;Impossible foodsの植物性の肉を色々食べてみた&lt;br&gt;①サンドイッチに入ってたミンチはハーブの味付けが強すぎて微妙…&lt;br&gt;②ミートボールはトマトの味付けで美味しかった。普通にミートボール&lt;br&gt;③バーガーは、マクドナルドの普通のバーガーより歯応えも肉汁もあり肉感があって美味しい！（高いけど） &lt;a href="https://t.co/joSMfxiZke"&gt;pic.twitter.com/joSMfxiZke&lt;/a&gt;&lt;/p&gt;&amp;mdash; Naoto Yamaguchi (@nafoto_z) &lt;a href="https://twitter.com/nafoto_z/status/1152899624463687683?ref_src=twsrc%5Etfw"&gt;July 21, 2019&lt;/a&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;&lt;/p&gt;
&lt;p&gt;更に、Whole Foods Marketで売られていた、Beyond MeatのPlant based burger pattiesと、JUSTのJUST Egg(植物性の卵)も買って料理してみました。&lt;/p&gt;
&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="ja" dir="ltr"&gt;【植物性の肉と卵を料理してみた】&lt;br&gt;最近上場したBeyondMeat のビヨンドバーガーとJUSTのスクランブルエッグをスーパーで買って料理してみた&lt;br&gt;&lt;br&gt;バーガーの味→焦げてよくわからない&lt;br&gt;スクランブルエッグの味→冷めてそんな美味しくない&lt;br&gt;&lt;br&gt;わかったこと→料理向いてない &lt;a href="https://t.co/uXLZjVYkTo"&gt;pic.twitter.com/uXLZjVYkTo&lt;/a&gt;&lt;/p&gt;&amp;mdash; Naoto Yamaguchi (@nafoto_z) &lt;a href="https://twitter.com/nafoto_z/status/1153247046918443014?ref_src=twsrc%5Etfw"&gt;July 22, 2019&lt;/a&gt;&lt;/blockquote&gt;

&lt;p&gt;&lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;&lt;/p&gt;
&lt;div id="to_close"&gt;

# 最後に

&lt;/div&gt;

&lt;p&gt;こんなに刺激的で魅力的なイベントに参加でき、貴重な情報や仲間を得られただけでなく、とても有意義な時間を過ごすことができました。この代え難い経験を、今後の自身とShojinmeat Projectの活動に生かしていきたいと思います。
ポスター作成等色々と助けて下さった、羽生雄貴さんをはじめとするShojinmeat Projectのメンバー、Campfireを通して、Shojinmeat Projectを支援して下さっている皆様に心から感謝します。このイベントを通して、Shojinmeat Projectの活動の意義や価値を再認識しましたし、今後も活動を発展させていき、世界へ発信し存在感を高め、更に価値を高めていければと思います。&lt;/p&gt;
&lt;p&gt;また社会課題の解決にも繋がり、技術的にも面白い、細胞農業に興味を持つ方が日本にももっと増えると良いなぁと思っています。
今後もこちらのブログで情報発信していくつもりなので、是非チェックしてみて下さい。
細胞農業業界についてまとめたので以下の記事もぜひご覧下さい！&lt;/p&gt;
&lt;h2&gt;お誘い&lt;/h2&gt;
&lt;p&gt;生物系、化学系、農業系、医学系、機械系、情報系、政治系、法律系などなど(こういう括りに関わらず)の人々にも興味を持ってもらってどんどん巻き込めればと思います。
とても新しく大きな可能性を秘めている分野だと思いますので、興味のある人は僕やShojinmeat Projectに是非ご連絡下さい！！&lt;/p&gt;
&lt;p&gt;Seren Kellさんとは
バイオテックとソフトウェアスタートアップは違う、バイオテックの話
ペーパースタートアップの失敗。アカデミックの重要性&lt;/p&gt;
&lt;p&gt;GLPを理系の学生にも進めたい理由
PhDコースに大事になってくるのは向こうの教授とのコンタクト(らしい)です。
絶対TOEFL&lt;/p&gt;
&lt;p&gt;東大新聞で出して、facebookで告知
武さんに連絡
Animal Rebellion
サマースクールでのヴィーガン&lt;/p&gt;</content><category term="Cellular Agriculture"></category><category term="Cellular Agriculture"></category><category term="New Harvest"></category><category term="細胞農業"></category><category term="Shojinmeat Project"></category></entry><entry><title>OpenMPによる並列処理メモ</title><link href="https://naoto-yamaguchi.github.io/site/programming/openmp.html" rel="alternate"></link><published>2019-06-24T00:00:00+09:00</published><updated>2019-06-24T00:00:00+09:00</updated><author><name>Naoto Yamaguchi</name></author><id>tag:naoto-yamaguchi.github.io,2019-06-24:/site/programming/openmp.html</id><summary type="html">&lt;p&gt;OpenMP環境構築、コマンド等&lt;/p&gt;</summary><content type="html">&lt;h1&gt;動機&lt;/h1&gt;
&lt;p&gt;OpenMPを用いた並列コンピューティングの実装課題に取り組む際に、環境構築がよくわからなかったこと、また、OpenMPを使う際に、スレッド数やプロセス数についてよくわからないことがあったので、軽くわかったことを書いてみました。
また、OpenMPの並列化の際、いくつのスレッドが立っているのか、いくつのコアを使っているのかを調べる必要があったためです。&lt;/p&gt;
&lt;h1&gt;OpenMP環境構築&lt;/h1&gt;
&lt;p&gt;環境構築方法は基本、そのマシンによって異なります。私のMacbookでできた方法を記載しています。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;gcc4.9以上じゃないとopenmpは使えない模様&lt;/span&gt;
&lt;span class="err"&gt;$ brew install llvm&lt;/span&gt;
&lt;span class="err"&gt;(llvmはコンパイラ基盤らしい）&lt;/span&gt;
&lt;span class="err"&gt;$ open /Library/Developer/CommandLineTools/Packages/macOS_SDK_headers_for_macOS_10.14.pkg&lt;/span&gt;
&lt;span class="err"&gt;でできると言われたが、これはfile does not existとなり、/Library/Developer/CommandLineTools/以下にはPackagesというディレクトリがなかった。&lt;/span&gt;
&lt;span class="err"&gt;そのため、一旦これはやめて、&lt;/span&gt;
&lt;span class="err"&gt;$ brew reinstall gcc&lt;/span&gt;
&lt;span class="err"&gt;$ brew install gcc49&lt;/span&gt;
&lt;span class="err"&gt;で&lt;/span&gt;
&lt;span class="err"&gt;$ g++-4.9 -std=c++11 -fopenmp &amp;lt;ファイル名&amp;gt;.cpp&lt;/span&gt;
&lt;span class="err"&gt;とすればできた&lt;/span&gt;
&lt;span class="err"&gt;環境は個々人によるので、これでできるかはわかりません&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;thread数、process数、コア数を調べる、ハイパースレッティング&lt;/h1&gt;
&lt;p&gt;CPU型番はこのコマンドで調べられる
こちらを参考にした。
http://no213015e.hatenablog.com/entry/2018/02/07/223914&lt;/p&gt;
&lt;p&gt;$｀sysctl machdep.cpu.brand_string｀
｀machdep.cpu.brand_string: Intel(R) Core(TM) i5-6360U CPU @ 2.00GHz｀ 
これで、検索エンジンで「Intel Core i5-6360U」などと調べると、そのプロセッサの情報を見ることができます。今回は&lt;a href="https://ark.intel.com/content/www/jp/ja/ark/products/91156/intel-core-i5-6360u-processor-4m-cache-up-to-3-10-ghz.html"&gt;こちら&lt;/a&gt;を参考にしました。
そのプロセッサの情報に、メモリの種類という項目があり、3種類程しか載っておらず、最大メモリ帯域も決まった値が記載されていました。私は、メモリとプロセッサは独立に決められると思っていたのですが、プロセッサに合うメモリというのがある程度決まっていて、そのスペックもほぼ決まっているのでしょうか。そのプロセッサが対応できるメモリの種類、サイズ、転送速度を記載しているという認識で良いのでしょうか。ここは、まだ自分が理解できていない部分です。&lt;/p&gt;
&lt;h1&gt;コマンド&lt;/h1&gt;
&lt;p&gt;以下のコマンドで、ハードウェアの情報の一部を見ることができます。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ system_profiler SPHardwareDataType
Hardware:

    Hardware Overview:

      Model Name: MacBook Pro
      Model Identifier: MacBookPro13,1
      Processor Name: Intel Core i5
      Processor Speed: &lt;span class="m"&gt;2&lt;/span&gt; GHz
      Number of Processors: &lt;span class="m"&gt;1&lt;/span&gt;
      Total Number of Cores: &lt;span class="m"&gt;2&lt;/span&gt;
      L2 Cache &lt;span class="o"&gt;(&lt;/span&gt;per Core&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;256&lt;/span&gt; KB
      L3 Cache: &lt;span class="m"&gt;4&lt;/span&gt; MB
      Memory: &lt;span class="m"&gt;8&lt;/span&gt; GB
      Boot ROM Version: MBP131.0205.B11
      SMC Version &lt;span class="o"&gt;(&lt;/span&gt;system&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="m"&gt;2&lt;/span&gt;.36f96
      Serial Number &lt;span class="o"&gt;(&lt;/span&gt;system&lt;span class="o"&gt;)&lt;/span&gt;: C02TJ0Q7GVC8
      Hardware UUID: 0B84C404-0239-5964-883A-B5BBB085C4C7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;また、物理CPUのMAX数&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ sysctl -n hw.physicalcpu_max             
&lt;span class="m"&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;論理CPUのMAX数も見ることができます。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ sysctl -n hw.logicalcpu_max
&lt;span class="m"&gt;4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;これらからわかることは、このMacbookには1つのプロセッサー(四角いチップ)があり、その中に2つのコアが入っていて（これは物理的なコア）、各コアが仮想的に2コアとして動くことで、最大論理コア数は4になっているということです。&lt;/p&gt;
&lt;p&gt;なぜ、こういうことを調べたかというと、
MacBookの「このMacについて」を調べたり、ネットで型番を調べても、コア数は2という記載だったのにも関わらず、OpenMPを用いたプログラムで、&lt;code&gt;omp_get_num_procs()&lt;/code&gt;というコア数を返してくれる関数を実行した際の返り値が、4であったことに疑問を持ったためです。
これはCPUのハイパースレッティングにより、1つのコアを擬似的に2つにすることで、プログラム側からは4つのコアがあるように見えていたためだと考えられます。&lt;/p&gt;</content><category term="Programming"></category><category term="Programming"></category><category term="C"></category></entry><entry><title>英作文をしていて気がついたこと(What I realized when I write an essay)</title><link href="https://naoto-yamaguchi.github.io/site/essay/what_i_found_when_i_write_an_essay.html" rel="alternate"></link><published>2019-06-21T00:00:00+09:00</published><updated>2019-06-21T00:00:00+09:00</updated><author><name>Naoto Yamaguchi</name></author><id>tag:naoto-yamaguchi.github.io,2019-06-21:/site/essay/what_i_found_when_i_write_an_essay.html</id><summary type="html">&lt;p&gt;英作文をしていて気がついたこと&lt;/p&gt;</summary><content type="html">&lt;h1&gt;動機、対象&lt;/h1&gt;
&lt;p&gt;ごく最近ですが、定期的に英文を書いて添削してもらうことを始めました。理由は英語でのライティングスキルを高めたかったからです。やはり定期的に英語でのアウトプットは非常に重要だと感じ、兼ねてからやってみたいと思っていた、英文添削サービスを受け始めてみることにしました。
私は、少しインターネットで英文添削サービスを検索して&lt;a href="https://idiy.biz/"&gt;IDIY&lt;/a&gt;というサービスを使ってみることにしました。もっと色々なサービスを比較してもよかったですが、比較することに時間を費やして英文添削を延ばし延ばしにしてしまうのは良くないし、すぐに始めるべきだ！と思ったので、調査もそこそこに（いつもこういうのは納得するまで調べてしまう）、評価もそこそこ良さそうで、安価なIDIYを使ってみることにしました。
添削サービスは一長一短あると思いますし、人によって適したものは異なるので、軽く調べて自分に合うのを選ぶと良いと思います。ただ調べるのに時間をかけすぎるのは、本末転倒で,参考書マニアになった受験生（いつしかの私）みたいになるので要注意です。実際、英文添削サービスやオンライン英会話のサービスは、初回無料体験のようなものが多く、それを使えばサービスの質を体感できるばかりか、実際に英作文や会話をする機会を得られるので、まずサービスを使ってみるのが一番かと思います。個人的にはIDIYが今のところ良いので、自分は英文添削サービスについては、IDIYしか使ったことがありませんが（無料のGrammerlyは使っている）、オンライン英会話はDMMやCamblyなどを無料体験で使ってみてサービスがどんな感じか掴めたのでおすすめです。&lt;/p&gt;
&lt;p&gt;今のところ、こちらのブログに載せている英文は、全てIDIYの添削を受けたものです。一度添削してもらうと安心してブログにも載せられるし、ブログに載せたい内容を英作文のお題にすると、お題はおそらく尽きることがないのでおすすめです（続けることが難しく、最も大事なことの1つですが）。&lt;/p&gt;
&lt;p&gt;英文添削を受けてみたいという方、文章を書くことに関する考え方に興味がある方、暇な人、などが主な対象です。&lt;/p&gt;
&lt;h1&gt;What I realized when I write an essay&lt;/h1&gt;
&lt;p&gt;What I realized when I write an essay in English is that the biggest challenge is not the language itself, but how I organise the structure of a sentence.
Many people may think that writing in English is challenging, because they have to do it without using their mother tongue.
However, when I write an essay in English , I find that I take more time to think about the content, and the reasons to support my opinion, than to choose expressions.
If you have clear thoughts about the topic and composition of your essay, it is much easier to write in English.
Thus, if you would like to improve your English writing skills, you should be familiar with a wide variety of topics, have a clear and well-organized opinion about them, and be able to explain them simply in your native language; this may be a good shortcut to improvement.&lt;/p&gt;
&lt;h1&gt;英作文をしていて気がついたこと&lt;/h1&gt;
&lt;p&gt;英語の文章をいくつか書いていく中で、英語で文章を書くことの難しさは、英語表現ではなく、その文章構成にあることに気がつきました。もちろんこれは人によるので、一般に言えることではないかもしれません。
ただ、普通に考えて、日本語で書けない文章を英語でかけるわけではありません。自分が書くトピックに対して自分の頭の中が整理されていなければ、英語であろうと日本語であろうと相手に伝わる文章を書くことは非常に難しいです。逆に、頭の中でよく整理されたシンプルにまとまっていれば、それを日本語であろと英語であろうと、そのまま書けばわかりやすく伝わりやすい文章が書けるはずです。自分は英文を書くとき、慣れたトピックは比較的スラスラかけましたが、普段考えたこともないようなお題に対しては、すぐにキーボードを打つ手（もしくは筆）が止まってしまいました。
これはある程度簡単な表現は英語でも書けることが前提ですが、そういう簡単でシンプルな表現でも書けて、かつ説得力のある文章になるように、上手く文を構成できれば難しい表現を使う必要はないのではないかと思いました。
だからこそ、様々なトピックに対して、よく整理された(well-organized)な考えを持っておきたいと思いました。どうしても知らない内容は当然あると思うので、その際は、いかにシンプルに主張を整理していくかが大事で、それには訓練が必要そうです...&lt;/p&gt;
&lt;p&gt;英作文以前に、文章自体を構成することに悩んだので、&lt;a href="https://www.amazon.co.jp/%E8%80%83%E3%81%88%E3%82%8B%E6%8A%80%E8%A1%93%E3%83%BB%E6%9B%B8%E3%81%8F%E6%8A%80%E8%A1%93%E2%80%95%E5%95%8F%E9%A1%8C%E8%A7%A3%E6%B1%BA%E5%8A%9B%E3%82%92%E4%BC%B8%E3%81%B0%E3%81%99%E3%83%94%E3%83%A9%E3%83%9F%E3%83%83%E3%83%89%E5%8E%9F%E5%89%87-%E3%83%90%E3%83%BC%E3%83%90%E3%83%A9-%E3%83%9F%E3%83%B3%E3%83%88/dp/4478490279"&gt;「考える技術・書く技術」&lt;/a&gt;という本を読んでみました。文章を書く目的である、「主張」に対して、ピラミッド構造で要素を展開していくことの重要性とその実践について書かれています。まだ半分ほどしか読んでいませんが、わかりやすく書くためのアイデアが詰まっているのでおすすめです。&lt;/p&gt;</content><category term="Essay"></category><category term="Essay 気がついたこと"></category></entry><entry><title>細胞農業について知りたかったら。情報源は...(if you would like to know about cellular agriculture)</title><link href="https://naoto-yamaguchi.github.io/site/xi-bao-nong-ye/src_of_cellagri_info.html" rel="alternate"></link><published>2019-06-20T00:00:00+09:00</published><updated>2019-06-20T00:00:00+09:00</updated><author><name>Naoto Yamaguchi</name></author><id>tag:naoto-yamaguchi.github.io,2019-06-20:/site/xi-bao-nong-ye/src_of_cellagri_info.html</id><summary type="html">&lt;p&gt;細胞農業について&lt;/p&gt;</summary><content type="html">&lt;h1&gt;目次&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;動機、対象&lt;/li&gt;
&lt;li&gt;細胞農業とは？&lt;/li&gt;
&lt;li&gt;情報源のリスト&lt;ul&gt;
&lt;li&gt;Organizations&lt;/li&gt;
&lt;li&gt;Articles&lt;/li&gt;
&lt;li&gt;Website&lt;/li&gt;
&lt;li&gt;Podcast&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;動機、対象&lt;/h1&gt;
&lt;p&gt;自分の情報収集源についてのまとめ&lt;/p&gt;
&lt;p&gt;細胞農業についてより知ってもらうため&lt;/p&gt;
&lt;h1&gt;細胞農業とは？&lt;/h1&gt;
&lt;p&gt;以下のリストにも記載していますが、&lt;a href="https://medium.com/shojin-meat-japan/%E9%A3%9F%E6%96%99%E5%8D%B1%E6%A9%9F%E3%81%AE%E8%A7%A3%E6%B1%BA%E7%AD%96%E3%81%A8%E3%81%AA%E3%82%8B%E3%81%8B-5%E5%88%86%E3%81%A7%E3%82%8F%E3%81%8B%E3%82%8B-%E7%B4%B0%E8%83%9E%E8%BE%B2%E6%A5%AD-4a62d91b4fdf"&gt;5分でわかる細胞農業&lt;/a&gt;が詳しいです。
ここで簡単にまとめると、細胞農業は、細胞を培養することによる新しい食料生産方法です。
以下の画像は、これまたよくまとまっている資料である、&lt;a href="https://www.slideshare.net/2co/shojinmeat-project-118383433"&gt;Shojinemeat Projectが公開しているスライド&lt;/a&gt;からとったものですが、食料の生産方法には現在のところ大きく分けて5つあります。その5つに加えて、新しい6つめとなるのが、「培養」という方法です。
培養とは、微生物あるいは多細胞生物の細胞や組織の一部を人工的な環境下で育てることであり(Wikipedia-培養)、生物や医学、農学、薬学研究において用いられています。
&lt;img src="./images/new_food_production_method.png"&gt;&lt;/p&gt;
&lt;p&gt;では何を培養するのかというと、例えば、動物の筋肉細胞です。生物の体は様々な種類の細胞でできています。培地という生物の体内の環境をもしたような化合物を用いて、育て、増やすことができます。
肝臓細胞を育てれば肝臓になるし&lt;/p&gt;
&lt;p&gt;現在のアイデアとしては、牛や豚の筋肉や脂肪細胞を培養して、うまく組み合わせ、我々が現在食べている肉の代わりを作るというものがあります。それ以外にも、エビなどの魚介類の細胞も培養して刺身を作るというものがあります。&lt;/p&gt;
&lt;p&gt;詳しい説明については、以下の情報源を色々と読むことが一番です。&lt;/p&gt;
&lt;p&gt;こちらの記事も参考になるかと思います。&lt;/p&gt;
&lt;h1&gt;細胞農業の情報源のリスト (Resources)&lt;/h1&gt;
&lt;h2&gt;Organizations&lt;/h2&gt;
&lt;p&gt;細胞農業に取り組む組織は沢山あります。
* &lt;a href="https://www.new-harvest.org"&gt;New Harvest&lt;/a&gt;
* &lt;a href="https://www.gfi.org/"&gt;Good Food Institute&lt;/a&gt;
* &lt;a href="https://www.cell.ag/"&gt;CellAgri&lt;/a&gt;
* &lt;a href=""&gt;Shojinmeat Project&lt;/a&gt;
* 日本細胞農業協会 (coming soon!)
&lt;!-- http://cellagri.org/ --&gt;&lt;/p&gt;
&lt;h2&gt;Articles, Materials&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://medium.com/shojin-meat-japan/%E9%A3%9F%E6%96%99%E5%8D%B1%E6%A9%9F%E3%81%AE%E8%A7%A3%E6%B1%BA%E7%AD%96%E3%81%A8%E3%81%AA%E3%82%8B%E3%81%8B-5%E5%88%86%E3%81%A7%E3%82%8F%E3%81%8B%E3%82%8B-%E7%B4%B0%E8%83%9E%E8%BE%B2%E6%A5%AD-4a62d91b4fdf"&gt;5分でわかる細胞農業&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;まず読むとしたらこちらをお勧めします&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://cellagri.mykajabi.com/ebook"&gt;CELLULAR AGRICULTURE EBOOK&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://medium.com/@tristanroth/my-cellular-agriculture-reading-list-2019-9147aaa5aeca"&gt;My “Cellular Agriculture” Reading List — 2019 by Tristan Roth&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.rethinkx.com/food-and-agriculture"&gt;RethinkXの環境問題等に関するレポート&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;SlideShare&lt;/h2&gt;
&lt;p&gt;日本語の情報としては、Shojenmeat Projectが出しているスライドが一番でしょう
* &lt;a href="https://www.slideshare.net/2co/presentations"&gt;Shojinmeat Project Slideshare&lt;/a&gt;
* &lt;a href="https://www.slideshare.net/YukiHanyu?utm_campaign=profiletracking&amp;amp;utm_medium=sssite&amp;amp;utm_source=ssslideview"&gt;羽生さんのSlideshare&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;WebSite&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://zacmayu.hatenablog.com/"&gt;るるまゆの実験ノート&lt;/a&gt;    &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Shojinemeat Projectのメンバーでもある、るるまゆさんの実験記録を中心としたはてなブログです。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.robertyaman.com/about"&gt;Robert Yaman&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;動物愛護家。YouTubeのソフトウェアエンジニアをやめて、Cellular Agricultureの分野へ。サイトにまとまっている情報がえぐい。会社のリストや特許情報など&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.new-harvest.org/about"&gt;New HarvestのAbout&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.gfi.org/blog"&gt;Good Food Instituteのブログ&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.gfi.org/essentials"&gt;GFI Library of Essential Reading&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GFI Founder &lt;a href="https://www.wired.com/2016/10/nerds-cattle-food-technology-will-save-world/"&gt;Bruce Friedrich's Wired Article&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GFI Founder &lt;a href="https://www.gfi.org/bruce-friedrich-ted-talk-plant-based-cell"&gt;Bruce Friedrich's TED Talk&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.cell.ag/articles"&gt;CellAgriのブログとNewsletter&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://golden.com/wiki/Cluster%3A_Cell-based_and_plant-based_meat"&gt;Golden&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;最新情報とスタートアップに強い新時代のWikipedia&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jp.techcrunch.com/2019/05/05/2019-04-30-golden-launch/"&gt;TechCrunchの紹介記事&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;新しいテクノロジーの情報が詰まっている。自分の興味のあるSynthetic BiologyもStem Cell Technologyもあり読んでいて楽しい。&lt;/li&gt;
&lt;li&gt;これからさらに充実していくことが期待される&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Podcast&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://futurefoodshow.com/"&gt;Cultured Meat and Future Food&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Cell-based meatやPlant-based meatをはじめとした未来の食に関わる人たちのインタビューpodcast。HostのAlexさんが良い声。おす
すめ。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Conference&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/channel/UCxq2JKQ4FNRbO73iw6FDsbw"&gt;New Harvest Confernce&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://goodfoodconference.com/videos/"&gt;Good Food Institute Conference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Papers&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="www.sciencedirect.com/science/article/pii/S0924224417303400"&gt;Stephens N Di Silvio L Dunsford I Ellis M Glencross A Sexton A. (2018) Bringing cultured meat to market: Technical, socio-political, and regulatory challenges in cellular agriculture. &lt;em&gt;Trends in Food Science &amp;amp; Technology&lt;/em&gt; ,2018 vol: 78 pp: 155-166&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;細胞農業に関するレビュー論文。まとめ記事はこちら。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="www.sciencedirect.com/science/article/pii/S1369703X1830024X?via%3Dihub"&gt;Specht E Welch D Rees Clayton E Lagally C. Opportunities for applying biomedical production and manufacturing methods to the development of the clean meat industry. &lt;em&gt;Biochemical Engineering Journal&lt;/em&gt; ,2018 vol: 132 pp: 161-168&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;畜産業と肉の消費量を減らすことについて&lt;/h2&gt;
&lt;p&gt;以下にあげるのはほんの一部です。
* &lt;a href="http://www.cowspiracy.com/"&gt;Cowspiracy&lt;/a&gt;
* &lt;a href="https://www.youtube.com/watch?v=NxvQPzrg2Wg&amp;amp;t=1s"&gt;Kurzgesaght - In a Nutshell&lt;/a&gt;&lt;/p&gt;</content><category term="細胞農業"></category><category term="好きなもの"></category><category term="生物"></category><category term="細胞農業"></category><category term="Cellular Agriculture"></category></entry><entry><title>記事翻訳 ~GFI Research Grants Update: Introduction to Cell-Based Meat Research Projects~</title><link href="https://naoto-yamaguchi.github.io/site/xi-bao-nong-ye/cell_based_meat_research_projects.html" rel="alternate"></link><published>2019-06-07T00:00:00+09:00</published><updated>2019-06-07T00:00:00+09:00</updated><author><name>Naoto Yamaguchi</name></author><id>tag:naoto-yamaguchi.github.io,2019-06-07:/site/xi-bao-nong-ye/cell_based_meat_research_projects.html</id><summary type="html">&lt;p&gt;培養肉研究プロジェクト紹介の英語記事翻訳&lt;br&gt;&lt;img src="https://paper-attachments.dropbox.com/s_8FAC27AC251845FE76C63F0EAF156DF8B3F4D3C17D70B16D9D9AEE81A162B247_1559875522300_cell_based_meat_grant_programs.png"&gt;&lt;/p&gt;</summary><content type="html">&lt;h2&gt;目次 (Table of Contents)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#introduction"&gt;紹介&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#motivation"&gt;動機、目的&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#contents"&gt;翻訳内容&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;細胞培養による肉生産の基本&lt;/li&gt;
&lt;li&gt;細胞株開発&lt;/li&gt;
&lt;li&gt;細胞培地&lt;/li&gt;
&lt;li&gt;足場と構造&lt;/li&gt;
&lt;li&gt;培養器とバイオプロセス&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="#words"&gt;英単語&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#thoughts"&gt;感想、終わりに&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#links"&gt;関連&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;
&lt;div id="introduction"&gt;&lt;/p&gt;
&lt;h2&gt;紹介(introduction)&lt;/h2&gt;
&lt;/div&gt;

&lt;p&gt;本記事は、&lt;a href="https://www.gfi.org/gfi-research-grants-update-introduction-to?utm_source=social&amp;amp;utm_medium=twitter&amp;amp;utm_campaign=gfi-research-grants-update-introduction-to"&gt;こちら&lt;/a&gt;の記事の翻訳です。
Good Food Instituteから許可を得て、翻訳、掲載をしています。&lt;/p&gt;
&lt;p&gt;Thank GFI for allowing me to translate this article and post it on my blog.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;
&lt;div id="motivation"&gt;&lt;/p&gt;
&lt;h2&gt;動機、目的(motivation, purpose)&lt;/h2&gt;
&lt;/div&gt;

&lt;p&gt;自分は、細胞農業に興味を持ち、DIYバイオ、Shojinmeat Projectの一環として、自宅で細胞培養の実験をおこなっています。
日本ではShojinmeat Projectを中心として、DIYバイオの取り組みは海外と比べ盛んですが、研究としてやられているのは少ないのではと思っていました。今後重要性が増し分野として拡大していく細胞農業へ向けた研究する人が少ない中、自分が取り組んでいきたいなと考えています。そこでまず現状どういう研究がなされているか人工培養肉実現に向けた研究課題は何か、について知っておくことは重要だと思い、GFIのGrant Programで支援されているアカデミックな研究プロジェクトについての記事があったので、詳しく読み、訳してみることにしました。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;div id="contents"&gt;

&lt;h2&gt;翻訳内容(contents)&lt;/h2&gt;
&lt;p&gt;2月に、私たちはGFIで初開催の、重要な植物性の肉もしくは細胞培養肉研究に対する支援金プログラムのコンペの勝者を発表しました。14の採択された研究プロジェクトが現在進行中です。&lt;/p&gt;
&lt;/div&gt;

&lt;h3&gt;細胞培養による肉生産の基本&lt;/h3&gt;
&lt;p&gt;動物細胞は、筋肉細胞、脂肪細胞、結合組織細胞（線維芽細胞）からなる筋組織です。動物から得た1つの細胞から初めて、私たちは数千キロの肉を、動物を虐殺せずに生産することができます。この細胞培養による肉は、本物の動物の肉であり、従来の肉よりも効率的に生産されます。&lt;/p&gt;
&lt;p&gt;始めの小さな細胞は、それらが成長し複製に必要な栄養と水によって育てられます。この（細胞にとっての）食べ物は、細胞培地と呼ばれます。細胞が育つこの環境を変えることで、肉を構成する筋肉細胞、脂肪細胞、結合組織細胞などへの分化を誘導することができます。細胞が適した3次元構造をどのように組織するかの指令を細胞に与えるために、それを支える仕組み（もしくは足場）が追加されます。これらの操作は全て培養器（バイオリアクターとも呼ばれる）の中でおこなわれます。&lt;/p&gt;
&lt;p&gt;細胞培養による肉の生産を目指すこの産業は、科学的知識や、細胞株、培地、足場、培養器を扱う他の産業によって培われた技術発展に恩恵を受けています。しかし、2つの、重要な要素である、コストと規模が、新たな技術的な挑戦として突きつけられています。私たち(GFI)が投資した6つのプロジェクトは、大規模、低価格の細胞培養肉生産を見据えて重要な新しい技術的課題の解決を目指しています。&lt;/p&gt;
&lt;p&gt;ここでは、各プロジェクトの大まかなゴールを簡単に示すとともに、彼らが商業規模での細胞培養肉生産をどのようにしてより経済的で効率的なものにしていくかを簡単に紹介します。&lt;/p&gt;
&lt;h3&gt;細胞株開発&lt;/h3&gt;
&lt;p&gt;アカデミックの研究室で細胞培養肉研究に取り組んでいるのはほとんどありません。この分野での研究を遂行する上での潜在的な課題は、培養の始めとなる、一般的に食べ物として消費される動物（例えば、哺乳類の肝臓や家禽）の細胞株を手に入れなくてはならないということです。多くの動物種の培養に適した細胞株は利用可能ではありません。そのため、ほどんどの学術的な細胞培養肉研究は、細胞株の作製に時間と努力、リソースを費やすことから始まります。この分野に取り組む研究が増えるに連れて、各々の研究室が自ら細胞株を作製するのはとても非効率的になるでしょう。細胞株のリポジトリが標準化された手続きによって作製され、それらの細胞株がよく特徴付けられることを保証することで、これらの細胞株を使うこれからの研究開発は、研究室間や実験間に生じるばらつきを抑えることができるでしょう。&lt;/p&gt;
&lt;p&gt;Gareth Sullivan（オスロ大学、ノルウェー）は冷凍農場の基礎を提供する、包括的な線維芽細胞（結合組織細胞）のライブラリを作製しています。最終的には、これらの線維芽細胞はiPS細胞の生産に必要なもののリソースとして役立ちます。
iPS細胞は大人の組織から取られ、何度も分裂できるような状態にリプログラミングされた細胞です。iPS細胞は、体内の成熟した全ての種類の細胞に分化する能力を持っており、筋肉細胞、脂肪細胞、血球、線維芽細胞などになることができます（これらの種類の細胞は細胞培養肉において非常に重要です）。
Sullivan博士の冷凍農場は、ますます拡大する細胞株のリポジトリです。異なる種や幅広い品種からなる細胞株を利用可能にすることで、細胞培養肉業界における洞察に満ちた基礎研究を可能にします。&lt;/p&gt;
&lt;h3&gt;細胞培地&lt;/h3&gt;
&lt;p&gt;細胞培地は、ビタミン、ミネラル、アミノ酸、炭水化物、液体、成長因子など多くの成分からなります。（成長因子は細胞分裂や生育、分化や生存、その他重要な細胞機能を促進するシグナルタンパク質です。）細胞は、増殖し分化するためにこれらの栄養素の継続的な供給を必要とします。しかし、細胞培地は現在非常に高価で、大規模な細胞培養肉生産の低コスト化に向けた初めの要素の1つとなると期待されています。これは主に成長因子が高価であることが原因です。&lt;/p&gt;
&lt;p&gt;Peter Stogios（トロント大学、カナダ）はこの問題に取り組んでいます。数十種類の生物から成長因子タンパク質をスクリーニングし、それらの構造や機能を慎重に分析することにより、Stogios博士と彼のチームは、動物由来でなく、現状の成長因子よりも低コストで上手く機能する新しい成長因子を作製しようとしています。これらの新しい成長因子は細胞培養肉生産の大規模化を加速する魅力的な道具になるでしょう。&lt;/p&gt;
&lt;h3&gt;足場と構造&lt;/h3&gt;
&lt;p&gt;肉は、牛のひき肉から、鶏の胸肉、豚の切り身まで様々な形やサイズからなります。細胞培養肉産業が直面する他の課題は、どのようにして、分化した細胞の集まりを従来の動物肉のような引き締まったものにするかということです。いくつかの細胞培養肉企業はすでに異なる牛ひき肉製品の生産と味のテストに成功しています。現在の目標は、ステーキのような厚切り肉のスケーラブルな生産方法を確立することです。&lt;/p&gt;
&lt;p&gt;Marcelle Machluf（テクニオンイスラエル工科大学、イスラエル）とAmy Rowat（UCLA、アメリカ）の両者は、より巨大な3次元の細胞培養肉構造の生産を助ける足場技術の開発に取り組んでいます。Machluf博士と彼女の共同実験者は、小さくで食べられるマイクロキャリアという足場を作製しています。これらのマイクロキャリアは、細胞を「積み木」のように組織し、アレンジを加えることで厚切り肉の作製することができます。この開発中の技術は、低コストで簡単に大規模化することができます。興味深いことに、このプロセスは、例えば、ミンチの細胞培養肉から鶏胸肉の3次元の切り身まで、幅広い製品に利用可能です。これは、細胞培養肉企業は、同じ「積み木」を使って幅広い製品を作ることが可能であることを示しています。&lt;/p&gt;
&lt;p&gt;Rowatj博士のチームは、繊維のような足場を、様々な剛性度合いの領域によって作成しています。この足場は、細胞を肉のような繊維になるように配置するのを助け、柔軟性と剛性のバラエティーは、筋肉と脂肪が共存することを促進します。脂肪細胞と筋肉細胞が点在していることは、細胞培養ステーキが高い忠実性（再現度合い）を達成するにの重要です。Rowatの研究は植物性の肉と、細胞培養肉の世界の混合から生じるシナジーの素晴らしい例です。藻類と果物から生じる足場のための物質から始めるという彼女の選択は、生体適合性を証明し、環境にも優しいものです！&lt;/p&gt;
&lt;h3&gt;培養器とバイオプロセス&lt;/h3&gt;
&lt;p&gt;培養器は、細胞、細胞培地、さらには他の必要な足場構造をを入れておくデバイスです。（商業規模では、これらはビール醸造所で見られるビールの醸造タンクに似ています。）培養器は、細胞培養肉の開発の「バイオプロセス」、動物細胞が肉をつくるために成長し、収穫されるために本質的に必要な活動、を助けます。&lt;/p&gt;
&lt;p&gt;Ivana Gadjanski（バイオセンスインスティチュート・ノヴィ・サド大学、セルビア）と彼女の同僚たちは、細胞培養肉生産において培養器の中の環境をモニタリングする低コストのセンサーを開発しています。このセンサーは、培養器の中の細胞の成長や培地の組成のリアルタイムデータを提供します。この情報は、細胞培地やその成分の再利用を可能にします。例えば、センサーは、（アンモニアのような）代謝産物がいつフィルターを通して除去されるべきかについての決断を助けます。また、（糖のような）栄養分がいつ使い切られ、いつ補充されるべきかについての決断も助けます。Gadjanskiのチームによって開発されたこのセンサー技術は、生産規模における効率性の向上と、コスト削減に直接的に繋がります。&lt;/p&gt;
&lt;p&gt;すでに述べたように、コストと規模という2つの特徴が、細胞培養肉生産が現代の既存の生体医学業界と大きく異なる点です。Mariana Petronela(Petra)Hanga（アストン大学、イギリス）は、細胞培養肉の商業化におけるボトルネックの解消に取り組んでいます。Hanga博士の研究では、筋肉細胞と脂肪細胞を培地の中で一緒に信頼に足る大規模化をするバイオプロセスを開発します。作製されたプロトコルは、筋肉細胞と脂肪細胞の両方の質を保ちつつ最適化された細胞の成長のバランスを保ちます。
コストの解析することで、どのようにして細胞培養肉生産コストを最小化するかという提言をこのチームがつくることに繋がるでしょう。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;
このようにして、これらの6つのプロジェクトは細胞培養肉産業が直面している重要な技術的課題に取り組んでいます。これらの研究者達はは、その研究内容と結果を私たち皆と共有することに尽力します。私たちは、これらのプロジェクトが、手頃な価格でハイクオリティな細胞培養肉を世界中の消費者に届けることを目指す、より革新的な研究開発を加速させるのを待ちきれません。&lt;/p&gt;
&lt;p&gt;今後数カ月にわたって、GFIブログ読者には、これらのプロジェクトとそれに取り組む研究者の詳細を紹介していきます。もし、2018年の支援金受賞者に直接会いたいのであれば、9月に開催される&lt;a href="https://goodfoodconference.com/"&gt;2019 Good Food Conference&lt;/a&gt;に是非参加登録してください！&lt;/p&gt;
&lt;p&gt;記事の翻訳はここまで&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;
&lt;div id="words"&gt;&lt;/p&gt;
&lt;h1&gt;英単語&lt;/h1&gt;
&lt;/div&gt;

&lt;p&gt;sinewy ... 頑丈な、引き締まった、筋骨たくましい&lt;/p&gt;
&lt;p&gt;building block ... 積み木&lt;/p&gt;
&lt;p&gt;stiffness ... 堅いこと、曲げや捻りに強い、剛性&lt;/p&gt;
&lt;p&gt;intersperse ... 散在する、点在する&lt;/p&gt;
&lt;p&gt;fidelity ... 忠実（度合い）&lt;/p&gt;
&lt;p&gt;brewery ... 醸造所&lt;/p&gt;
&lt;p&gt;filter out ... 除去する&lt;/p&gt;
&lt;p&gt;replenish ... 補充する&lt;/p&gt;
&lt;p&gt;&lt;br&gt;
&lt;div id="thoughts"&gt;&lt;/p&gt;
&lt;h2&gt;感想、おわりに&lt;/h2&gt;
&lt;/div&gt;

&lt;p&gt;自分の研究分野を選択する上で非常に参考になりました。短い文章で、シンプルな英語で適切にまとめられており、人工培養肉生産における研究課題を俯瞰できたと思います。
今後、各プロジェクトの紹介記事も出るようで楽しみです。そちらも可能であれば翻訳していきたいと思います！&lt;/p&gt;
&lt;div id="links"&gt;

## 関連

&lt;/div&gt;

&lt;p&gt;その他の関連記事
&lt;a href="https://www.gfi.org/researchgrants"&gt;The winners of Good Food Institute Grand Program&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.gfi.org/gfi-research-program-update-part-1-introduction"&gt;Plant-Based Research Projects&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.gfi.org/gfideas-food-financials"&gt;Cell-Based Research Projects&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;またGFI主催のカンファレンスが9月にSFであります。
&lt;a href="https://goodfoodconference.com/"&gt;The Good Food Conference&lt;/a&gt;
参加を熱望しており、予定調整中です。一緒に行く人がいたら行きましょう(笑）。&lt;/p&gt;</content><category term="細胞農業"></category><category term="細胞農業"></category><category term="記事翻訳"></category><category term="研究"></category><category term="翻訳"></category></entry><entry><title>細胞農業に取り組むスタートアップまとめ</title><link href="https://naoto-yamaguchi.github.io/site/xi-bao-nong-ye/startups_in_cellular_agriculture.html" rel="alternate"></link><published>2019-06-07T00:00:00+09:00</published><updated>2019-06-07T00:00:00+09:00</updated><author><name>Naoto Yamaguchi</name></author><id>tag:naoto-yamaguchi.github.io,2019-06-07:/site/xi-bao-nong-ye/startups_in_cellular_agriculture.html</id><summary type="html">&lt;p&gt;細胞農業に取り組むスタートアップまとめ&lt;/p&gt;</summary><content type="html">&lt;h1&gt;動機&lt;/h1&gt;
&lt;p&gt;色々と調べる中で、様々な会社が出てきて頭の中が混乱したため、それぞれの会社が何をやっているのかを軽く整理する必要性を感じたから。
とはいえ、以下の参考にあるような記事を見るのが一番。この記事は、自分が理解している範囲を日本語でまとめたもの程度。&lt;/p&gt;
&lt;p&gt;随時追記していきたい。&lt;/p&gt;
&lt;h1&gt;参考&lt;/h1&gt;
&lt;p&gt;以下の2つは大いに参考にした。
* &lt;a href="https://www.cell.ag/companies"&gt;CellAgのJob Listing Site&lt;/a&gt;
* &lt;a href="https://docs.google.com/spreadsheets/d/1-GxB1FjgRIyuELLP9vvLBUv4hqHXGqrK_j-oP9su-a8/edit#gid=0"&gt;Robert Yaman → Resources → Industry Snapshot&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;それ以上に情報量があるのは、
* &lt;a href="https://golden.com/wiki/Cluster%3A_Cell-based_and_plant-based_meat"&gt;Golden&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Cellular Agriculture (Tissue engineering-based)&lt;/h1&gt;
&lt;h2&gt;Cell-Based Meat&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.aleph-farms.com/"&gt;Alpha Farms&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Ashdod, Israel&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=""&gt;Avant Meats&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Hong Kong&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://biftek.co/"&gt;BIFTEK&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Ankara, Turkey&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.cellularagriculture.co.uk/"&gt;Cellular Agriculture&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Research DirectorのMarianne Eliisさんは、University of Bathの教授。&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.new-harvest.org/getting_to_know_marianne_ellis"&gt;Mariannneさんのインタビュー by New Harvest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;会社自体はそんなに活動していないっぽい？&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="http://highersteaks.com/"&gt;Higher Steaks&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Bristol, UK&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://integriculture.jp/"&gt;Integriculture&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Tokyo, Japan&lt;/li&gt;
&lt;li&gt;現時点で、日本で唯一の細胞農業スタートアップ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.memphismeats.com/"&gt;Memphis Meats&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Berkeley, California&lt;/li&gt;
&lt;li&gt;founded by Indian origin cardiologist Dr Uma Valeti&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.meatable.com/"&gt;Meatable&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Leiden, the Netherlands&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://missionbarns.com/"&gt;Mission Barns&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Berkeley, California&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://mosameat.eu/"&gt;MosaMeat&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Maastricht, The Netherlands&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://newagemeats.com/"&gt;New Age Meats&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;San Francisco, California&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://supermeat.com/"&gt;SuperMeat&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Tel Aviv, Israel&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://wildearth.com/"&gt;Wild Earth&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;San Francisco, California&lt;/li&gt;
&lt;li&gt;Pet Food - mostly plant-based, but cultured mouse for cats&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=""&gt;Cellular Agriculture Society(CAS)&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cambridge, Massachusetts&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Cell-Based Seafood&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;[BlueNalu](https://www.bluenalu.com/)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;San Diego, California&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=""&gt;Finless Foods&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;San Francisco, California&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://www.thewildtype.com/mission"&gt;Wild Type&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;San Francisco, California&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://shiokmeats.com/"&gt;Shiok Meats&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Singapore&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Acellular Agriculture(Fermentation-based )&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.clarafoods.com/"&gt;Clara Foods&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Sourh San Francisco, California&lt;/li&gt;
&lt;li&gt;Egg&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://justforall.com/"&gt;JUST&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;San Francisco, California&lt;/li&gt;
&lt;li&gt;Just Eggを開発&lt;/li&gt;
&lt;li&gt;それ以外にも、チキンナゲットを開発しており、Cell-based meatにも取り組んでいる。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.perfectdayfoods.com/"&gt;Perfect Day&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Berkeley, California&lt;/li&gt;
&lt;li&gt;Diary, Ice cream&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.modernmeadow.com/"&gt;Modern Meadow&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Nutley, New Jersey&lt;/li&gt;
&lt;li&gt;Leather&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://boltthreads.com/"&gt;Bolt Threads&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Emeryville, California&lt;/li&gt;
&lt;li&gt;Silk&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.spiber.jp/en"&gt;Spiber&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;SFC(慶應湘南藤沢)発のスタートアップ&lt;/li&gt;
&lt;li&gt;Silk&lt;/li&gt;
&lt;li&gt;蜘蛛の糸で有名。タンパク質生産。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://geltor.com/"&gt;Geltor&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;San Leandro, California&lt;/li&gt;
&lt;li&gt;Collagen&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.pembient.com/"&gt;Pembient&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Seattle, Washington&lt;/li&gt;
&lt;li&gt;Wildlife product, biofabricated horn&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Plant-Based Meat&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Impossible Foods&lt;ul&gt;
&lt;li&gt;有名&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Beyond Meat&lt;ul&gt;
&lt;li&gt;有名&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;その他&lt;/h1&gt;
&lt;h2&gt;Research Institute&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;A research center for cellag in Mumbai&lt;ul&gt;
&lt;li&gt;GFI partner with ICT(Institute of Chemical Technology) to set up a research center for cellular agriculture in Mumbai&lt;/li&gt;
&lt;li&gt;Referencing &lt;a href="https://www.indiatimes.com/news/india/mumbai-becomes-world-s-first-city-to-host-a-research-centre-dedicated-to-lab-grown-meat-362394.html"&gt;the article&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;3D-printed meat alternatives&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.redefinemeat.com"&gt;Redfine Meat&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Israel&lt;/li&gt;
&lt;li&gt;Accoring to &lt;a href="https://www.fooddive.com/news/redefine-meat-raises-6m-to-produce-3d-printed-meat-alternatives/562828/"&gt;this article on Sept.13, 2019&lt;/a&gt;, Redfine Meat, an Israel startup launched last year, completed a $6 million funding round led by CPT Capital.&lt;/li&gt;
&lt;li&gt;Developing its 3D printing system to produce plant-based meat alternatives. The goal is to enter mass production in 2021.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.novameat.com/"&gt;Nova Meat&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;Barcelona, Spain&lt;/li&gt;
&lt;li&gt;According to &lt;a href="https://techcrunch.com/2019/09/05/novameat-has-a-platform-for-3d-printing-steaks-and-has-new-money-to-take-it-to-market/"&gt;this article on Sept.6, 2019&lt;/a&gt;, They provide the equipment, the machinery, under a licensing agreement to the plant-based companies.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;レストラン&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://bistro-invitro.com/en/bistro-invitro/"&gt;Bistro In Vitro&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;謎のサイト&lt;/li&gt;
&lt;li&gt;世界初の(オンライン上の)lab-grown meatのレストラン。予約すると抽選でIn Vitro Meat Cookbooksをもらえる。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Smart Foods&lt;/h2&gt;
&lt;p&gt;既に作られて便利なだけでなく、栄養価的に最適化された食べ物の提供を目指す。&lt;a href="https://www.forbes.com/sites/bernardmarr/2019/06/28/the-future-of-food-amazing-lab-grown-and-3d-printed-meat-and-fish/#7715849746f6"&gt;こちらの記事&lt;/a&gt;に載っていた会社を少し調べてみた。
* &lt;a href="https://soylent.com/"&gt;Soylent (U.S)&lt;/a&gt;
    * 完全栄養食みたいなノリ。ドリンクやパウダー、固形物を販売。タンパク質は大豆由来のもの、炭水化物は代謝に時間のかかる二価の糖イソマルトースを使用。脂質は、一価不飽和脂肪酸の高品質源である高オレイン酸ひまわり油を使用。26種類のビタミンとミネラルを含む。Twitterアカウントのフォロワーは42.4Kもいたので、そこそこ有名(?)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://jp.huel.com/"&gt;Huel(U.K.)&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;完全栄養食。日本語サイトがあったのでそちらを参照。買おうと思ったが、1ボトル555円で、12ボトル13320円からしか買えなかった（2019-07-05）ので購入は保留。動物性のものは使っていないみたい。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://vitaline.shop/"&gt;Vitaline (France)&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Twitterのフォロワーは700弱と少なめ。フランス語発信だからか?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;日本だと、BASE PASTAやCOMPなどがあります。BASE PASTAは試してみましたが、特にパンが美味しかったです。何もつけなくても美味しく食べられましたし、腹持ちが良かったです。
完全栄養食は、どこで差別化し、どのようにして広まっていくのか興味あります。&lt;/p&gt;
&lt;h2&gt;Laboratory Automation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://opentrons.com/"&gt;Opentrons&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;生命科学実験自動化のためのプラットフォーム(API?)開発。共通の言語で、様々な生命科学実験を自動でおこなうロボットへの指示を出せるように。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="細胞農業"></category><category term="細胞農業"></category><category term="スタートアップ"></category><category term="Cellular Agriculture"></category></entry><entry><title>4,5月の振り返り</title><link href="https://naoto-yamaguchi.github.io/site/diary/diary_1905.html" rel="alternate"></link><published>2019-06-06T00:00:00+09:00</published><updated>2019-06-06T00:00:00+09:00</updated><author><name>Naoto Yamaguchi</name></author><id>tag:naoto-yamaguchi.github.io,2019-06-06:/site/diary/diary_1905.html</id><summary type="html">&lt;p&gt;4,5月の振り返り&lt;/p&gt;</summary><content type="html">&lt;h1&gt;動機&lt;/h1&gt;
&lt;p&gt;ブログを書いている友達に良い刺激を受けて、ハードル低めに思ったこととかやったことの記録も気軽に書いてみることにしました。とりあえず、月1で振り返りとして書いてみるというマイルストーンを設定しようと思います。私の尊敬する&lt;a href="https://medium.com/@tumada/side-project-success-and-failure-pattern-b8b02b27d073"&gt;馬田隆明さんのMediumでの記事&lt;/a&gt;でも、「定期的な予定を持つ方が圧倒的に生産性がよくなる」という話がありますし、自分の振り返り記録を残しておくことは、未来に見返した時に面白いし、未来の自分による記憶の書き換えにも対抗できます（良いか悪いかは別にして）。
思ったことを書き連ねていく試みは今までもあったのですが、うまくまとまらないとか、忙しいとか言い訳して書ききれていませんでした。&lt;/p&gt;
&lt;h1&gt;目次&lt;/h1&gt;
&lt;h1&gt;環境変化&lt;/h1&gt;
&lt;p&gt;数ヶ月前から、学校の近くで友達とシェアハウスを始めました。この環境変化は自分にとっては概ね非常に良いものでした。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;学校の近くに住んだら、&lt;ul&gt;
&lt;li&gt;最高だった&lt;/li&gt;
&lt;li&gt;控えめに言って最高だった&lt;/li&gt;
&lt;li&gt;帰宅時間の融通が聞いて学校の友達といられる時間が長くなる。→より深い付き合いに&lt;ul&gt;
&lt;li&gt;家が遠いと友達と面白い話をしていても、もう帰らないと、となりますが、終わりの時間を気にせず思う存分時間を使うことで、その友達とより深い話ができました。夜遅くまで話していると仲良くなった気がする（少なくとも私は）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;授業の合間に一旦帰って、食事も睡眠も洗濯も歯磨きもできる。行動の選択肢が広がる。&lt;/li&gt;
&lt;li&gt;職場も家の近くが良いと思った&lt;ul&gt;
&lt;li&gt;が、家族にその話をしたら、子供がいる場合はどうするかと聞かれて確かにとなった。家の目の前にサッカーやり放題の公園があったことで、自分の小学校生活はとても楽しいものだったので、例えば職場近くのバリバリ都心に住むのも考えものだなと思った。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;自分の例では、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;シェアハウスをすると、&lt;ul&gt;
&lt;li&gt;楽しい&lt;/li&gt;
&lt;li&gt;控えめに言って楽しい&lt;/li&gt;
&lt;li&gt;帰っても誰かいるから寂しくない。家も賑やか。&lt;/li&gt;
&lt;li&gt;ハウスメイトに良い影響を受ける&lt;/li&gt;
&lt;li&gt;睡眠時間が比較的短くなった。&lt;ul&gt;
&lt;li&gt;夜遅く起きている友達がいると影響を受ける。みんなが起きてると自分もまあいっかとなることもある。&lt;/li&gt;
&lt;li&gt;さすがにまずいと思って、睡眠の本を読み意識改革したが、まだ直しきれてない。頑張ろう。睡眠が重要なのは明白なので。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;朝は誰かは起きるので、寝坊はほとんどしない。&lt;/li&gt;
&lt;li&gt;他人と一緒に住むというのがどういうことか学べる。&lt;/li&gt;
&lt;li&gt;生活の細かい部分で気になるところが出てくる。これは自分の性格もあるかもしれませんが、教育とか今まで育ってきた環境の違いが如実に表れるなぁと思いました。&lt;/li&gt;
&lt;li&gt;今まで以上に親に感謝するようになった。ありがとう。&lt;/li&gt;
&lt;li&gt;他人との関わりが増える。自分の存在、アイデンティティ的なものを見直すきっかけになった。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;学科&lt;/h1&gt;
&lt;p&gt;非常に忙しかったです。課題とかこなすので精一杯で、読書や+αのものに時間を費やせなかったです。
学科の勉強内容自体は、興味のあるものが多く楽しいのですが、1つ1つに対しても消化不良になっており、復習して消化していきたいです。&lt;/p&gt;
&lt;h1&gt;認知科学への興味と、人間の直感と理性&lt;/h1&gt;
&lt;p&gt;読んだのは4月だったのかもしれませんが、友達に勧められて、&lt;a href="https://www.furomuda.com/entry/2018/08/04/011000"&gt;人生は、運よりも実力よりも「勘違いさせる力」で決まっている&lt;/a&gt;を読みました。&lt;/p&gt;
&lt;p&gt;本書は、錯覚資産を上手に利用することで、上手く世の中を生きていけるという考えについて述べたものです。
錯覚資産という考え方自体も面白いと思いましたが、自分が印象に残ったのは、人は、シンプルなことをいう人の意見を聞きやすいということです。これは兼ねてから自分が抱えていた疑問に1つ解を与えてくれるものでした。
自分は、世の中そんなにシンプルじゃないし、自分にはわからないことがありすぎると思っているので、あることに対して、自信を持って自分の意見や考えを述べるのが苦手でした。そのため。いや、絶対これだという意見を自信を持って言える人に対して凄いなと思いつつ、何故そんなに自信を持って言えるのだろうと思っていました。Twitterとかニュース記事でみる有名人の発言はあたかも世の中をわかったかのように断言し、シンプルで明確な発言をしていて違和感を感じたことがありました。もしかしたら、分野の最先端に立つと当然見渡せる範囲も広くなって明確に世の中が理解できるようになるのかもしれませんが、そうでないとすると、彼らの自信はどこから来るのでしょうか？これはまだわからないままなのですが、ひょっとしたら、上に立つ立場の人達は、シンプルで明確な考えを打ち出すことで、サポーターなどの自分の意見に賛同する味方、仲間を増やしているのではないかと思いました。意図的かどうかは置いておいてこれは中々ありな方法ではないかと思いました。世の中がシンプルではないことを認識しつつも状況に応じて、明確でシンプルな発言によって人を惹きつけ、自分の目標を達成する。人の認知を理解した賢いやり方なのではと感心しました。
一方、現在の自分は間違えることを恐れ、比較的中庸な意見に収まっていて、自分の意見を述べず客観的意見のみを述べることに終始してしまうこともあります。友達と話していてもその人の目的を達成するためには、自分の意見を話すより、自分が情報として持っている客観的な意見を提供してあげた方が良いのではないかとも思って、無難な発言を繰り返し、結局自分がどういう人かわかってもらえない、自分の意見を言う機会が少なくなることで、伝える力が低下する。&lt;/p&gt;
&lt;p&gt;人間は生存と繁殖のために、直感と理性という2種類の生化学反応アルゴリズムを発展させてきた。現代は、環境の変化は異常なほど速く、現代人は甘いものが好きだし（カロリーを溜め込むための行動）、飢餓が解決されたのはほんの数十年前の話であり、動物的な本能は依然として持っていることになる。
それが故に、現代の異常に早い社会の変化に対応しきれていない、人間の直感などの反応があり、それが人間って。。。と思ってしまうような出来事を引き起こしたり、しているのではないかと考えた。&lt;/p&gt;
&lt;p&gt;大昔から形作られてきた、直感と理性の生化学アルゴリズムの、現代に急速に変化する環境への不適合生を認知科学で理解することで、自分がどう生きていくべきかどうかという指針が得られるのではないかと考えた。&lt;/p&gt;
&lt;h1&gt;細胞農業と細胞分化研究、バイオインフォマティクス~研究分野について~&lt;/h1&gt;
&lt;p&gt;この2ケ月で自分が取り組みたいと思える研究分野との新しい出会いがありました。自分はかねてから、人類にインパクトを与え、既存の価値観を大きく変えてしまうような取り組みに参加したいと考え、それができそうなバイオと情報科学の融合分野に進みましたが、それより細かくどの分野でどういう取り組みができそうかということについてはあまりわかっていませんでした。しかし、自分は「細胞農業」という分野に出会ったことで、自分が現時点で目指し、取り組みたいと思えることが見つかったのかなと感じています。&lt;/p&gt;
&lt;p&gt;細胞培養のための分化制御、再生医療、クロマチン構造、
遺伝子組換えゲノム
合成生物学
一方で、
ブルーオーシャン、大学でしかできないことをやる。応用と結びつきづらいので難しい&lt;/p&gt;
&lt;p&gt;情熱については、&lt;/p&gt;
&lt;p&gt;まだ色々とあったと思いますが、現時点でパッと浮かぶことを書いてみました。思い出したら追記していきます。&lt;/p&gt;
&lt;p&gt;変な生物の研究をすると良いというアドバイスをいただいた
あとは勉強しすぎないこと&lt;/p&gt;
&lt;h1&gt;料理&lt;/h1&gt;
&lt;h1&gt;シェアハウスの振り返り&lt;/h1&gt;
&lt;p&gt;シェアハウスでは、みんなで集まって、月1で振り返りをおこなっています。各人がプレゼンをおこない、先月に設定した目標をどの程度達成できたか振り返り、来月の目標を設定します。
来月(6月)の自分の目標は、
* 周りに良い影響を与える
* 細胞培養実験スタート
* 料理を楽しむ
* 読書と、英語のreadingとlisteningを毎日やりブログでoutputする
* 講義の復習を中心に生物学を学ぶ&lt;/p&gt;
&lt;p&gt;です。
「環境変化」で、上述したように、自分はシェアハウスを始めてから友人に良い影響を受けてきました。一緒に住むとなるとお互い過ごす時間も長く、与える影響も大きくなります。馬田隆明さんの&lt;a href="https://medium.com/@tumada/startup-environment-c6615b501b49"&gt;成功する起業家は居場所を選ぶ&lt;/a&gt;にもあるように、自分が周りの環境を良くすることで、その環境から自分が良い影響を受けるようになり、自分も環境も（環境は自分の一部）を良くしていくことができます。少し抽象的な目標なので、これをより具体的に分解して定量的に評価できるようになると良いですが、ひとまず抽象的な行動指針として、「周りに良い影響を与える」というのを意識していきたいと思います。&lt;/p&gt;
&lt;p&gt;また文章を書く機会が増えたことで、どうすればより良く伝えることができるのかということについて考え、&lt;a href=""&gt;書く技術、考える技術&lt;/a&gt;という本も読んでみました。そこで学んだ書き方を生かして、自分の文章で伝える力をつけていきたいと思います。&lt;/p&gt;</content><category term="Diary"></category><category term="Diary"></category></entry><entry><title>Dockerでgdb環境構築</title><link href="https://naoto-yamaguchi.github.io/site/docker/docker_gdbenv.html" rel="alternate"></link><published>2019-06-05T00:00:00+09:00</published><updated>2019-06-05T00:00:00+09:00</updated><author><name>Naoto Yamaguchi</name></author><id>tag:naoto-yamaguchi.github.io,2019-06-05:/site/docker/docker_gdbenv.html</id><summary type="html">&lt;p&gt;Dockerでgdb環境を構築した備忘録&lt;br&gt;&lt;img src="https://paper-attachments.dropbox.com/s_8FAC27AC251845FE76C63F0EAF156DF8B3F4D3C17D70B16D9D9AEE81A162B247_1559697621860_docker.png"&gt;&lt;/p&gt;</summary><content type="html">&lt;h1&gt;動機対象&lt;/h1&gt;
&lt;p&gt;学校の課題で、dえC++と機械語の命令を比較しながら、メモリアクセスを少なくし、実行クロック数の少ない命令で目的の計算をすることでという速いアルゴリズムを設計できるようになろう！というものがありました。そこで、gdbデバッガで、機械語リストを出力させるということをやったのですが、Mac OS Sierraでは、gdbコード署名用の証明書の作成が必要とのことで、面倒そうでした。そこで、DockerでCentOSコンテナを立てて、gdb環境を整えることで、その代わりとすることにしました！&lt;/p&gt;
&lt;h1&gt;参考&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://qiita.com/kurkuru/items/127fa99ef5b2f0288b81"&gt;DockerをMacOSにinstall&lt;/a&gt;
DockerでCentOSコンテナを立ち上げる&lt;/p&gt;
&lt;p&gt;&lt;a href="https://qiita.com/muniere/items/0569d05d470c5d3dc51b"&gt;CentOSにvimをインストール&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://qiita.com/SOJO/items/9d6a65f3da941c49da36"&gt;こちら&lt;/a&gt;も参考になる&lt;/p&gt;
&lt;p&gt;この途中、&lt;code&gt;./configure&lt;/code&gt;のところで、
&lt;code&gt;configure: error: no acceptable C compiler found in $PATH&lt;/code&gt;
と出たが、これはgccがインストールされていなかったからだった。&lt;a href="https://qiita.com/tmak_tsukamoto/items/b1c1f04d2a2ac527887c"&gt;以下&lt;/a&gt;に記載の同様のエラーだったため、gccのインストールで解決&lt;/p&gt;
&lt;p&gt;&lt;a href="https://blog.sioyaki.com/entry/2017/04/10/101610"&gt;g++をyumでインストール&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;gdb使ってみたら&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gdb&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;
&lt;span class="n"&gt;Breakpoint&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;at&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;x4007e8&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cpp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gdb&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;
&lt;span class="n"&gt;Starting&lt;/span&gt; &lt;span class="n"&gt;program&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;01&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;out&lt;/span&gt;
&lt;span class="n"&gt;warning&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;no&lt;/span&gt; &lt;span class="n"&gt;loadable&lt;/span&gt; &lt;span class="n"&gt;sections&lt;/span&gt; &lt;span class="k"&gt;found&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;added&lt;/span&gt; &lt;span class="n"&gt;symbol&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="k"&gt;system&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;supplied&lt;/span&gt; &lt;span class="n"&gt;DSO&lt;/span&gt; &lt;span class="k"&gt;at&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;x7ffff7ffa000&lt;/span&gt;

&lt;span class="n"&gt;Breakpoint&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;at&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cpp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;
&lt;span class="mi"&gt;6&lt;/span&gt;                &lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;Missing&lt;/span&gt; &lt;span class="n"&gt;separate&lt;/span&gt; &lt;span class="n"&gt;debuginfos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;use&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;debuginfo&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;glibc&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;212&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;el6_10&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x86_64&lt;/span&gt; &lt;span class="n"&gt;libgcc&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;el6&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x86_64&lt;/span&gt; &lt;span class="n"&gt;libstdc&lt;/span&gt;&lt;span class="o"&gt;++-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;el6&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x86_64&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;となったので、
&lt;a href="https://corgi-lab.com/linux/debug-with-gdb/"&gt;debuginfoのinstall&lt;/a&gt;
&lt;a href="https://stackoverflow.com/questions/10389988/missing-separate-debuginfos-use-debuginfo-install-glibc-2-12-1-47-el6-2-9-i686"&gt;こちら&lt;/a&gt;も、Missing separate debuginfosについて&lt;/p&gt;
&lt;h1&gt;目次&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;DockerでCentOSコンテナを立ち上げる&lt;/li&gt;
&lt;li&gt;CentOSにgdbをインストール&lt;/li&gt;
&lt;li&gt;CentOSにvimをインストール&lt;/li&gt;
&lt;li&gt;CentOSにg++, debuginfoをインストール&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;DockerでCentOSコンテナを立ち上げる&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;centosイメージのダウンロード&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;docker pull centos&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;コンテナの起動&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;docker run -d --cap-add=SYS_PTRACE --security-opt=&amp;quot;seccomp=unconfined&amp;quot; --name gdb centos:centos6.9 /bin/bash&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;-dオプションをつけてバックグラウンドで起動しないとうまくいかなかったので注意。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;起動しているコンテナの確認&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;docker ps&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;停止しているものも確認したい場合は&lt;code&gt;-a&lt;/code&gt;をつける&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;docker exec -it gdb /bin/bash&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;でbashを起動し、中に入れる&lt;/p&gt;
&lt;h1&gt;CentOSにgdbをインストール&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;gdbのインストール&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;yum install gdb&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;これでできた！と思って、ファイルを作ってデバッグしてみようと思ったらvimがインストールされてなかった。&lt;/p&gt;
&lt;h1&gt;CentOSにvimをインストール&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;vimをインストールするのに必要なパッケージが入っているかを以下のコマンドで確認。"list installed"はインストール済みのパッケージ一覧を表示。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ yum list installed &lt;span class="p"&gt;|&lt;/span&gt; grep mercurial
$ yum list installed &lt;span class="p"&gt;|&lt;/span&gt; grep ncurses-devel
$ yum list installed &lt;span class="p"&gt;|&lt;/span&gt; grep make         
$ yum list installed &lt;span class="p"&gt;|&lt;/span&gt; grep gcc 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;インストールされていない場合はそれぞれインストール。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ yum install mercurial
$ yum install ncurses-devel
$ yum install make
$ yum install gcc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;vimのインストール&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; /usr/local/src
$ sudo hg clone https://bitbucket.org/vim-mirror/vim vim
$ &lt;span class="nb"&gt;cd&lt;/span&gt; vim
$ ./configure --with-features&lt;span class="o"&gt;=&lt;/span&gt;huge --enable-multibyte --disable-selinux
$ make
$ make install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;必要があれば、&lt;a href="https://qiita.com/meio/items/08143eacd174ac0f7bd5"&gt;こちら&lt;/a&gt;を参考に、日本語文字化けしないように、&lt;code&gt;~/.vimrc&lt;/code&gt;の設定をしておきましょう。&lt;/p&gt;
&lt;h1&gt;CentOSにg++, debuginfoをインストール&lt;/h1&gt;
&lt;p&gt;これで、vimが使えるので、C++ファイルの作成をしました。コンパイルしようとしたところ、g++をインストールしていないことに気がついたので、&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ yum install gcc-c++
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;でインストールし、&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ g++ -g a.cpp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;-gオプションをつけて、gdbデバック用にコンパイル。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ gdb ./a.out
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;で実行して、&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ b main
$ run
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;したところ、&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gdb&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt;
    &lt;span class="n"&gt;Breakpoint&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;at&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;x4007e8&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cpp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;gdb&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;run&lt;/span&gt;
    &lt;span class="n"&gt;Starting&lt;/span&gt; &lt;span class="n"&gt;program&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;root&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;01&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;out&lt;/span&gt;
    &lt;span class="n"&gt;warning&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="k"&gt;no&lt;/span&gt; &lt;span class="n"&gt;loadable&lt;/span&gt; &lt;span class="n"&gt;sections&lt;/span&gt; &lt;span class="k"&gt;found&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;added&lt;/span&gt; &lt;span class="n"&gt;symbol&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="k"&gt;system&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;supplied&lt;/span&gt; &lt;span class="n"&gt;DSO&lt;/span&gt; &lt;span class="k"&gt;at&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;x7ffff7ffa000&lt;/span&gt;

    &lt;span class="n"&gt;Breakpoint&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;main&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;at&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cpp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;
    &lt;span class="mi"&gt;6&lt;/span&gt;                &lt;span class="n"&gt;cout&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;endl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;Missing&lt;/span&gt; &lt;span class="n"&gt;separate&lt;/span&gt; &lt;span class="n"&gt;debuginfos&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;use&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;debuginfo&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;glibc&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;212&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;el6_10&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x86_64&lt;/span&gt; &lt;span class="n"&gt;libgcc&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;el6&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x86_64&lt;/span&gt; &lt;span class="n"&gt;libstdc&lt;/span&gt;&lt;span class="o"&gt;++-&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;23&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;el6&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;x86_64&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;となったので、
debuginfoをインストール&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ yum install yum-utils
$ debuginfo-installglibc-2.12-1.212.el6_10.3.x86_64 libgcc-4.4.7-23.el6.x86_64 libstdc++-4.4.7-23.el6.x86_64 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;これで、gdbでデバッグできるようになりました！
参考にさせていただいた記事、ありがとうございます。&lt;/p&gt;
&lt;h1&gt;Dockerコンテナをcommitしてみる&lt;/h1&gt;
&lt;p&gt;gdbという名前のコンテナで動かしていたものを、gdbenvというイメージとして保存します。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ docker commit gdb gdbenv
$ docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
gdbenv              latest              c7e81afda91c        &lt;span class="m"&gt;22&lt;/span&gt; seconds ago      &lt;span class="m"&gt;1&lt;/span&gt;.34GB
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;で、&lt;code&gt;gdbenv&lt;/code&gt;という名前のイメージができていることを確認。
今後ここからイメージを起動して使うことができます。
Docker Hubにimageを公開すれば他の人も利用可能になります。公開にはDockerのアカウントを作成する必要があるみたいです。&lt;/p&gt;
&lt;h1&gt;commitしたimageからコンテナを利用→エラー&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;commitしたgdbenvというイメージから、gdbenvという名前のコンテナを起動して、bashを動かした。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ docker run --name gdbenv -it -d gdbenv /bin/bash
$ docker &lt;span class="nb"&gt;exec&lt;/span&gt; -it gdbenv /bin/bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;これでgdbででバックしようとしたら、&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;(gdb) b main&lt;/span&gt;
&lt;span class="err"&gt;Breakpoint 1 at 0x4007e8: file a.cpp, line 6.&lt;/span&gt;
&lt;span class="err"&gt;(gdb) run&lt;/span&gt;
&lt;span class="err"&gt;Starting program: /root/01/a.out&lt;/span&gt;
&lt;span class="c"&gt;warning: Error disabling address space randomization: Operation not permitted&lt;/span&gt;
&lt;span class="err"&gt;1&lt;/span&gt;
&lt;span class="err"&gt;2&lt;/span&gt;
&lt;span class="err"&gt;During startup program exited normally.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;となったので、調べてみると、
gdbはシステムコールを使ってデバッグしているので、Dockerのコンテナを起動する際に、
* --cap-add=SYS_PTRACE: コンテナ内からのgdbによるptrace(2)を許可
* --security-opt="seccomp=unconfined": コンテナ内からのシステムコールの発行に制限を掛けない
の2つのオプションを追加する必要があるようです。（初めのCentOSのイメージからコンテナ起動するときに使ったコマンドと同じ。てっきり忘れていました。
&lt;a href="https://www.cyamax.com/entry/2018/02/09/070000"&gt;こちら&lt;/a&gt;を参考にさせていただきました。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ docker run --cap-add&lt;span class="o"&gt;=&lt;/span&gt;SYS_PTRACE --security-opt&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;seccomp=unconfined&amp;quot;&lt;/span&gt; --name gdbenv -it -d gdbenv /bin/bash
$ docker &lt;span class="nb"&gt;exec&lt;/span&gt; -it gdbenv /bin/bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;このようすることで、うまくできました。&lt;/p&gt;
&lt;h1&gt;このimagesをDocker Hubにpushする&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://qiita.com/umi/items/d4b5a68263ad0444693b"&gt;これ&lt;/a&gt;を参考に
&lt;a href="https://hub.docker.com/explore/"&gt;Docker Hub&lt;/a&gt;にアカウント登録して、
そのアカウントで、ターミナルからログイン&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ docker login
Username: nyamaguchi
Password: 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;pushしたいイメージに、&lt;code&gt;docker tag&lt;/code&gt; コマンドで&lt;code&gt;&amp;lt;アカウント名&amp;gt;&amp;lt;リポジトリ名&amp;gt;:&amp;lt;タグ名&amp;gt;&lt;/code&gt; というタグを付加。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ docker images                                                                          &lt;span class="m"&gt;13&lt;/span&gt;:34:35
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
gdbenv              latest              c7e81afda91c        &lt;span class="m"&gt;27&lt;/span&gt; hours ago        &lt;span class="m"&gt;1&lt;/span&gt;.34GB
$ docker tag c7e81afda91c nyamaguchi/gdbenv:latest
$ docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE
gdbenv              latest              c7e81afda91c        &lt;span class="m"&gt;27&lt;/span&gt; hours ago        &lt;span class="m"&gt;1&lt;/span&gt;.34GB
nyamaguchi/gdbenv   latest              c7e81afda91c        &lt;span class="m"&gt;27&lt;/span&gt; hours ago        &lt;span class="m"&gt;1&lt;/span&gt;.34GB
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;これをリモートリポジトリへとpush&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ docker push nyamaguchi/gdbenv:latest
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Docker Hubからpullする&lt;/h1&gt;
&lt;p&gt;centosにgdb, vim, g++をinstallしたこのイメージを私がDocker Hubのパブリックリポジトリにpushしたので、&lt;code&gt;docker pull&lt;/code&gt;で自分のローカル環境に持ってくることができます。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ docker pull nyamaguchi/gdbenv
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;でこのimageでも利用可能になります。
ほぼ使い道ないかもしれませんが、もしよかったら使ってみてください。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker search gdbenv&lt;/code&gt;で検索できるはずですが、なぜか見つかりませんでした。&lt;/p&gt;</content><category term="Docker"></category><category term="Docker"></category><category term="Programming"></category></entry><entry><title>細胞農業に興味がある理由(The reason why I'm interested in cellular agriculture)</title><link href="https://naoto-yamaguchi.github.io/site/xi-bao-nong-ye/interest_in_cellular_agriculture.html" rel="alternate"></link><published>2019-06-01T00:00:00+09:00</published><updated>2019-06-01T00:00:00+09:00</updated><author><name>Naoto Yamaguchi</name></author><id>tag:naoto-yamaguchi.github.io,2019-06-01:/site/xi-bao-nong-ye/interest_in_cellular_agriculture.html</id><summary type="html">&lt;p&gt;細胞農業について&lt;/p&gt;</summary><content type="html">&lt;h1&gt;動機、対象&lt;/h1&gt;
&lt;p&gt;自分の興味があるプロジェクトについて、英語で記述する機会がありました。
そこで他人に見せることを意識しながら、自分が興味ある学問分野について書いてみました。チェックをまだ受けておらず、きちんと修正していない文なので、間違い等あるかもしれませんが、ご容赦下さい。I appriciate if you could correct me if I am wrong.
全ての人&lt;/p&gt;
&lt;h1&gt;細胞農業に興味を持った理由&lt;/h1&gt;
&lt;p&gt;私が細胞農業に興味を持ったきっかけは、農業に興味がある友達に勧められた、Cowspiracyというドキュメンタリーでした。このドキュメンタリーは、畜産業が持続可能ではないことを主張したものです。
国連が発表している人口統計によると、ほぼ確実に2050年には98億人に達すると言われており、これらの増え続ける人々を養う食糧生産方法の確立の必要性が声高に叫ばれています。中でも食肉の需要は高まる一方です。その一方で、現在の畜産業のあり方は持続可能ではなく、このままでは、将来の食料需要を満たすことはできません。なぜなら従来の食肉生産方法では、例えば牛肉1kgの生産に約10kgもの穀物を必要としており、エネルギー変換効率は悪く、生産に大量の飼料としての穀物と水や土地を必要とします。しかしこれの地球の資源には限りがあります。
そのドキュメンタリーを通して、私は畜産業が持続可能でないことを知りました。また、環境的な要因の他にも、家畜の扱い方等倫理的な側面での問題も指摘されていることを知りました。&lt;/p&gt;
&lt;p&gt;現在、それらの食糧・環境・倫理問題の1つの解決策として細胞農業が注目されています。
自分は兼ねてから、人類史にインパクトを与え、これまでの人間の価値観を大きく変えるような取り組みに関わりたいと考えていましたが、このドキュメンタリーを見て、様々なことを調べていく内に、自分が現在取り組むべきテーマはこれなのではないかと考えるようになりました。それには、主に以下の3つの理由があります。
1. 社会に大きなインパクトを与え、社会に貢献できる。細胞農業というのは、細胞を培養することで、食料を生産する方法で、今までの人間の食糧供給方法である、狩猟、飼育、栽培、醸造、合成に継ぐ第6の大きな食糧供給方法になり得るポテンシャルを秘めています。
2. 自分の専門性を生かせる。私の専門はバイオインフォマティクスですが、この細胞農業には大きく貢献できると思っています。再生医療にも
3. 動物を殺さなくてよくなる。サピエンス全史という本を読むと、いかに現在というのが当たり前ではないかということが理解できます。現代は、人間至上主義の世界で、
自分で作れないものは理解したとは言えない
私は、肉が大好きですし、日々の生活で口にしています。その一方で、動物を殺して
だからと言っていきなりベジタリアン生活をするかと言われればそこまですることはできません。（環境によっては続けることは可能だと感じた）
4. 近年激しく見られるヴィーガニズムと反ヴィーガニズムの論争に終止符を打つことができる可能性がある。
Twitter等でのやりとりを度々目にして悲しくなるのですが、あまりにお互いの立場に対する誹謗中傷が多いです。
根本的な価値観が違う中、無意味な誹謗中傷を無くし、肉を食べたい人は気兼ねなく肉を食べ続けられ、現在の動物愛護の観点からヴィーガンになっている方々も肉食を安心してみていられる、持続可能な世の中を作りたいと考えています。&lt;/p&gt;
&lt;p&gt;これは個人的な意見でして、
私が所属するShojinmeat Projectでは、&lt;/p&gt;
&lt;p&gt;自分の専門性を生かせて、持続可能な地球を実現するプロジェクトとして細胞農業に非常に興味があり、これにより持続可能性に取り組めるのではないかと考えています。&lt;/p&gt;
&lt;p&gt;このブログでは、細胞農業の可能性とその価値と正しい理解を広めることで、細胞農業の普及に貢献できればと考えています。&lt;/p&gt;
&lt;p&gt;The reason why I got interested in cellular agriculture is that I watched the documentary film, called "Cowspiracy", which a friend of mine interested in agriculture recommended me to watch. This movie persists that animal agriculture is not sustainable.
According to demographic chart by the United Nations, the world population projected to reach 9.8 billion in 2050 and food production, feeding increasing world population is required. Especially, global meat consumption will continues to rise. However, animal agriculture now is not sustainable and cannot meet the needs of future demand for food because their energy conversion efficiency rate is so low that they require a lot of crops, water, and lands, which are limited on our earth, for example, 1 kg of beef requires about 10 kg of crops.
Through the film, I understood that not only animal agriculture is unsustainable but there are other problems related to ethical issues.&lt;/p&gt;
&lt;p&gt;In order to solve these issues such as food crisis, environmental and ethical issues, cellular agriculture is recently gathering attention.
I have been hoping to be engaged in the projects which have a huge impact on human history and their way of thinking. As I did some research about cellular agriculture, I came to feel cellular agriculture is the subject that I need to pursue. The main reasons are three followings I mention below. &lt;/p&gt;
&lt;p&gt;If cellular agriculture technology develops, most people will eat beef, pork, chicken and fish meat made from animal cells in a laboratory, which is an innovative change in a way people eat.
In this topic, I will be able to make use of my specialization and tackle sustainability issues.&lt;/p&gt;
&lt;p&gt;TBE...&lt;/p&gt;</content><category term="細胞農業"></category><category term="好きなもの"></category><category term="生物"></category><category term="細胞農業"></category></entry><entry><title>がん</title><link href="https://naoto-yamaguchi.github.io/site/sheng-wu-xue/cancer.html" rel="alternate"></link><published>2019-05-31T00:00:00+09:00</published><updated>2019-05-31T00:00:00+09:00</updated><author><name>Naoto Yamaguchi</name></author><id>tag:naoto-yamaguchi.github.io,2019-05-31:/site/sheng-wu-xue/cancer.html</id><summary type="html">&lt;p&gt;がんの仕組みの解説&lt;/p&gt;</summary><content type="html">&lt;h1&gt;がん&lt;/h1&gt;
&lt;p&gt;がんは、細胞制御機構に異常が発生することでおこる病気です。現代では、5 人に 1 人ががんで命を失いますが、がんを研究で扱う理由は命を救うだけにとどまりません。がんの原因を調べることで、細胞制御機構の解明が進み、細胞生物学の基礎となるのです。我々多細胞生物の体の中では、数多くの細胞が協調して働くことで、多細胞としての個体が正常に生きることができます。しかし、この協調を乱すような細胞が生まれると、細胞社会の秩序を壊し、正常に生きることができなくなります。この協調を壊しうる細胞は、各細胞での塩基配列の変異により、毎日我々の体の中で生じていますが、それを修復する機構によって、秩序が保たれているのです。この修復する機構が壊れたり、変異が入った異常な細胞（秩序を満たす細胞）がとめどなく増殖できるようになると、我々の体の中の細胞社会の秩序を乱し、破壊に導いていくのです。&lt;/p&gt;
&lt;p&gt;ではどういう仕組みで、するのでしょうか？&lt;/p&gt;
&lt;h1&gt;動機対象&lt;/h1&gt;
&lt;p&gt;生物を学び始めた方で、がんについてよく知らないという人。
Cell 等を参考にしているので、分子細胞生物学的な観点からのがんの説明になります。がんの治療についての知識や、より大衆的な情報を求めている方は、参考に載せた、国立がん研究センター ガン情報サービス (2018)等をご確認下さい。&lt;/p&gt;
&lt;h1&gt;参考&lt;/h1&gt;
&lt;p&gt;cell chap20
国立がん研究センター ガン情報サービス (2018)
知っておきたいがんの基礎知識
https://ganjoho.jp/public/dia_tre/knowledge/basic.html&lt;/p&gt;
&lt;h1&gt;目次&lt;/h1&gt;
&lt;p&gt;流れとしては、がんとは何か、どういうがんがあって、どういう分類、種類があるのかをみたあと、その原因とどのようにして発見されてきたかの歴史的研究。
そして、がんの治療法と、近年のがん医療の取り組みをみていく&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;がんとは？&lt;ul&gt;
&lt;li&gt;正常な状態の細胞の遺伝子に変異がおき、細胞制御機構に異常がある細胞ができる。&lt;/li&gt;
&lt;li&gt;異常な細胞が増殖する（がん化）&lt;/li&gt;
&lt;li&gt;異常な細胞が塊となって腫瘍を形成し、転移や浸潤によって体の他の部位に広がり、周りに迷惑をかける。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;がんの実際&lt;ul&gt;
&lt;li&gt;日本人は、一生のうち 2 人に 1 人はなると言われている身近な病気&lt;/li&gt;
&lt;li&gt;男性では、62%の確率で発症. がんで死亡する確率は 25%&lt;/li&gt;
&lt;li&gt;女性では、47%の確率で発症. がんで死亡する確率は 16%&lt;/li&gt;
&lt;li&gt;女性は、乳房、大腸、胃、子宮、肺の順に患者数が多い。&lt;/li&gt;
&lt;li&gt;男性は、前立腺、大腸、胃、肺、膀胱&lt;/li&gt;
&lt;li&gt;死亡率は、大腸、胃、肺の順に高い。&lt;/li&gt;
&lt;li&gt;昔は胃が多かったが、検診の増加で死亡率低下、大腸は食の欧米化で増加&lt;/li&gt;
&lt;li&gt;がんの 40%は予防できるが、完全に防ぐことはできない。禁煙やバランスのとれた食生活、適度な運動、予防治療で、がんが発症する確率を下げることはできる。&lt;/li&gt;
&lt;li&gt;遺伝子の変異が原因なのでうつらない&lt;/li&gt;
&lt;li&gt;一部のガンは、ウイルス感染が背景にあるが、それだけが原因ではない&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;がんの種類&lt;ul&gt;
&lt;li&gt;良性と悪性&lt;/li&gt;
&lt;li&gt;名称&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;がんの分類&lt;/li&gt;
&lt;li&gt;がんの原理 (分子的な)&lt;/li&gt;
&lt;li&gt;がんの原因 (生活習慣的な)&lt;/li&gt;
&lt;li&gt;&lt;a href="#cancer_treatment"&gt;がんの治療法&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;標準治療&lt;/li&gt;
&lt;li&gt;外科手術&lt;/li&gt;
&lt;li&gt;薬物療法&lt;/li&gt;
&lt;li&gt;放射線療法&lt;/li&gt;
&lt;li&gt;免疫療法&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;情報源 - 公式サイトがんとは？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Cell によると&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;がんとは、変異細胞クローンが周囲の細胞を犠牲にして増殖し、ついにはこのクローンが成長し進化し広がって細胞社会全体を破壊する病気である。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="" src="https://paper-attachments.dropbox.com/s_B3B22EDC6578FBAF240D04242C36697E34E90BE462ACB6A923FB4B2FE05F2BDF_1558404445476_image.png"&gt;&lt;/p&gt;
&lt;p&gt;がん細胞は、子孫細胞に受け継がれる次の 2 つの性質によって定義されます。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1 　細胞の成長と分裂に関する制御を無視して増殖し、&lt;/p&gt;
&lt;p&gt;2 　他の細胞の領地に侵入して棲みつく。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;特にこの 2 を、浸潤という。浸潤とは、束縛を逃れて血管やリンパ管に入り、体内の他の場所に転移(metastasis)して、二次腫瘍を形成することであり、がん細胞の本質的な特徴である。
2 の性質を持たない腫瘍は、良性(benign)腫瘍と呼ばれ、悪影響を及ぼすことはない。腫瘍を切除や破壊することで通常は完治する。
1 に加えて 2 んの性質を持った腫瘍が悪性(malignant)腫瘍であり、体内に浸潤して細胞組織を破壊する。がん患者の死因の大半は、浸潤（転移）したがん細胞である。また、良性腫瘍が変異によって悪性腫瘍になることもあるので注意が必要である。&lt;/p&gt;
&lt;h2&gt;がんの種類&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;良性&lt;/li&gt;
&lt;li&gt;悪性&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;がんの分類&lt;/h2&gt;
&lt;p&gt;がんは伝統的に、由来する組織や細胞の種類によって分類されますひらがなの「がん」は悪性腫瘍全体を示す時に用いられ、漢字の「癌」を用いる時は、上皮細胞から発生するがんに限定されます。&lt;/p&gt;
&lt;p&gt;発生部位によるがん（悪性腫瘍）の分類&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;癌（上皮腫, cancer, carcinoma）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;上皮を構成する細胞である上皮細胞から発生するがん&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;がん症例の 80%は上皮腫。ガンの発生を助長する物理的・化学的損傷に最も頻繁に晒されるため&lt;/li&gt;
&lt;li&gt;例として、肺がん、乳がん、胃がん、大腸がん、子宮がん、卵巣がんなど&lt;/li&gt;
&lt;li&gt;cancer?&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;肉腫&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;結合組織や筋細胞などの非上皮細胞から生じる。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;代表的な肉腫には、骨肉腫、軟骨肉腫、横紋筋肉腫、平滑筋肉腫、線維肉腫、脂肪肉腫、血管肉腫があります。&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;造血器から発生するがん&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;血液をつくる臓器である骨髄やリンパ節を造血器といいます。造血器から発生するがんには、白血病(leukemia)、悪性リンパ腫(lymphoma)、骨髄腫等があります。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;がんの原理&lt;/h2&gt;
&lt;p&gt;がんは細胞が無秩序に増えていってしまう病気なので、細胞が増えるような変異がおこるとがんの発生の原因となる可能性となる。
そこで、細胞が制御以上に増えるような変化には、遺伝子による変化とエピジェネティックな変化の両方が考えられるが、まずは遺伝子による変化を考える。
がん発生の原因となる遺伝子&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原がん遺伝子(proto-oncogene)への変異&lt;/li&gt;
&lt;li&gt;起こり方（過剰活性型になり方）&lt;ul&gt;
&lt;li&gt;翻訳領域内の欠失または点変異による高活性タンパクの正常生産&lt;/li&gt;
&lt;li&gt;調整領域の変異による正常タンパクの過剰生産&lt;/li&gt;
&lt;li&gt;遺伝子増幅による正常タンパクの過剰生産&lt;/li&gt;
&lt;li&gt;染色体再編成により&lt;/li&gt;
&lt;li&gt;調節DNAが近傍にきて、正常タンパクの過剰生産を起こさせる&lt;/li&gt;
&lt;li&gt;活発に転写される遺伝子との融合が起こり、高活性の融合タンパクを生産（これが融合遺伝子というやつか!?）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;例&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Srcタンパク - 細胞の増殖シグナルを制御するタンパク質キナーゼ&lt;/li&gt;
&lt;li&gt;点突然変異により、活性の抑制に必要なC末端を欠いた、常に活性化型のタンパク質キナーゼがコードされる&lt;/li&gt;
&lt;li&gt;Mycタンパク - 核内にあって細胞の成長と分裂を刺激する&lt;/li&gt;
&lt;li&gt;遺伝子増幅や染色体転座による強力な調節配列の制御下への移動などにより、正常型の過剰生産でがんにつながる&lt;/li&gt;
&lt;li&gt;Rasタンパク - GTPase活性化&lt;/li&gt;
&lt;li&gt;??&lt;/li&gt;
&lt;li&gt;EGF (epidermal growth factor、細胞外シグナルタンパクである上皮増殖因子)の受容体&lt;/li&gt;
&lt;li&gt;細胞外領域の一部を欠失して除去されると活性化&lt;/li&gt;
&lt;li&gt;変異受容体は、EGFがなくても活性型二量体を形成し、勝手になる呼び鈴のように、不適切な刺激シグナルをだす。脳腫瘍で最も多い、神経膠芽腫によく見られる。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;がん抑制遺伝子(tumor suppressor gene)への変異&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;起こり方&lt;ul&gt;
&lt;li&gt;1つめは、点突然変異だったり&lt;/li&gt;
&lt;li&gt;2つめは、色々&lt;/li&gt;
&lt;li&gt;染色体不分離による欠落&lt;/li&gt;
&lt;li&gt;染色体の欠落と重複&lt;/li&gt;
&lt;li&gt;体細胞分裂における組換え&lt;/li&gt;
&lt;li&gt;遺伝子変換&lt;/li&gt;
&lt;li&gt;欠失&lt;/li&gt;
&lt;li&gt;点変異&lt;/li&gt;
&lt;li&gt;エピジェネティック制御による遺伝子サイレンシング&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;例&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Rbタンパク - 細胞周期の進行にブレーキをかける&lt;/li&gt;
&lt;li&gt;p53経路 - ダメージレスポンス。細胞周期の制御、アポトーシス、遺伝的安定性の維持という多面的な機能をもつ&lt;/li&gt;
&lt;li&gt;詳しくは、Cell5, p.1246を参照だが、p53不活性化により&lt;/li&gt;
&lt;li&gt;DNAが損傷した細胞に細胞周期を続行させ&lt;/li&gt;
&lt;li&gt;アポトーシスを回避させる&lt;/li&gt;
&lt;li&gt;損傷した染色体をもつ細胞を分裂させてがん細胞に特有の遺伝的不安定性をもたらし細胞分裂に伴ってがんを促進する変異を蓄積させる&lt;/li&gt;
&lt;li&gt;腫瘍によっては抗がん剤や放射線照射への抵抗性を持たせてしまう&lt;/li&gt;
&lt;li&gt;APC(APC/Cとは違うので注意)&lt;/li&gt;
&lt;li&gt;BRCA1/BRCA2 - 相同組換えにDNA2本鎖切断の修復の際に、Rad51タンパク（原核生物ではRecA）と相互作用する補助タンパク（こっちじゃない気もする、先生のスライドだとこっち、まあこっちでもあるのかな）&lt;/li&gt;
&lt;li&gt;MLH1 - DNA修復&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;DNA維持遺伝子（変異誘発遺伝子）への変異（がん抑制遺伝子と被りあり）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;ゲノムの安定性を保っている遺伝子、特に修復系と関わる&lt;/li&gt;
&lt;li&gt;この遺伝子に変異（Mutator、突然変異が生じる確率が正常よりも高くなるような変異）が入ると、ゲノムの修復が正常におこなわれなくなり、が原がん遺伝子や、がん抑制遺伝子に変異が入ったりして、がんが発生する。なので関わり方としては間接的ではある。&lt;/li&gt;
&lt;li&gt;例&lt;ul&gt;
&lt;li&gt;BRCA1/BRCA2 - 相同組換えにDNA2本鎖切断の修復の際に、Rad51タンパク（原核生物ではRecA）と相互作用する補助タンパク。乳がんと卵巣がんの一部のみに関わる。予防的乳房の切除を行ったアンジェリーナ・ジョリーは、このBRCA1という遺伝子に変異があった。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;まだ
 * RTK/Ras/PI3K - 細胞増殖のシグナル伝達&lt;/p&gt;
&lt;h2&gt;がんの歴史的発見&lt;/h2&gt;
&lt;p&gt;興味なければ飛ばしても良いですが、個々の原がん遺伝子の働きなどについても触れています。&lt;/p&gt;
&lt;h3&gt;原がん遺伝子の発見1 by ニワトリに肉腫をおこすウイルス(RSV)の研究&lt;/h3&gt;
&lt;p&gt;100年ほど前、結合組織の腫瘍、つまり肉腫を引き起こす感染症にかかりやすいニワトリから発見された。この感染症の原因であってウイルスは、ラウス肉腫ウイルス(Rous sarcoma virus)という、レトロウイルス(retrovirus)の一種であった。レトロウイルスは、細胞に感染すると、自身のRNAウイルスを逆転写してDNAを作り、宿主ゲノムに組み込む。ラウス肉腫ウイルスは、ニワトリにがんを引き起こすがん遺伝子を持っている。このがん遺伝子は、Src(サーク)タンパクをコードし、このタンパク質キナーゼが細胞に増殖せよというシグナルを送り続けることでがんの原因となる。このSrc遺伝子を宿主ゲノムに組み込むことで、ニワトリに感染した際に、Srcタンパクをコードするようになり、がんを発生する。
実際の発見は、様々変異ウイルスの中から、宿主細胞をがん化しない変異体を見つけ、そのゲノムを調べると、Srcタンパクを指令する遺伝子の一部または全体が欠失していることがわかったことによる。これで、Srcタンパクががん化の原因であることが推測された絵は性家族性
では、ウイルスはどのようにしてこのsrc遺伝子を持つようになったのだろうか。脊椎動物に似ている遺伝子がないかと探したところ、似ているが同一ではない塩基配列が見つかった。これは、c-Srcという原がん遺伝子で、細胞の増殖を指示するタンパク質をコードする。脊椎動物では、このc-Srcに変異が入ると、v-Src遺伝子となり、活性の抑制に必要なC末端を欠く常に活性化型のタンパク質キナーゼとなる。これが細胞への増殖シグナルを常に送り続けがんを発生する。
つまり、正常動物のゲノムに存在する増殖刺激に関わる遺伝子(原がん遺伝子)に特定の変異が入ることで（がん遺伝子となり）、増殖刺激に歯止めが効かなくなり、がんの発生につながる。
おそらくウイルスは、この変異を持った動物細胞に感染し、変異したがん遺伝子を自身のゲノムに組み込んだと思われる。&lt;/p&gt;
&lt;p&gt;つまり、流れとしては、
細胞増殖刺激に関わるタンパク質キナーゼをコードする原がん遺伝子c-Srcを動物ゲノムが持っていた（人はまだ知らない）
→特定の変異でv-Src遺伝子(がん遺伝子)となり、常に活性化型のタンパク質キナーゼをコードするようになった。(まだ知らない)&lt;/p&gt;
&lt;p&gt;→それをその遺伝子を感染したレトロウイルスがGETした&lt;/p&gt;
&lt;p&gt;→ニワトリに感染した&lt;/p&gt;
&lt;p&gt;→人間がそのニワトリを調べてみたら、Srcががん化の原因だとわかった&lt;/p&gt;
&lt;p&gt;→Srcっぽい配列を脊椎動物でも調べてみたら、似たのが見つかった&lt;/p&gt;
&lt;p&gt;→c-Srcが原がん遺伝子で、変異で、v-Srcとなると常に細胞増殖シグナルをだしがん発生に関わることがわかった。&lt;/p&gt;
&lt;p&gt;→これでがんの原因の1つがわかった！&lt;/p&gt;
&lt;p&gt;これと同様にして、他のがん遺伝子もレトロウイルスから多数同定され、正常動物細胞に存在する原がん遺伝子の発見に繋がった。&lt;/p&gt;
&lt;h3&gt;原がん遺伝子の発見2 by がん細胞のゲノム導入によるRasの発見&lt;/h3&gt;
&lt;p&gt;ここまで、レトロウイルスを使ったがん遺伝子の探索だったが、もっと直接的な方法をとる研究者もいた。
非がん細胞株に導入すると無制御の増殖を誘発するDNA塩基配列をヒトがん細胞から探そうとした。これにより見つかったのが変異型の原がん遺伝子である、Ras遺伝子である。
ヒトの腫瘍細胞から抽出したDNAを断片化して、培養細胞に導入する。形質転換して、断片DNAに含まれていたがん遺伝子を手にした細胞は、細胞増殖の制御を受けなくなり、無限に増殖する。（普通の細胞の増殖は培養皿との接触を必要とする接触を必要とし、他の細胞と接触すると増殖が阻止されと「接触阻止」というのを持つため、培養皿の表面を単層の細胞が多い尽くすと増殖を停止するが、がん細胞はその制御を受けないので、培養皿で育てると積み重なって増えていき、目で見てわかる）&lt;/p&gt;
&lt;p&gt;正常Rasタンパクは、単量体GTPアーゼで、細胞表面受容体から細胞内部へのシグナル伝達を助ける。（このRas経路は、黒田先生のフィードフォワード回路で、Rap1回路との比較でやった!!）
これに点変異が入ると、高活性のRasタンパクを作り、それに結合したGTPがGDPに加水分解されても活性が下がらなくなる。だから、、、、？
この変異は優勢変異であり、ヒトの色々ながんで変異していて、がん化に最も重要な遺伝子となっている。&lt;/p&gt;
&lt;h3&gt;がん抑制遺伝子の発見1 by 家族性のがんの原因であるRb遺伝子の同定&lt;/h3&gt;
&lt;p&gt;Rb遺伝子がコードするRbタンパクは、体内のほぼ全ての細胞に存在する普遍的な細胞周期調節因子である。Rbタンパクは細胞分裂周期の進行にブレーキをかける重要な因子の1つであり、これが欠損すると細胞は適切でない時期に細胞周期に入ってしまう。
この遺伝子に変異が入り不活性化した例が、未熟な網膜の神経前駆細胞に発生する小児がんである、網膜芽細胞腫である。これには遺伝性と非遺伝性があり、
遺伝性だと体細胞全てで2つの染色体の片方のRb遺伝子に欠失または機能欠失変異が存在する。そのため、体細胞変異が起きてもう一方のRb遺伝子に変異が入ると、不活性化氏、Rbタンパクが作られなくなり、その細胞ががん化する。（片方の遺伝子に起こるとすぐがん化なので起こりやすい）
非遺伝性だと、2つの正常なRb遺伝子の両方が不活性化してその細胞が初めてがん化する（遺伝性と比べ起こりにくい）
実際の発見は、この遺伝的に網膜芽細胞腫の患者を調べ、これらの患者の体細胞全てについてRb遺伝子の一方に欠失または機能欠失変異が存在することを発見した。&lt;/p&gt;
&lt;p&gt;CellのFig.20-30がわかりやすいので入れたい&lt;/p&gt;
&lt;p&gt;こういう遺伝性がんの研究を通して、一般的ながんに関連するがん抑制遺伝子を発見することはできるが、現在重要とされるがん抑制遺伝子でこのようにして発見されたものは少ない。&lt;/p&gt;
&lt;h3&gt;がん抑制遺伝子の発見2 by さらなる直接的な方法。がんゲノミクス&lt;/h3&gt;
&lt;p&gt;とにかく同一患者の正常細胞とがん細胞のゲノムを読んで比較し（がんゲノムは不安定なので変異は沢山あるが）、症例と照らし合わせて、欠失、欠損、異常休止の繰り返しなど一定の基準を満たすものを探し出す。これは、ゲノムを沢山読めるようになったことで可能に。&lt;/p&gt;
&lt;h3&gt;今後の見つけ方&lt;/h3&gt;
&lt;p&gt;がん化遺伝子の探索は今も続いており、
ゲノムハイブリッド形成の比較、DNAマイクロアレイ、RNA-seq、RNAi
まあこの辺の名前はどうでもよくて、どういう仕組みで同定できるか知る必要がある。（まだやってない）
これらで同定した後は、ノックアウトマウスや細胞培養で調べる必要がある。&lt;/p&gt;
&lt;h2&gt;がんの原因&lt;/h2&gt;
&lt;p&gt;疫学調査でわかった。がんの人とその人の生活習慣などを調査。
グラフで示したい。&lt;/p&gt;
&lt;h3&gt;喫煙 (30%)&lt;/h3&gt;
&lt;p&gt;肺がんの50%の原因。
山極勝三郎 1915
世界初の人工ガンの発生
うさぎの耳にコールタールを塗り続けると皮膚ガン&lt;/p&gt;
&lt;p&gt;タールに含まれる、ベンゾピレン
体内に入るとベンゾピレンを無くそうと代謝すると、より毒性のあるものになる。ラジカルを持っていて、DNAにアタックすることで、DNAに変異が起きやすくなる。
ガン以外の変異を起こすこともある？
タールは、グループAの発がん性物質&lt;/p&gt;
&lt;p&gt;タバコにもタールが沢山含まれている
タバコの煙の3大有害成分は、ニコチン(血管収縮)、タール、一酸化炭素&lt;/p&gt;
&lt;h3&gt;肥満 (30%)&lt;/h3&gt;
&lt;p&gt;獣肉、加工肉のとりすぎで、大腸ガンのリスク↑
内視鏡検査を受ければ良い
ポリープから始まることが多い。小さいうちに切除すればok。遺伝的要因でポリープができやすい人は注意。&lt;/p&gt;
&lt;p&gt;肥満は色々なガンの原因
過剰なカロリー摂取がDNAを傷つける活性酸素種が増加
肥大した脂肪細胞が周囲の組織に慢性炎症を引き起こす&lt;/p&gt;
&lt;h3&gt;細菌やウイルス (5%)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ピロリ菌
胃の中で生きられる珍しい菌。胃炎、胃潰瘍の原因。胃潰瘍はストレス性と言われていた。夏目漱石も。
保菌者は胃がんのリスクが5~10倍。
ピロリ菌は自分でアンモニアを作り、胃酸を中和して胃の中でも生きられる。
オーストラリア、ノーベル賞。飲んで胃潰瘍。抗生物質で除菌可能
日本人の1/3が持っている？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;肝炎ウイルス（B,C型）
A型は急性の肝炎。病院で治る
B,Cは潜伏型の慢性的な肝臓の炎症。肝臓ガンの原因の90%
取り除くのが難しいので、病状のコントロール。禁煙禁酒&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;パピローマウイルス（HPV）
多くはイボができるくらいでそんな問題ない。
あるタイプのものは子宮ガンのほとんどはHPV感染が原因。
感染前ならワクチンで予防可能。
このウイルスのE6,E7のタンパク質がRBやp53にくっついて機能をなくす。
他にもウイルスはそんな感じ&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ワクチンは重い副作用で、一旦取りやめ。積極的推奨はされていない。
厚労省はそのまま。世界の潮流から取り残されている。WHOで推奨されている。
子宮頸癌のリスクが下がるワクチン&lt;/p&gt;
&lt;h3&gt;遺伝的要因、家族性 (5%)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;乳がん&lt;/li&gt;
&lt;li&gt;BRCA1？(後述)&lt;/li&gt;
&lt;li&gt;前立腺癌&lt;/li&gt;
&lt;li&gt;大腸ガン
は遺伝的影響が強いとされている。
大腸、胃、乳がんは内視鏡、マンモグラフィーでの発見が容易。
前立腺癌は血液検査によるマーカー
禁煙すれば肺がんは大丈夫
肝臓ガンとかは見つけづらい&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;これらをみてわかるように
&lt;em&gt;がんの40%は予防できる！！！&lt;/em&gt;
しましょう。
40%は予防できる
- 禁煙
- バランスのとれた食生活
- 適切な体重、運動
- 感染予防、治療 (後述)
- がん検診&lt;/p&gt;
&lt;p&gt;それ以外の部分で、
ガンが発症する確率を0にするのは無理。変異は年齢に従い蓄積されていくもの
そこで注目&lt;/p&gt;
&lt;h2&gt;Mutator&lt;/h2&gt;
&lt;p&gt;突然変異が生じる確率が正常よりも高くなるような変異&lt;/p&gt;
&lt;p&gt;まだ&lt;/p&gt;
&lt;p&gt;&lt;a id="cancer_treatment"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;がんの治療法&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;標準治療&lt;/li&gt;
&lt;li&gt;外科手術&lt;/li&gt;
&lt;li&gt;薬物療法&lt;ul&gt;
&lt;li&gt;分子標的薬&lt;ul&gt;
&lt;li&gt;化合物でタンパク質に対して特異性&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;抗体医薬&lt;ul&gt;
&lt;li&gt;タンパク質のもつ抗体がくっついてタンパク質を分解&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;核酸医薬 (new!)&lt;ul&gt;
&lt;li&gt;核酸がmRNAに結合して、発現を抑制したり分解することで、病気の原因となるタンパク質を作らせないようにする。分子標的薬や抗体医薬は、タンパク質を分解するのに対して、核酸医薬は、mRNAの段階で分解したり翻訳を抑制するので、タンパク質になる前の段階で止めるイメージ。RNAなどの配列の特異性を生かすことで、より特異的に阻害できる薬を作れるのが、他にはない良い点。例えば、1塩基変異が原因の病気などに対する薬を作れる可能性がある。&lt;/li&gt;
&lt;li&gt;アンチセンスによるもの&lt;ul&gt;
&lt;li&gt;標的のmRNAのアンチセンス鎖をいれて、標的のmRNAにくっつき、タンパク質への翻訳を抑制する。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;アプタマーによるもの&lt;ul&gt;
&lt;li&gt;標的のmRNAに結合する立体構造をもつRNAをいれて、タンパク質への翻訳を抑制する。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;siRNAによるもの
    標的のmRNAを分解するsiRNAをいれて、mRNAを分解する。
    最近日本で承認されたものに、アミロイド蓄積遺伝子から発現したmRNAを分解する、siRNAによる薬がある。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;放射線療法&lt;/li&gt;
&lt;li&gt;免疫療法&lt;/li&gt;
&lt;/ul&gt;</content><category term="生物学"></category><category term="生物学"></category><category term="解説"></category><category term="授業まとめ"></category></entry><entry><title>がん</title><link href="https://naoto-yamaguchi.github.io/site/sheng-wu-xue/molecular%20evolution.html" rel="alternate"></link><published>2019-05-31T00:00:00+09:00</published><updated>2019-05-31T00:00:00+09:00</updated><author><name>Naoto Yamaguchi</name></author><id>tag:naoto-yamaguchi.github.io,2019-05-31:/site/sheng-wu-xue/molecular evolution.html</id><summary type="html">&lt;p&gt;がんの仕組みの解説&lt;/p&gt;</summary><content type="html">&lt;h1&gt;参考文献&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;[1] カール・ジンマー（著）/ダグラス・J・エムレン（著）『BLUE BACKS 進化の教科書 第3巻 系統樹や生態から見た進化』&lt;/li&gt;
&lt;li&gt;[2] 長田直樹（著）『進化で読み解く バイオインフォマティクス入門』&lt;/li&gt;
&lt;li&gt;[3] Ziheng Yang（著）『分子系統学への統計的アプローチ　計算分子進化学』&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;様々な制約の中での推測&lt;/p&gt;
&lt;h1&gt;手法 [1]&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;最節約法 ... 最もシンプルな答えが最も良い答え！&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;様々な分類群の形質に合うように系統樹を作る→候補はたくさんある→最小限必要な形質の進化的変化の回数を数えて一番形質変化の回数が少ない系統樹を再節約的な系統樹とする。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ホモプラシーがあると、最節約的でない系統樹を最節約的と見誤ることがあるので、統計的手法を用いる。ゲノムの中で系統情報を持つと思われる部分に重み付けをして、ホモぷらし＝が起きやすい部分の影響を減らす。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;エクソンは、DNAの中でタンパク質をコードしている領域なので強い純化淘汰を受け進化速度が遅いため（進化に方向性がありその変化速度が遅いので）、ホモプラシーが少なくなり系統樹復元に有用となる。&lt;/li&gt;
&lt;li&gt;イントロンや非コード領域は逆でホモプラシーの影響を減らしたいときは重みを軽くする。しかし、最近分かれた種の系統樹を作るときは、変化の速い領域の方が多くの情報が含まれて有用となる。&lt;/li&gt;
&lt;li&gt;最節約的な系統樹は1つに決まる時もあれば、複数の時もある。統計的な評価は、ブートストラップ法などで行う。&lt;/li&gt;
&lt;li&gt;ブートストラップ法は、完全なデータセットからランダムにデータを抽出し、その部分データに対して系統樹を作成することを繰り返す。この系統樹の類似性の高さが重要。また、これにより1つの系統樹における各分岐点について信頼性を評価することができる。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;距離行列法 ... 異なる種の配列を揃えて並べ、配列の相違度を表す進化距離（遺伝距離）の行列に変換する。そして配列が似ている種をクレードとしてまとめる。進化距離を系統樹の枝の長さで表す。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;距離行列法の1つとして、最も進化距離（遺伝距離）が近い2種をペアにしてまとめていく方法が近隣結合法である。&lt;/li&gt;
&lt;li&gt;最終的に全体の枝の長さが最短になるような系統樹が得られることが期待される。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;実際には、DNAの全ての塩基が同じように蓄積するわけではない。この変化速度の情報を追加情報として利用できるのが、以下の方法になる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;最尤法 ... 系統推定で最も強力で広く普及した方法。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分子進化モデルが必要。例えば、塩基置換率は一定ではなく、トランジション（プリン間AG, ピリミジン間CT）はトランスバージョン（プリンとピリミジンの変換）より起こりやすいといった確率モデル。遺伝子や領域ごとにも異なるモデルを用いる。&lt;/li&gt;
&lt;li&gt;分子進化モデルが決まれば、ある系統樹がデータによってどれくらい強く支持されているのかを計算できる。具体的には、データの塩基配列が生じる確率（尤度）を系統樹ごとに求めて比較する。尤度が最大の系統樹を選べば、データと分子進化モデルに最もあった系統樹を決めることができる。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;ベイズ法 ... ある分子進化モデルの下で、データが実現した前提で最も確率の高い系統樹を探す方法。まずは系統樹を1つ用意して、その樹形に小さな変更を加える。新たな樹形をデータと進化モデルを使って評価してから、再び樹形変化させる。この過程を何度も繰り返して、様々な系統樹の確率分布を得る。最終的には最も確率の高い系統樹が選ばれる。　&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;塩基置換のモデル&lt;/h1&gt;
&lt;h2&gt;進化距離 [3]&lt;/h2&gt;
&lt;p&gt;2つの配列間の距離は、サイトあたりの塩基置換数の期待値として定義される。その2つの配列で起こった置換数をサイト数で割ったもの。
最も単純な距離の尺度は、2つの配列間で差異のあるサイトの割合であり、p距離と呼ばれる。
遠い関係の配列の間では、このあたいは実際に生じた置換の数を過小に評価してしまう。例えば、多重置換、平行置換、収斂置換、復帰置換などがあげられる。
p &amp;lt; 5% くらいならpは利用可能とされている。&lt;/p&gt;
&lt;p&gt;そこでよく用いられるのが、連続時間マルコフ連鎖モデル。&lt;/p&gt;
&lt;p&gt;塩基置換速度行列から、対角化可能であれば、数値計算によって適切な塩基遷移確率行列を求めることができる。&lt;/p&gt;
&lt;h3&gt;ジュークス-カンターモデル [2]&lt;/h3&gt;
&lt;p&gt;塩基置換速度は全ての塩基間で同じであると仮定したモデル。
ジュークス-カンター距離dは
2つの配列で違っているサイトの数をサイト数で割った値Dを観測値として、&lt;/p&gt;
&lt;p&gt;$ d = -3/4 log(1 - 4/3 D) $&lt;/p&gt;
&lt;p&gt;として求められる。
観察データが1/4以下の一致率をとると、対数の中が負値になり、進化距離が計算できなくなる。&lt;/p&gt;
&lt;h3&gt;木村の2パラメーターモデル [2]&lt;/h3&gt;
&lt;p&gt;トランジッションとトランスバージョンで塩基置換速度が異なることを考慮に入れたモデル。
木村の距離dは、
トランジッションで異なっているサイトの割合をS、トランスバージョンで異なっているサイトの割合をVとすると、&lt;/p&gt;
&lt;h3&gt;塩基組成の偏りを考慮に入れたモデル [2]&lt;/h3&gt;
&lt;p&gt;塩基配列のそれぞれの塩基の出現頻度が1/4であるというのは少々非現実的。
平衡状態に置ける塩基の頻度を考える。
長谷川・岸野・矢野モデル(HKY model)
現実的ではないが、数学的な取り扱いを簡単にするために、時間的可逆性を担保している。
さらに、この時間的可逆性を保った上で最も多くの変数を含む塩基置換モデルは、一般時間可逆モデル(general time reversible, GTR)と呼ばれる。
GTRは、配列進化の確率論的アプローチでしばしば用いられる。
これらの複雑なモデルでは、進化距離を式の形で求めるのが困難であるので、数値的に各パラメータを推定し、進化距離を求めることが多い。&lt;/p&gt;
&lt;h3&gt;サイトによる置換速度の違い&lt;/h3&gt;
&lt;p&gt;これまでは、サイトごとの置換速度は一定と仮定されていたが、領域によって塩基配列の置換速度に差があることはよく知られている。例えば、CpG配列のCは、変異率が他に比べてとても高い。様々な手法が提案されてきたが、現在、サイトごとの置換速度のばらつきをガンマ分布を用いて表現するモデルがとく用いられている。&lt;/p&gt;</content><category term="生物学"></category><category term="生物学"></category><category term="解説"></category><category term="授業まとめ"></category></entry><entry><title>EC2からRDSへの接続と、RDSへのデータ投入&amp;日本語文字化け対応の備忘録</title><link href="https://naoto-yamaguchi.github.io/site/bei-wang-lu/ec2_to_rds.html" rel="alternate"></link><published>2019-04-29T00:00:00+09:00</published><updated>2019-04-29T00:00:00+09:00</updated><author><name>Naoto Yamaguchi</name></author><id>tag:naoto-yamaguchi.github.io,2019-04-29:/site/bei-wang-lu/ec2_to_rds.html</id><summary type="html">&lt;p&gt;RDS文字化け対応備忘録&lt;br&gt;&lt;img src="https://paper-attachments.dropbox.com/s_8FAC27AC251845FE76C63F0EAF156DF8B3F4D3C17D70B16D9D9AEE81A162B247_1559630545434_rds.png"&gt;&lt;/p&gt;</summary><content type="html">&lt;h2&gt;動機&lt;/h2&gt;
&lt;p&gt;あるプロジェクトで、EC2インスタンスからRDSに接続できるように設定する必要がありました。また、RDSへのデータの投入も初めてだったので、記録を残しておこうと思いました。&lt;/p&gt;
&lt;h2&gt;EC2からRDSへの接続&lt;/h2&gt;
&lt;p&gt;EC2からRDSへ接続するには以下のことが必要です。
* EC2インスタンスに接続できる
* RDSインスタンスが管理下にある
* EC2インスタンスでmysqlコマンドを実行できる
* RDSインスタンスのマスターユーザー名とマスターパスワードを知っている。もしくは、AWSコンソールにログインできる
* RDSインスタンスのセキュリティグループで、MySQLポート(3306)を開放している（できる）&lt;/p&gt;
&lt;p&gt;ここでは、目的のEC2インスタンスとRDSインスタンスが作成してあることは前提とします。作成については他の記事を参照してください。&lt;/p&gt;
&lt;p&gt;EC2インスタンスからRDSインスタンスへは、&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ENDPOINT&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;P&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3306&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;u&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Username&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;–&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Name&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;というコマンドで接続することができるのですが、そのためには以下の準備が必要です。
* mysqlコマンドが実行できる
* 今回のようにmysqlがEC2インスタンスにインストールされていない場合は、以下のようにしてインストールしました&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ sudo yum install mysql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;インストールできているかの確認は&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ yum list installed &lt;span class="p"&gt;|&lt;/span&gt; grep mysql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;RDSインスタンスのエンドポイントがわかっている&lt;/li&gt;
&lt;li&gt;これはAWSコンソールから確認できます。&lt;/li&gt;
&lt;li&gt;[RDS]-&amp;gt;[データベース]-&amp;gt;インスタンスを選択-&amp;gt;[接続とセキュリティ]で確認できます。&lt;/li&gt;
&lt;li&gt;RDSインスタンスのマスターユーザー名がわかっている&lt;/li&gt;
&lt;li&gt;マスターユーザー名はRDSインスタンス作成時に指定するものです。&lt;/li&gt;
&lt;li&gt;[RDS]-&amp;gt;[データベース]-&amp;gt;インスタンスを選択-&amp;gt;[設定]で確認できます。&lt;/li&gt;
&lt;li&gt;RDSインスタンスのパスワードがわかっている&lt;/li&gt;
&lt;li&gt;パスワードはAWSコンソールから確認はできませんが、変更することはできます。&lt;/li&gt;
&lt;li&gt;[RDS]-&amp;gt;[データベース]-&amp;gt;インスタンスを選択-&amp;gt;[変更]で、設定という項目で、「新しいマスターパスワード」という欄があるので、そこで変更することができます。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以上で、接続への必要な情報は揃うと思います。&lt;/p&gt;
&lt;p&gt;最後に、EC2インスタンスから、接続の要求をした際に、それを受け入れるための準備をRDS側でしておかないといけません（デフォルトでは許可されていません）。
[RDS]-&amp;gt;[データベース]-&amp;gt;インスタンスを選択-&amp;gt;[接続とセキュリティ]-&amp;gt;[セキュリティグループのルール]で設定されている、セキュリティグループのinboundでMySQLポート(3306)を開放しましょう。
以下の記事を参考になると思います。
&lt;a href="https://hacknote.jp/archives/39927/"&gt;RDSへEC2から接続する方法 -HACK NOTE&lt;/a&gt;
&lt;a href="https://docs.aws.amazon.com/ja_jp/AmazonRDS/latest/UserGuide/CHAP_GettingStarted.CreatingConnecting.MySQL.html"&gt;AWS RDS ドキュメント&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;これで、上記のコマンドを実行することで無事接続できるはずです！&lt;/p&gt;
&lt;h2&gt;RDSへのデータ投入&lt;/h2&gt;
&lt;p&gt;ECSインスタンス上にあるデータをRDSのDBに投入する方法です。
以下の記事を参考にしました。
RDSインスタンスにログインした状態で、データベースを指定し(use database_name)、&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;LOAD DATA LOCAL INFILE &amp;#39;sample.csv&amp;#39;&lt;/span&gt;
&lt;span class="err"&gt;REPLACE INTO TABLE database_name&lt;/span&gt;
&lt;span class="err"&gt;CHARACTER SET utf8&lt;/span&gt;
&lt;span class="err"&gt;FIELDS TERMINATED BY &amp;#39;,&amp;#39;&lt;/span&gt;
&lt;span class="err"&gt;OPTIONALLY ENCLOSED BY &amp;#39;&amp;quot;&amp;#39;&lt;/span&gt;
&lt;span class="err"&gt;IGNORE 1 LINES;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;でEC2上にあるCSVファイルをインポートできます。
ファイル名の指定は、RDSインスタンスにログインする際にいたディレクトリからのパスになりますので、注意してください。またファイル名に日本語や、\などの文字が入っている場合も、上手くインポートできないことがあるので注意してください。&lt;/p&gt;
&lt;p&gt;さて、すでに作成していたテーブルに上記のコマンドでデータをインポートできたのですが、テーブルの中身を確認してみると、日本語が文字化けしてしまっていました。。。&lt;/p&gt;
&lt;h2&gt;日本語文字化けに対する対処&lt;/h2&gt;
&lt;p&gt;やるべきことは、
データベース、もしくはテーブルのキャラクターセットをutf8に変更することです。
&lt;a href="https://qiita.com/reoy/items/e355debf1e2b2abd703b"&gt;RDSで日本語が文字化けする問題&lt;/a&gt;という記事を参考に、AWSコンソールから、RDSインスタンスのパラメータグループを設定しました。
これだけ(Step4まで)では、すでに作成されているDBに対してパラメターグループの設定を行っても"character_set_database"は、latin1 のまま変更されないので、
&lt;a href="http://d.hatena.ne.jp/It_lives_vainly/touch/20160906/1473154857"&gt;RDS の mySQL で日本語が文字化けて困った時の対応方法&lt;/a&gt;を参考に、設定すると無事日本語文字化けが直りました。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ ALTER DATABASE database_name default character &lt;span class="nb"&gt;set&lt;/span&gt; utf8
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;コマンドが重要です。&lt;/p&gt;
&lt;p&gt;今後、RDSインスタンス新規作成の際に、パラメータグループをきちんと設定すると良さそうです。&lt;/p&gt;
&lt;p&gt;どうでも良いですが、mysqlのテーブル名は最長で63文字らしいです。&lt;/p&gt;</content><category term="備忘録"></category><category term="AWS"></category></entry><entry><title>チューリングパターンとは</title><link href="https://naoto-yamaguchi.github.io/site/sheng-wu-xue/turing_pattern.html" rel="alternate"></link><published>2019-04-04T00:00:00+09:00</published><updated>2019-04-04T00:00:00+09:00</updated><author><name>Naoto Yamaguchi</name></author><id>tag:naoto-yamaguchi.github.io,2019-04-04:/site/sheng-wu-xue/turing_pattern.html</id><summary type="html">&lt;p&gt;チューリングパターンの解説&lt;br&gt;&lt;img src="https://camo.qiitausercontent.com/58b0457b75d51790ad0c73dc752d27a2434d6a97/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3134313530332f35636465656163632d366132362d343566612d636264332d3539316561316264373238612e6a706567"&gt;&lt;/p&gt;</summary><content type="html">&lt;h2&gt;動機&lt;/h2&gt;
&lt;p&gt;システム生物学の授業が書くことになったきっかけです。
&lt;a href="https://nafoto-z.hatenablog.com/entry/2018/12/07/184450"&gt;hatenablog&lt;/a&gt; に書いたところ数式を上手く表示できず書き途中であったため、こちらで書きました。&lt;a href="https://nafoto-z.hatenablog.com/entry/2018/12/07/184450"&gt;hatenablog&lt;/a&gt; の方に、意外とアクセスがあったので、折角訪問してくださった方にちゃんと見ていただきたいと思いました。&lt;a href="https://nafoto-z.hatenablog.com/entry/2018/12/07/184450"&gt;hatenablog&lt;/a&gt; の方は放置していてひどいです。こちらのサイトも見た目等変なところが多いですがご容赦下さい。そのうち直します。&lt;/p&gt;
&lt;h2&gt;参考&lt;/h2&gt;
&lt;p&gt;実装は、以下のサイトを参考にしました https://ipython-books.github.io/124-simulating-a-partial-differential-equation-reaction-diffusion-systems-and-turing-patterns/&lt;/p&gt;
&lt;h2&gt;チューリングパターンとは？&lt;/h2&gt;
&lt;p&gt;誤解を恐れずに言えば、こういう模様(=波)のことです。
&lt;img alt="" src="https://paper-attachments.dropbox.com/s_FC172B40024B510FC7C44978CC0D4E41A14218694B499746443C68DDD9C8FBD5_1559322871809_pattern.png"&gt;&lt;/p&gt;
&lt;p&gt;こういう模様、パターンのことをチューリングパターンと言います。チューリング波、反応拡散波という言い方もあります。&lt;/p&gt;
&lt;p&gt;そして重要なのは、以下の 2 点&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;このパターンはある条件を満たす化学反応システムが自発的に生み出す周期的なものであるということ&lt;/li&gt;
&lt;li&gt;模様(=波)の仕組みは、反応拡散方程式で数学的に表せる！！ ということ&lt;/li&gt;
&lt;li&gt;この模様は、生物によく見られるものであり、一部の生物では、確かに反応拡散系によってこの模様が作られている！！ ということ&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;遺伝子だけで決まる訳ではない&lt;/p&gt;
&lt;h2&gt;point①&amp;amp;③&lt;/h2&gt;
&lt;p&gt;これは化学反応によって自発的に起こるパターンで、生物にも見られる！！
※ 画像はイメージです。&lt;br&gt;
こちらからお借りしました。&lt;a href="https://qiita.com/kanaya-tamihiro/items/a735c6f4ee8e914c5fc1"&gt;チューリング波（反応拡散波）を理解したい&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;実際の生き物に見られる模様のパターン&lt;/th&gt;
&lt;th&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img alt="" src="https://camo.qiitausercontent.com/1a3cfcbed9f5b9bc17f758fdae845504c6c5928a/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3134313530332f66393132613633342d626366372d613566332d336638362d3534623337306238363565392e6a706567"&gt;&lt;/td&gt;
&lt;td&gt;&lt;img alt="" src="https://camo.qiitausercontent.com/f88df298db147f7519209a0f4655e2c394396ddf/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3134313530332f36326262353162312d306265302d353530632d616236352d3563666139643031316535372e6a706567"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;img alt="" src="https://camo.qiitausercontent.com/58b0457b75d51790ad0c73dc752d27a2434d6a97/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3134313530332f35636465656163632d366132362d343566612d636264332d3539316561316264373238612e6a706567"&gt;&lt;/td&gt;
&lt;td&gt;&lt;img alt="" src="https://camo.qiitausercontent.com/87cd36dbb384891ce7aec5d6cabdb233c017a02c/68747470733a2f2f71696974612d696d6167652d73746f72652e73332e616d617a6f6e6177732e636f6d2f302f3134313530332f39343164613733622d646230382d313230332d346339362d3737373736336661326165362e6a706567"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;ことの始まりは、イギリスの数学者アランチューリングが 1952 年に発表した論文で、「生物の模様は波によって作られる」という仮説。です&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;生物の体の表面では化学反応が起きており、反応を活性化する因子と抑制する因子の広がる速さが異なることで「波」が生じ、模様が作られる&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;https://www.jst.go.jp/pr/jst-news/pdf/2015/2015_04_p08.pdf
という考え方。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1952 年に、イギリスの代表的な数学者でコンピュータ科学の生みの親でもあるアラン・チューリングが、「2 つの仮想的な化学物質が、ある条件を満たして互いの合成をコントロールしあうとき、その物質の濃度分布は均一にならず、濃い部分と薄い部分が、空間に繰り返しパターン（反応拡散波）を作って安定する」ことを、数学的に証明した。1970 年代に数人の数学者がチューリングの方程式を 2 次元でシミュレーションしたところ（チューリングの時代はコンピュータがなかった）、方程式の定数（仮想的な化学物質の性質）を少し変えるだけで、シマウマのストライプ模様もキリンの網目模様も、豹の斑点模様も作り出せることを発見した。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;https://www.brh.co.jp/seimeishi/journal/011/to_1.html
天才か...&lt;/p&gt;
&lt;p&gt;簡単に例えてみると...
2 つの赤い物質(A)と青い物質(B)があって、この 2 つの関係が、&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;赤い物質が増えると、自分(赤い物質)をより増やすようになる（=赤が自分を「促進」）&lt;/li&gt;
&lt;li&gt;赤い物質が増えると、青い物質を増やすようになる(=赤が青を「促進」)&lt;/li&gt;
&lt;li&gt;逆に青い物質が増えると、赤い物質を減らすようになる(=青が赤を「抑制」)
 &lt;img alt="" src="https://paper-attachments.dropbox.com/s_FC172B40024B510FC7C44978CC0D4E41A14218694B499746443C68DDD9C8FBD5_1559323168009_spread.png"&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;ような関係で、
4. 赤い物質より青い物質の方が周りに広がりやすい
&lt;img alt="" src="https://paper-attachments.dropbox.com/s_FC172B40024B510FC7C44978CC0D4E41A14218694B499746443C68DDD9C8FBD5_1559323178474_reaction.png"&gt;&lt;/p&gt;
&lt;p&gt;とき、ランダムに赤青がある状態からスタートして、ある程度時間が経つと、安定した赤青模様のパターンができる！ということである。
&lt;img alt="" src="https://paper-attachments.dropbox.com/s_FC172B40024B510FC7C44978CC0D4E41A14218694B499746443C68DDD9C8FBD5_1559323190004_pattern.png"&gt;&lt;/p&gt;
&lt;p&gt;上記のように初期状態やパラメーターによって色々な模様ができます。&lt;/p&gt;
&lt;p&gt;白黒でも良いですが、画像に合わせて赤青にしました。&lt;/p&gt;
&lt;p&gt;この関係は、食物連鎖の一部に例えてみるとわかりやすいでしょう全然現実世界に沿っていないとは思いますが...&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;ネズミが増えるとネズミたちは、協力して生活するようになり、どんどんその数を増やしていきます(ネズミが自分たちの増加を「促進」)&lt;/li&gt;
&lt;li&gt;ネズミが増えると、ネズミを食べる猫たちは沢山食料を得られるので、猫たちの数も増えていきます(ネズミが猫の増加を「促進」) 3.　猫が増えると、ネズミは今まで以上に食べられてしまうので、数を減らしてしまいます。(猫の増加がネズミの増加を「抑制」)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;このような関係のイメージです。&lt;/p&gt;
&lt;h2&gt;ポイント 2 ~模様の仕組みは数学的に表せる！~&lt;/h2&gt;
&lt;p&gt;この 1~4 の関係を数学的に表すと、一例として、&lt;/p&gt;
&lt;div class="math"&gt;$$ \frac{\partial u}{\partial t} = 0.6p - q - p^3 + 0.0002\Delta u$$&lt;/div&gt;
&lt;div class="math"&gt;$$ \frac{\partial v}{\partial t} = 1.5p - 2q + 0.01\Delta u$$&lt;/div&gt;
&lt;p&gt;と表すことができます。これは反応拡散方程式と言われるものです。式の意味は後ほど説明します。&lt;/p&gt;
&lt;h2&gt;反応拡散方程式とは？？&lt;/h2&gt;
&lt;p&gt;位置付けとしては、今回の式は、2 変数の反応拡散方程式&lt;/p&gt;
&lt;p&gt;反応拡散方程式 : &lt;/p&gt;
&lt;div class="math"&gt;$$ ∂u/∂t = F(u) + D∂^2u/∂x^2 $$&lt;/div&gt;
&lt;p&gt;反応方程式 : &lt;/p&gt;
&lt;div class="math"&gt;$$ ∂u/∂t = F(u)$$&lt;/div&gt;
&lt;p&gt;拡散方程式 : &lt;/p&gt;
&lt;div class="math"&gt;$$ ∂u/∂t = D∂^2u/∂x^2 (D は拡散係数)$$&lt;/div&gt;
&lt;p&gt;1 つめは反応項、2 つめを拡散項と呼ぶことにします。
F(u)は 2 物質の化学反応による物質の濃度の変化を表す式が入ります。例えば、酵素の反応速度を表すミカエリス・メンテンの式などが入ることもあるでしょう。&lt;/p&gt;
&lt;p&gt;拡散項は、2 物質が空間を広がっていくことを考えるときに使います。&lt;/p&gt;
&lt;p&gt;2 つの化学物質 u と v があって、その二つの濃度が以下のような数式（反応拡散方程式）で表わされるとき、u と v の濃い部分と薄い部分がいい感じに模様のパターンを作って安定化するということである。&lt;/p&gt;
&lt;h2&gt;キリンやシマウマは違うっぽい&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;バーゼル市の動物園へ行って、シマウマやキリンの模様を詳しく観察してみた。すると、それらは反応拡散波そのものではないことに気がついた。反応拡散波は、化学反応が作り出す定常波であるから、その波長（模様の間隔）は、一定に保たれなければならない。しかし、シマウマやキリンの模様は皮膚に固定されているらしく、体が大きくなるにつれて模様の間隔が広がっていってしまう。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;近藤先生が、実験で証明したのは、タテジマについてです。シマウマやキリンについてはわかりません。近藤先生の物語はこちら
https://www.terumozaidan.or.jp/labo/technology/15/index.html
生物が模様を作る仕組みを 25 年かけて明らかにした。それを我々は学ぶことができている。感謝&lt;/p&gt;
&lt;p&gt;反応拡散系(=反応系 + 拡散系)
化学反応と分子の拡散を組み合わせた反応システムのこと。&lt;/p&gt;
&lt;p&gt;http://www.fbs.osaka-u.ac.jp/labs/skondo/ozaki/what%20is%20RD%202(outline).htm&lt;/p&gt;
&lt;h3&gt;チューリングマシンとは？（ついでに）&lt;/h3&gt;
&lt;p&gt;todo
情報科学の勉強しましょう。形式言語理論を学ぶとわかります。&lt;/p&gt;
&lt;h3&gt;というかアラン・チューリングって誰だよ？&lt;/h3&gt;
&lt;p&gt;めっちゃすごい人。計算機科学の父。映画、「イミテーションゲーム」はおすすめです。&lt;/p&gt;
&lt;h3&gt;セルオートマトン、ライフゲームって何？&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;チューリングは原論文（The Chemical Basis of Morphogenesis）の中で、反応拡散波が皮膚の模様形式だけでなく、「形態形成全般にはたらく基本的なメカニズム」であろうと述べている。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;つまり骨格なども形成しているのではという考え方もあるようです。&lt;/p&gt;
&lt;h2&gt;反応拡散方程式の導出(2 変数、1 次元)&lt;/h2&gt;
&lt;p&gt;三浦岳、発生の数理を参考&lt;/p&gt;
&lt;h3&gt;考える系について&lt;/h3&gt;
&lt;p&gt;まずは一次元の棒状の組織を考えてから二次元に拡張する。横の長さ 1, 縦の長さ&lt;/p&gt;
&lt;div class="math"&gt;$$ dy $$&lt;/div&gt;
&lt;p&gt;として、&lt;/p&gt;
&lt;div class="math"&gt;$$ dy &amp;lt;&amp;lt; 1 $$&lt;/div&gt;
&lt;p&gt;で縦方向の分布は無視する。この棒状の組織の中の細胞が 2 種類の分子、活性因子(activator)と抑制因子(inhibitor)を産生し、これらの分子が細胞の分子の産生、分解をコントロールしつつ、近傍の細胞に拡散している、という状態を考える。&lt;/p&gt;
&lt;h3&gt;離散化&lt;/h3&gt;
&lt;p&gt;このままでは空間的な分布の状態を考えるのは難しいので、この細長い棒を横方向に&lt;/p&gt;
&lt;div class="math"&gt;$$ dx $$&lt;/div&gt;
&lt;p&gt;ずつ区切って、&lt;/p&gt;
&lt;div class="math"&gt;$$ 1/ dx $$&lt;/div&gt;
&lt;p&gt;個の小さな組織片に分けて考える。(&lt;/p&gt;
&lt;div class="math"&gt;$$ dx &amp;lt;&amp;lt; 1 $$&lt;/div&gt;
&lt;p&gt;)
各組織片内での活性因子、抑制因子の分布はほぼ一様であるとして、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;組織片の中での活性因子、抑制因子の相互作用&lt;/li&gt;
&lt;li&gt;ある組織片と、両隣りの組織片との間での活性因子、抑制因子のやりとり&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;の 2 つの要素を考え、時間変化をみる。時間は連続的なものだが、便宜上、微小区間&lt;/p&gt;
&lt;div class="math"&gt;$$ dt $$&lt;/div&gt;
&lt;p&gt;に区切って考える。時刻&lt;/p&gt;
&lt;div class="math"&gt;$$ m \* dt $$&lt;/div&gt;
&lt;p&gt;(&lt;/p&gt;
&lt;div class="math"&gt;$$m$$&lt;/div&gt;
&lt;p&gt;は整数)に置ける、それぞれの組織片の中の活性因子、抑制因子の濃度について、左から数えて n 個目の組織片の中の活性化因子の濃度を&lt;/p&gt;
&lt;div class="math"&gt;$$ p(n,m) $$&lt;/div&gt;
&lt;p&gt;、抑制因子の濃度を&lt;/p&gt;
&lt;div class="math"&gt;$$ q(n, m) $$&lt;/div&gt;
&lt;p&gt;とする。&lt;/p&gt;
&lt;h3&gt;反応項&lt;/h3&gt;
&lt;p&gt;反応項は 2 種類の分子の相互作用によって決まり、様々なパターンがある。今回は一例として、チューリングパターン形成に置ける反応項を考える。今回考えている、チューリングパターンを生成する反応拡散系における反応系では、上で述べたように、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;活性化因子は、自身の産生を促進&lt;/li&gt;
&lt;li&gt;活性化因子は、抑制因子の産生を促進&lt;/li&gt;
&lt;li&gt;抑制因子は、活性因子の産生を抑制&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;という相互作用をしていると考える。
&lt;img src="/img/reaction.png" width="300" height="200"&gt;&lt;/p&gt;
&lt;p&gt;これを数式で表すと、
&lt;/p&gt;
&lt;div class="math"&gt;$$ f(p, q) $$&lt;/div&gt;
&lt;p&gt;, &lt;/p&gt;
&lt;div class="math"&gt;$$ g(p, q) $$&lt;/div&gt;
&lt;p&gt; を活性因子、抑制因子の濃度の変化率として、&lt;/p&gt;
&lt;div class="math"&gt;$$ f(p, q) = ap - bq (a, b は正の定数)$$&lt;/div&gt;
&lt;div class="math"&gt;$$　 g(p, q) = cp -dq (c, d は正の定数)$$&lt;/div&gt;
&lt;p&gt;変化量を考えると
&lt;/p&gt;
&lt;div class="math"&gt;$$ f(p(n, m), q(n, m)) \times dt $$&lt;/div&gt;
&lt;div class="math"&gt;$$ g(p(n, m), q(n, m)) \times dt $$&lt;/div&gt;
&lt;p&gt;となる。&lt;/p&gt;
&lt;p&gt;今回の例では、2 種類の物質で考えたが、他にも 1 種類、3 種類での反応系を考えることができて、それらの相互作用(促進か、抑制か)に応じて、様々なダイナミクスが生じる。具体例としては、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;遺伝子発現、解糖系振動、概日時計、細胞周期などにみられるダイナミクスなどがあげられる。ここを参考にした
  http://www.fbs.osaka-u.ac.jp/labs/skondo/ozaki/what%20is%20RD%202(outline).htm&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;活性因子は、ある程度以上の濃度になると産生が抑えられる(-p3)
  ∂u/∂t の反応項 =
  ∂v/∂t の反応項&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;拡散項&lt;/h3&gt;
&lt;p&gt;次に、隣の組織片との間の相互作用を考え、拡散における濃度変化を考える。
&lt;/p&gt;
&lt;div class="math"&gt;$$n$$&lt;/div&gt;
&lt;p&gt;番目の組織片の活性化因子の濃度を&lt;/p&gt;
&lt;div class="math"&gt;$$p(n, m)$$&lt;/div&gt;
&lt;p&gt;とすると、右隣の組織片の活性因子の濃度は、&lt;/p&gt;
&lt;div class="math"&gt;$$p(n+1, m)$$&lt;/div&gt;
&lt;p&gt;となる。単純な拡散の場合、物質の移動量は濃度勾配と境界の長さに比例する(Fick の法則)ので、微小時間 dt の間に右隣の組織へと移動していく活性化因子の量は、&lt;/p&gt;
&lt;div class="math"&gt;$$ d_p(p(n+1, m) - p(n, m)) / dx \times dy \times dt $$&lt;/div&gt;
&lt;p&gt;で表される。&lt;/p&gt;
&lt;div class="math"&gt;$$d_p$$&lt;/div&gt;
&lt;p&gt;は活性化因子の拡散係数である。これによる&lt;/p&gt;
&lt;div class="math"&gt;$$n$$&lt;/div&gt;
&lt;p&gt;番目の組織片の濃度変化は、この量を組織片の面積で割って、&lt;/p&gt;
&lt;div class="math"&gt;$$ d_p(p(n+1, m) - p(n, m)) / dx^2 \times dt $$&lt;/div&gt;
&lt;p&gt;となる。同様に左隣の物質とのやりとりを考えると、左右合わせて、&lt;/p&gt;
&lt;div class="math"&gt;$$n$$&lt;/div&gt;
&lt;p&gt;番目の組織片の濃度変化は、&lt;/p&gt;
&lt;div class="math"&gt;$$ d_p(p(n+1, m) + p(n, m) - 2 \times p(n, m)) / dx^2 \times dt $$&lt;/div&gt;
&lt;p&gt;となる。&lt;/p&gt;
&lt;p&gt;同様に抑制因子の濃度変化は、&lt;/p&gt;
&lt;div class="math"&gt;$$ d_q(q(n+1, m) + q(n, m) - 2 \times q(n, m)) / dx^2 \times dt (d_q は抑制因子の拡散係数)$$&lt;/div&gt;
&lt;p&gt;これが拡散項となる&lt;/p&gt;
&lt;h3&gt;反応拡散方程式&lt;/h3&gt;
&lt;p&gt;領域が十分広いという境界条件のもとで、&lt;/p&gt;
&lt;div class="math"&gt;$$dt, dx$$&lt;/div&gt;
&lt;p&gt;を無限に 0 に近づけると、離散ではない連続の方程式を得ることができる。連続関数として、時刻&lt;/p&gt;
&lt;div class="math"&gt;$$t$$&lt;/div&gt;
&lt;p&gt;における位置&lt;/p&gt;
&lt;div class="math"&gt;$$x$$&lt;/div&gt;
&lt;p&gt;の活性因子、抑制因子の濃度をそれぞれ&lt;/p&gt;
&lt;div class="math"&gt;$$u(x, t), v(x, t)$$&lt;/div&gt;
&lt;p&gt;とし、&lt;/p&gt;
&lt;div class="math"&gt;$$dt, dx$$&lt;/div&gt;
&lt;p&gt;を無限に 0 に近づけると、&lt;/p&gt;
&lt;div class="math"&gt;$$ ∂u(x, t) / ∂t = f(u(x, t), v(x, t)) + d_p∂^2u(x, t) / ∂x^2$$&lt;/div&gt;
&lt;div class="math"&gt;$$ ∂v(x, t) / ∂t = g(u(x, t), v(x, t)) + d_q∂^2u(x, t) / ∂x^2$$&lt;/div&gt;
&lt;p&gt;とそれぞれの濃度変化を表すことができる。それぞれ第一項が反応項であり、第二項が拡散項である。これは一般の反応拡散方程式の表記&lt;/p&gt;
&lt;h2&gt;2 次元チューリングパターンの実装&lt;/h2&gt;
&lt;p&gt;ここでは、反応項として、&lt;/p&gt;
&lt;div class="math"&gt;$$f(p, q) = 0.6p - q - p^3 $$&lt;/div&gt;
&lt;div class="math"&gt;$$ g(p, q) = 1.5p - 2q $$&lt;/div&gt;
&lt;p&gt;を考える。(ちなみにこれは神経細胞の発火モデルである、FitzHugh-南雲モデルと類似している)&lt;br&gt;
これは、&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;活性因子が、自らの産生を促進する&lt;div class="math"&gt;$$(0.6p)$$&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;活性因子は、抑制因子の産生を促進する&lt;div class="math"&gt;$$(1.5p)$$&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;活性因子は、ある程度以上の濃度になると産生が抑えられる&lt;div class="math"&gt;$$(-p^3)$$&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;抑制因子は、活性因子の産生を抑制する&lt;div class="math"&gt;$$(-q)$$&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;抑制因子は、何もないと減衰していく&lt;div class="math"&gt;$$(-2q)$$&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;という 5 つの条件を備えている。&lt;/p&gt;
&lt;p&gt;拡散項については、
&lt;/p&gt;
&lt;div class="math"&gt;$$ d_p = 0.0002 , d_q = 0.01$$&lt;/div&gt;
&lt;p&gt; とおく。&lt;br&gt;
&lt;/p&gt;
&lt;div class="math"&gt;$$ d_q $$&lt;/div&gt;
&lt;p&gt;の方が&lt;/p&gt;
&lt;div class="math"&gt;$$ d_p $$&lt;/div&gt;
&lt;p&gt;よりも大きい値でないと、安定なパターンが形成されないことがわかっている。意味合いとしては、物質&lt;/p&gt;
&lt;div class="math"&gt;$$v$$&lt;/div&gt;
&lt;p&gt;の方がより拡散しやすいということである。&lt;/p&gt;
&lt;p&gt;濃度変化は以下のように表せる。&lt;/p&gt;
&lt;div class="math"&gt;$$ \frac{\partial u}{\partial t} = 0.6p - q - p^3 + 0.0002\Delta u$$&lt;/div&gt;
&lt;div class="math"&gt;$$ \frac{\partial v}{\partial t} = 1.5p - 2q + 0.01\Delta u$$&lt;/div&gt;
&lt;p&gt;これを元にして、2 次元でのパターン形成の様子を描画してみる。&lt;/p&gt;
&lt;div class="math"&gt;$$ \frac{\partial u}{\partial t} = f(u, v) + d_p\frac{\partial^2 u(x, t)}{\partial^2 x}$$&lt;/div&gt;
&lt;div class="math"&gt;$$ \frac{\partial u}{\partial t} = f(u, v) + d_p\Delta u$$&lt;/div&gt;
&lt;div class="math"&gt;$$ \frac{\partial v}{\partial t} = g(u, v) + d_q\frac{\partial^2 v(x, t)}{\partial^2 x}$$&lt;/div&gt;
&lt;div class="math"&gt;$$ ∂v(x, t) / ∂t = g(u(x, t), v(x, t)) + d_q∂^2u(x, t) / ∂x^2$$&lt;/div&gt;
&lt;h3&gt;実装&lt;/h3&gt;
&lt;h4&gt;1. パッケージのインストール&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;numpy&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;np&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="nn"&gt;plt&lt;/span&gt;
&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;matplotlib&lt;/span&gt; &lt;span class="n"&gt;inline&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;2. チューリングパターンのシミュレーションに、以下の偏微分方程式を用いる。範囲は-1~1&lt;/h4&gt;
&lt;div class="math"&gt;$$ ∂u / ∂t = aΔu + u - u^3 - v + k $$&lt;/div&gt;
&lt;div class="math"&gt;$$ τ ∂v/∂t = bΔv + u -v $$&lt;/div&gt;
&lt;p&gt;u は色素？濃度を表す。v もその濃度。v は u は抑制する。u は v を促進する。初期条件では、u,v は互いに独立したランダムな値とする。
Neumann 境界条件&lt;/p&gt;
&lt;h4&gt;3. 以下のパラメータを定める&lt;/h4&gt;
&lt;p&gt;a = 2.0e-4
b = 1e-2
tau = 1
k = 0&lt;/p&gt;
&lt;h4&gt;4. 時間と空間を離散化して範囲に分ける。&lt;/h4&gt;
&lt;p&gt;size = 100
dx = 2. / size
T = 54.0
dt = .001
n = int(T / dt&lt;/p&gt;
&lt;h4&gt;5. u と v を初期化。&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;U&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;laplacian&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Z&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;Ztop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Z&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;Zleft&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Z&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;Zbottom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Z&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="n"&gt;Zright&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Z&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;
    &lt;span class="n"&gt;Zcenter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Z&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Ztop&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;Zleft&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;Zbottom&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;Zright&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;Zcenter&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;dx&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;7.行列を表示する関数を定義&lt;/h4&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;show_patterns&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;imshow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;cmap&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cm&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;copper&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;interpolation&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;bilinear&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;extent&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_axis_off&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

    &lt;span class="n"&gt;U&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;V&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;laplacian&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Z&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;Ztop&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Z&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;Zleft&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Z&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;Zbottom&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Z&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;Zright&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Z&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;
        &lt;span class="n"&gt;Zcenter&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Z&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Ztop&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;Zleft&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;Zbottom&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;Zright&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;Zcenter&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;dx&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;

    &lt;span class="n"&gt;fig&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;axes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplots&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="n"&gt;step_plot&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;
    &lt;span class="c1"&gt;# 偏微分方程式を有限微小変化methodでシミュレーション&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="c1"&gt;# uとvのラプラシアンを計算&lt;/span&gt;
        &lt;span class="n"&gt;deltaU&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;laplacian&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;deltaV&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;laplacian&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="c1"&gt;# uとvの値をグリッドの中でとる&lt;/span&gt;
        &lt;span class="n"&gt;Uc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;Vc&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="c1"&gt;# 値を更新する&lt;/span&gt;
        &lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; \
            &lt;span class="n"&gt;Uc&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;dt&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;deltaU&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mf"&gt;0.6&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;Uc&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Uc&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;Vc&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; \
            &lt;span class="n"&gt;Vc&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;dt&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;deltaV&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mf"&gt;1.5&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;Uc&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mf"&gt;2.0&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;Vc&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;tau&lt;/span&gt;
        &lt;span class="c1"&gt;# Neumann条件: 端の微分は0?&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;Z&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;V&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;Z&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;:]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Z&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;:]&lt;/span&gt;
            &lt;span class="n"&gt;Z&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;:]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Z&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;:]&lt;/span&gt;
            &lt;span class="n"&gt;Z&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Z&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="n"&gt;Z&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Z&lt;/span&gt;&lt;span class="p"&gt;[:,&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

        &lt;span class="c1"&gt;# 9つの異なる時間に状況を分けてプロット&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="n"&gt;step_plot&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;step_plot&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;ax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;axes&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flat&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;step_plot&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="n"&gt;show_patterns&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set_title&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;$t=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;dt&lt;/span&gt;&lt;span class="si"&gt;:&lt;/span&gt;&lt;span class="s1"&gt;.2f&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;$&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;fig&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ax&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;plt&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;subplots&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;figsize&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;show_patterns&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;U&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ax&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;img alt="" src="https://paper-attachments.dropbox.com/s_8FAC27AC251845FE76C63F0EAF156DF8B3F4D3C17D70B16D9D9AEE81A162B247_1559630570606_turing_pattern.png"&gt;&lt;/p&gt;
&lt;h3&gt;感想&lt;/h3&gt;
&lt;p&gt;今回のお話は、システム生物学という分野で扱われがちなお話です。私が興味を持っているバイオインフォマティクスにシステム生物学が含まれるかどうかはわかりません。僕が所属する学科は、バイオインフォマティクスとシステム生物学という 2 つの学問分野を柱にしています。システム生物学もなかなか面白いなと思いました。今後こちらのブログも充実させていくので、是非チェックして見て下さい！
todo あとで追記&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="生物学"></category><category term="生物学"></category><category term="Bioinfo"></category></entry><entry><title>SSHのポートフォワード（トンネリング）とは？</title><link href="https://naoto-yamaguchi.github.io/site/ssh/ssh_port_forward.html" rel="alternate"></link><published>2019-03-31T00:00:00+09:00</published><updated>2019-03-31T00:00:00+09:00</updated><author><name>Naoto Yamaguchi</name></author><id>tag:naoto-yamaguchi.github.io,2019-03-31:/site/ssh/ssh_port_forward.html</id><summary type="html">&lt;p&gt;SSHポートフォーワードとは（未完）&lt;br&gt;&lt;img src="https://paper-attachments.dropbox.com/s_8FAC27AC251845FE76C63F0EAF156DF8B3F4D3C17D70B16D9D9AEE81A162B247_1559630562939_port_forwarding.png"&gt;&lt;/p&gt;</summary><content type="html">&lt;h3&gt;動機&lt;/h3&gt;
&lt;p&gt;&amp;lt;注意&amp;gt; 要修正の記事です&lt;/p&gt;
&lt;p&gt;SSH ポートフォワードを使っていた時に、SCP でファイルを送信したかったため。&lt;/p&gt;
&lt;h3&gt;参考&lt;/h3&gt;
&lt;p&gt;サムネイル画像は&lt;a href="https://cookbook.fortinet.com/port-forwarding-60/"&gt;こちら&lt;/a&gt;より引用&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.clear-code.com/blog/2014/9/12.html"&gt;SSH ポートフォワード（トンネリング）を使って、遠隔地から LAN 内のコンピュータにログインする&lt;/a&gt;
&lt;a href="https://www.turbolinux.co.jp/products/server/11s/user_guide/x9016.html"&gt;Turbolinux 11 Server: ユーザーガイド 第 21 章 SSH（Secure SHell）サーバー&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;SSH ポートフォワードとは？&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;ある特定のコンピュータの特定のポート番号に対して送られる通信内容を、別のコンピュータの特定のポート番号への接続として転送すること。インターネットと LAN の間でルーターは日常的にこれをこなしているが、SSH のポートフォワード機能を使うと、様々な設定でポートフォワードをすることができる。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;今回は、ある LAN の中にある PC から別の LAN の中にある PC に SSH 接続しており、そのコンピュータ間でファイル転送をおこないたいというモチベーションがありました。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;インターネット上の中継サーバを使う方法&lt;/li&gt;
&lt;li&gt;LAN 内の中継サーバを使う方法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;の 2 通りがあります。&lt;/p&gt;
&lt;h3&gt;実際にやってみた&lt;/h3&gt;
&lt;p&gt;すみません、まとめたら載せます。&lt;/p&gt;
&lt;!-- zsh: no matches found
[ss](http://d.hatena.ne.jp/eitya/20110707/1310023383)
[]https://shirusu-ni-tarazu.hatenablog.jp/entry/2013/01/18/034233
全然関係ないところでエラー

[](https://qiita.com/kyrya/items/121fc54ae4c9c10c0e8b)
を参考に
`scp -o 'ProxyCommand ssh aca10555ym@as.abci.ai nc %h %p' lstm_human_antigen.ipynb aca10555ym@es:/groups2/gca50068/yamaguchi`
やってみたけど、
sh_exchange_identification ってエラー
[](https://qiita.com/uutarou10/items/f8391965adc6b4c312d1)
そもそも IP アドレスが違う説確認する

tmux ってなに

abci-gate した状態で
[~] scp -r -P 10022 [送りたいディレクトリ][usrname]@localhost:[送り先のディレクトリ]
でできた --&gt;</content><category term="SSH"></category><category term="SSH"></category><category term="portforward"></category></entry><entry><title>感想~勉強の哲学：千葉雅也~</title><link href="https://naoto-yamaguchi.github.io/site/du-shu/the_philosophy_of_study.html" rel="alternate"></link><published>2019-03-21T00:00:00+09:00</published><updated>2019-03-21T00:00:00+09:00</updated><author><name>Naoto Yamaguchi</name></author><id>tag:naoto-yamaguchi.github.io,2019-03-21:/site/du-shu/the_philosophy_of_study.html</id><summary type="html">&lt;p&gt;勉強の哲学を読んで考えたこと&lt;/p&gt;</summary><content type="html">&lt;h1&gt;動機&lt;/h1&gt;
&lt;p&gt;割と前に読んだ本なのだけど、振り返る価値のある本だと思ってたので書いてみます。
とりあえず昔のメモを載せておきます。&lt;/p&gt;
&lt;h1&gt;以下メモ&lt;/h1&gt;
&lt;p&gt;東大京大生に最も読まれている本らしい。確かそんな帯をどこかで見て、割と引っかかっていた。その時はなんとなくバカにしていた覚えがある。ただいつかふと思い出し、いつのまにか予約していた。馬田さんの影響もある疑惑。&lt;/p&gt;
&lt;p&gt;一言感想: 
今までの自分の勉強の仕方、というか勉強に対する姿勢が間違っていなかったことを知れた一冊。逆に自分が割と感じていたことを見事に言語化していて凄いと思った。また難しい言葉を使っているが、その言葉を使う前に意味を説明し、何度も同じ文脈で繰り返し用いられるので、理解しやすくスッと頭に入ってきた。意外や意外読みやすい。全体として夢中で読めて良い本だった。&lt;/p&gt;
&lt;p&gt;哲学の専門家が書いただけあってしっかりしていた。中でも読書の仕方について述べている部分は興味深く実践できるのが良いと思った。&lt;/p&gt;
&lt;p&gt;本書で述べる勉強への基本姿勢は、「比較の中断」である。
「こうした決断主義は、無批判に何かを信じ込んだ状態であるため、避けるべきである。そこで、絶対性を求めず、相対　的に複数の選択肢を比較し続けるというユーモア的な方法へと向かうーーー比較を続ける途中で中断し、ベターな結論を仮固定し、また比較を再開するのである。これが勉強のプロセスにおいて基本姿勢である。」&lt;/p&gt;
&lt;p&gt;結論として内容が後ろにまとめられていた部分があり、それを写真に撮り載せようと思っていたが、図書館で爆睡してしまい、撮り忘れた。
もう一度くらい借りて読んでみるかー
→再度購入したのでまた読みます。&lt;/p&gt;
&lt;p&gt;入門書、専門書、準専門書
読書は完璧にできない&lt;/p&gt;</content><category term="読書"></category><category term="Book"></category></entry><entry><title>私のおすすめのもの、好きなもの</title><link href="https://naoto-yamaguchi.github.io/site/shi-hao/my_favorites.html" rel="alternate"></link><published>2019-02-24T00:00:00+09:00</published><updated>2019-02-24T00:00:00+09:00</updated><author><name>Naoto Yamaguchi</name></author><id>tag:naoto-yamaguchi.github.io,2019-02-24:/site/shi-hao/my_favorites.html</id><summary type="html">&lt;p&gt;おすすめ集、好きなもの&lt;/p&gt;</summary><content type="html">&lt;h1&gt;動機、対象&lt;/h1&gt;
&lt;p&gt;人のおすすめを聞いて自分の興味の幅が広がったり、新たな発見をすることがあったので。
現状かなり適当ですが、随時載せていきます。&lt;/p&gt;
&lt;h1&gt;参考&lt;/h1&gt;
&lt;h1&gt;目次&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;好きな本（小説は除く、一般書）&lt;ul&gt;
&lt;li&gt;サピエンス全史（超おすすめ）&lt;/li&gt;
&lt;li&gt;ホモデウス（絶対読むべき）&lt;/li&gt;
&lt;li&gt;史上最強の哲学入門（わかりやすく哲学を紹介）&lt;/li&gt;
&lt;li&gt;勉強の哲学&lt;/li&gt;
&lt;li&gt;愛するということ&lt;/li&gt;
&lt;li&gt;Zero to One&lt;/li&gt;
&lt;li&gt;武器としての決断思考&lt;/li&gt;
&lt;li&gt;お金2.0&lt;/li&gt;
&lt;li&gt;残酷すぎる成功法則&lt;/li&gt;
&lt;li&gt;アメリカ黒人の歴史&lt;/li&gt;
&lt;li&gt;面白くて眠れなくなるシリーズ&lt;/li&gt;
&lt;li&gt;エピゲノムと生命&lt;/li&gt;
&lt;li&gt;嫌われる技術&lt;/li&gt;
&lt;li&gt;アイデア大全（読書猿さんおすすめ）&lt;/li&gt;
&lt;li&gt;マギーキッチンサイエンス（読み途中,全然読めてない）&lt;/li&gt;
&lt;li&gt;Cooking for geeks (読み途中, 全然読めてない)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;好きな映画（追記します）&lt;ul&gt;
&lt;li&gt;ショーシャンクの空に&lt;/li&gt;
&lt;li&gt;イミテーションゲーム&lt;/li&gt;
&lt;li&gt;Begin Again&lt;/li&gt;
&lt;li&gt;Onec ダブリンの街角で&lt;/li&gt;
&lt;li&gt;きっとうまくいく&lt;/li&gt;
&lt;li&gt;容疑者Xの献身&lt;/li&gt;
&lt;li&gt;ゴールデンスランバー&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;好きな漫画&lt;ul&gt;
&lt;li&gt;Death Note&lt;/li&gt;
&lt;li&gt;進撃の巨人&lt;/li&gt;
&lt;li&gt;GIANT KILLING&lt;/li&gt;
&lt;li&gt;etc...&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;好きなドラマ&lt;ul&gt;
&lt;li&gt;the big bang theory&lt;/li&gt;
&lt;li&gt;glee&lt;/li&gt;
&lt;li&gt;逃げるは恥だが役に立つ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;おすすめのYouTubeチャンネル&lt;ul&gt;
&lt;li&gt;Cultured Meat Future Food Show (細胞農業)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.youtube.com/user/Kurzgesagt"&gt;Kurzgesagt - In a Nutshell&lt;/a&gt; (様々な学術分野をわかりやすく)&lt;/li&gt;
&lt;li&gt;MinuteEarth (様々な話題をわかりやすく)&lt;/li&gt;
&lt;li&gt;Linguamarina (英語チャンネル)&lt;/li&gt;
&lt;li&gt;Sarada Herke (離散数学、グラフ理論)&lt;/li&gt;
&lt;li&gt;中田敦彦のYouTube大学&lt;/li&gt;
&lt;li&gt;びじゅチューン&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;おすすめのSSG(静的サイトジェネレーター)&lt;ul&gt;
&lt;li&gt;Hugo&lt;/li&gt;
&lt;li&gt;Pelican（このサイトもこれで作成）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;好きな小説家&lt;ul&gt;
&lt;li&gt;東野圭吾&lt;/li&gt;
&lt;li&gt;伊坂幸太郎&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;おすすめの国、街&lt;/li&gt;
&lt;li&gt;おすすめのアプリ&lt;ul&gt;
&lt;li&gt;Nuzzle&lt;/li&gt;
&lt;li&gt;Instapaper&lt;/li&gt;
&lt;li&gt;CouchSurfing&lt;/li&gt;
&lt;li&gt;Dropbox Paper&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;おすすめのサイト&lt;ul&gt;
&lt;li&gt;Golden&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;みなさんのオススメのもの、好きなもの是非教えてください！！
超募集中@nafoto_z&lt;/p&gt;
&lt;p&gt;リンクとかはそのうち貼ります。&lt;/p&gt;</content><category term="嗜好"></category><category term="好きなもの"></category><category term="嗜好"></category></entry><entry><title>NCBIからゲノムデータを取得する方法</title><link href="https://naoto-yamaguchi.github.io/site/bioinfo/how_to_get_genome_data_from_ncbi.html" rel="alternate"></link><published>2019-02-22T00:00:00+09:00</published><updated>2019-02-22T00:00:00+09:00</updated><author><name>Naoto Yamaguchi</name></author><id>tag:naoto-yamaguchi.github.io,2019-02-22:/site/bioinfo/how_to_get_genome_data_from_ncbi.html</id><summary type="html">&lt;p&gt;ゲノムデータ取得&lt;br&gt;&lt;img src="https://paper-attachments.dropbox.com/s_8FAC27AC251845FE76C63F0EAF156DF8B3F4D3C17D70B16D9D9AEE81A162B247_1559630593492_ncbi.png" width=150 height=150&gt;&lt;/p&gt;</summary><content type="html">&lt;h3&gt;動機&lt;/h3&gt;
&lt;p&gt;&amp;lt;注意&amp;gt; 要修正の記事です&lt;/p&gt;
&lt;p&gt;NCBI からゲノムデータを取ってきたい時どうすれば良いかわからなかった。ftp を知らなかったけど、ダウンロードできました！&lt;/p&gt;
&lt;h3&gt;参考&lt;/h3&gt;
&lt;p&gt;サムネイル画像は&lt;a href="https://en.wikipedia.org/wiki/National_Center_for_Biotechnology_Information"&gt;こちら&lt;/a&gt;より引用&lt;/p&gt;
&lt;h3&gt;Step1: 取得したいデータの ftp パスを手に入れる&lt;/h3&gt;
&lt;p&gt;NCBI にどういうデータがどういう風に  あるかよくわかっていませんが、とりあえず自分がやった範囲では、ftp パスを用いて、圧縮された fna ファイルを  ダウンロードし、解凍しました。(解凍せずに中身を見ようとして、文字コードエラーが出たので注意！)
解凍せずに扱おうとしたところ、&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;UnicodeDecodeError: &amp;#39;utf-8&amp;#39; codec can&amp;#39;t decode byte 0x8b in position 1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;というエラーになりました。&lt;/p&gt;
&lt;p&gt;zip ファイルの解凍は、&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ gunzip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;でできました。&lt;/p&gt;
&lt;p&gt;流れとしては、例えば、~/data/に GCF_000010525.1.fna.gz というファイル名でダウンロードする場合、&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ wget -O ~/data/GCF_000010525.1.fna.gz ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/010/525/GCF_000010525.1_ASM1052v1/GCF_000010525.1_ASM1052v1_cds_from_genomic.fna.gz
$ gunzip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;これで GCF_000010525.1.fna ファイルを見たり読み込ませたりして解析に用いることができます！&lt;/p&gt;
&lt;p&gt;自分はこれしかやったことがないので、他にも試してみて、追記したいと思います。&lt;/p&gt;</content><category term="Bioinfo"></category><category term="Bioinfo"></category><category term="生物情報"></category><category term="NCBI"></category></entry><entry><title>Jupyter Notebookをリモートサーバーで利用し、ローカルのブラウザで確認する"</title><link href="https://naoto-yamaguchi.github.io/site/python/remote_jupyternotebook.html" rel="alternate"></link><published>2019-02-20T00:00:00+09:00</published><updated>2019-02-20T00:00:00+09:00</updated><author><name>Naoto Yamaguchi</name></author><id>tag:naoto-yamaguchi.github.io,2019-02-20:/site/python/remote_jupyternotebook.html</id><summary type="html">&lt;p&gt;Jupyter Notebook利用の備忘録&lt;br&gt;&lt;img src="https://paper-attachments.dropbox.com/s_8FAC27AC251845FE76C63F0EAF156DF8B3F4D3C17D70B16D9D9AEE81A162B247_1559630601567_jupyter.png"&gt;&lt;/p&gt;</summary><content type="html">&lt;h3&gt;動機&lt;/h3&gt;
&lt;p&gt;データ分析で大量のデータを扱う際、ローカルの  コンピューターではなく  リモートサーバーにダウンロードなどを行うことがありました。そのデータを分析するために、Jupyter Notebook を利用したかったのですが、 ローカルで使えるだけではデータを参照できないので、データがおかれているリモートサーバーで  使えるようにする必要がありました。やりたいことは以下のような感じです。
http://starpentagon.net/analytics/remote_jupyter_notebook/&lt;/p&gt;
&lt;h3&gt;参考&lt;/h3&gt;
&lt;p&gt;サムネイル画像は&lt;a href="https://en.wikipedia.org/wiki/Project_Jupyter"&gt;こちら&lt;/a&gt;より引用&lt;/p&gt;
&lt;h3&gt;Step1: リモートサーバーに Jupyter Notebook をインストール&lt;/h3&gt;
&lt;p&gt;リモートサーバーにおける権限などに注意する必要があります。おそらく&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ pip install jupyter --user
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;で十分ですが、自分は anaconda をインストールしました。このページの Linux でのインストール方法を参考にしました。
https://qiita.com/t2y/items/2a3eb58103e85d8064b6
https://stackoverflow.com/questions/38080407/how-can-i-install-the-latest-anaconda-with-wget&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ wget http://repo.continuum.io/archive/Anaconda3-4.2.0-Linux-x86_64.sh
$ bash Anaconda3-4.2.0-Linux-x86_64.sh
&lt;span class="c1"&gt;#PATHの設定&lt;/span&gt;
~/.bash_profileに
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/home/yamaguchi/anaconda3/bin:PATH
&lt;span class="c1"&gt;#を追記&lt;/span&gt;
$ &lt;span class="nb"&gt;source&lt;/span&gt; ~/.bash_profile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Step2: サーバー側の設定&lt;/h3&gt;
&lt;p&gt;基本的にこちらを参考にしました。
http://starpentagon.net/analytics/remote_jupyter_notebook/&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;ipython3&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;notebook.auth&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;passwd&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;passwd&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="c1"&gt;# ここでパスワードを入力し、出力されたsha1値をコピー&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;quit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;~/.jupyter/jupyter_notebook_config.py を変更。なければ、&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ jupyter notebook --generate-config
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;~/.jupyter/jupyter_notebook_config.py を開き&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;c.NotebookApp.ip = &amp;#39;*&amp;#39;&lt;/span&gt;
&lt;span class="err"&gt;c.NotebookApp.open_browser = False&lt;/span&gt;
&lt;span class="err"&gt;c.NotebookApp.port = 8888&lt;/span&gt;
&lt;span class="err"&gt;c.NotebookApp.password = u&amp;#39;sha1:XXXXXXX&amp;#39; # 先ほど記録したsha1値を記載&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;以下のように設定。&lt;/p&gt;
&lt;p&gt;これにて設定終了。 自分の場合、一旦 ssh 接続を切って、&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;ssh -L 8888:localhost:8888 &amp;lt;username&amp;gt;@&amp;lt;ip address&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;で再度リモートサーバーに接続し、&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;jupyter notebook&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;を実行し、起動。&lt;/p&gt;
&lt;p&gt;クライアント側のブラウザから、
&lt;code&gt;http://localhost:8888&lt;/code&gt;にアクセス。jupyter notebook ぽい画面が表示され、sha1 値  生成時に入力したパスワード入力すると、認証が成功し、クライアント側のブラウザからリモートサーバー上で動く Jupyter Notebook を利用できます。&lt;/p&gt;
&lt;h3&gt;参考&lt;/h3&gt;
&lt;p&gt;https://qiita.com/Miggy/items/5466a2c1e968602f3ebe&lt;/p&gt;</content><category term="Python"></category><category term="Python SSh"></category></entry></feed>